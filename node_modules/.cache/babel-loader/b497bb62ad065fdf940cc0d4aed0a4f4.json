{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useTimeseriesMetadataKeysAggregateQuery } from '../../service';\nimport { mapFiltersToTimeseriesAdvancedFilters } from '../transformers';\nexport const useTimeseriesMetadataFilterOptions = ({\n  searchQuery,\n  filter,\n  query\n}) => {\n  _s();\n  const {\n    data = [],\n    isLoading,\n    isError\n  } = useTimeseriesMetadataKeysAggregateQuery({\n    query,\n    options: {\n      keepPreviousData: true\n    }\n  });\n  const omittedFilter = omit(filter, 'metadata');\n  const {\n    data: dynamicData = []\n  } = useTimeseriesMetadataKeysAggregateQuery({\n    query,\n    advancedFilter: mapFiltersToTimeseriesAdvancedFilters(omittedFilter, searchQuery),\n    filter: getAssetSubtreeIdFilter(omittedFilter),\n    options: {\n      keepPreviousData: true\n    }\n  });\n  const options = useMemo(() => {\n    return mergeDynamicFilterOptions(data, dynamicData);\n  }, [data, dynamicData]);\n  return {\n    options,\n    isLoading,\n    isError\n  };\n};\n_s(useTimeseriesMetadataFilterOptions, \"nqrptyxx9cJex7nTSODS4Xnx7AA=\", false, function () {\n  return [useTimeseriesMetadataKeysAggregateQuery, useTimeseriesMetadataKeysAggregateQuery];\n});","map":{"version":3,"names":["useMemo","omit","getAssetSubtreeIdFilter","mergeDynamicFilterOptions","useTimeseriesMetadataKeysAggregateQuery","mapFiltersToTimeseriesAdvancedFilters","useTimeseriesMetadataFilterOptions","searchQuery","filter","query","data","isLoading","isError","options","keepPreviousData","omittedFilter","dynamicData","advancedFilter"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/internal/queries/useTimeseriesMetadataFilterOptions.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport omit from 'lodash/omit';\n\nimport { InternalTimeseriesFilters } from '@data-exploration-lib/core';\n\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useTimeseriesMetadataKeysAggregateQuery } from '../../service';\nimport { mapFiltersToTimeseriesAdvancedFilters } from '../transformers';\n\ninterface Props {\n  filter?: InternalTimeseriesFilters;\n  searchQuery?: string;\n  query?: string;\n}\n\nexport const useTimeseriesMetadataFilterOptions = ({\n  searchQuery,\n  filter,\n  query,\n}: Props) => {\n  const {\n    data = [],\n    isLoading,\n    isError,\n  } = useTimeseriesMetadataKeysAggregateQuery({\n    query,\n    options: { keepPreviousData: true },\n  });\n\n  const omittedFilter = omit(filter, 'metadata');\n\n  const { data: dynamicData = [] } = useTimeseriesMetadataKeysAggregateQuery({\n    query,\n    advancedFilter: mapFiltersToTimeseriesAdvancedFilters(\n      omittedFilter,\n      searchQuery\n    ),\n    filter: getAssetSubtreeIdFilter(omittedFilter),\n    options: { keepPreviousData: true },\n  });\n\n  const options = useMemo(() => {\n    return mergeDynamicFilterOptions(data, dynamicData);\n  }, [data, dynamicData]);\n\n  return {\n    options,\n    isLoading,\n    isError,\n  };\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAOC,IAAI,MAAM,aAAa;AAI9B,SAASC,uBAAuB,QAAQ,gBAAgB;AACxD,SAASC,yBAAyB,QAAQ,0CAA0C;AACpF,SAASC,uCAAuC,QAAQ,eAAe;AACvE,SAASC,qCAAqC,QAAQ,iBAAiB;AAQvE,OAAO,MAAMC,kCAAkC,GAAG,CAAC;EACjDC,WAAW;EACXC,MAAM;EACNC;AACK,CAAC,KAAK;EAAA;EACX,MAAM;IACJC,IAAI,GAAG,EAAE;IACTC,SAAS;IACTC;EACF,CAAC,GAAGR,uCAAuC,CAAC;IAC1CK,KAAK;IACLI,OAAO,EAAE;MAAEC,gBAAgB,EAAE;IAAK;EACpC,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGd,IAAI,CAACO,MAAM,EAAE,UAAU,CAAC;EAE9C,MAAM;IAAEE,IAAI,EAAEM,WAAW,GAAG;EAAG,CAAC,GAAGZ,uCAAuC,CAAC;IACzEK,KAAK;IACLQ,cAAc,EAAEZ,qCAAqC,CACnDU,aAAa,EACbR,WAAW,CACZ;IACDC,MAAM,EAAEN,uBAAuB,CAACa,aAAa,CAAC;IAC9CF,OAAO,EAAE;MAAEC,gBAAgB,EAAE;IAAK;EACpC,CAAC,CAAC;EAEF,MAAMD,OAAO,GAAGb,OAAO,CAAC,MAAM;IAC5B,OAAOG,yBAAyB,CAACO,IAAI,EAAEM,WAAW,CAAC;EACrD,CAAC,EAAE,CAACN,IAAI,EAAEM,WAAW,CAAC,CAAC;EAEvB,OAAO;IACLH,OAAO;IACPF,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAAC,GAnCWN,kCAAkC;EAAA,QASzCF,uCAAuC,EAORA,uCAAuC;AAAA"},"metadata":{},"sourceType":"module"}