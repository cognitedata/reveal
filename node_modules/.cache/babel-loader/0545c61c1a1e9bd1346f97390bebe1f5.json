{"ast":null,"code":"import isDate from 'lodash/isDate';\nimport isNumber from 'lodash/isNumber';\nimport { getDataAsArray } from './getDataAsArray';\nexport const getPlotRange = data => {\n  const {\n    x,\n    y\n  } = getDataAsArray(data).reduce((result, {\n    x,\n    y\n  }) => {\n    return {\n      x: [...result.x, ...x.map(getPointValue)],\n      y: [...result.y, ...y.map(getPointValue)]\n    };\n  }, {\n    x: [],\n    y: []\n  });\n  return {\n    x: [Math.min(...x), Math.max(...x)],\n    y: [Math.min(...y), Math.max(...y)]\n  };\n};\nexport const getPointValue = (value, index) => {\n  if (isNumber(value)) {\n    return value;\n  }\n  if (isDate(value)) {\n    return value.getTime();\n  }\n  return index;\n};","map":{"version":3,"names":["isDate","isNumber","getDataAsArray","getPlotRange","data","x","y","reduce","result","map","getPointValue","Math","min","max","value","index","getTime"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/utils/getPlotRange.ts"],"sourcesContent":["import isDate from 'lodash/isDate';\nimport isNumber from 'lodash/isNumber';\n\nimport { PlotRange, Data, ValueType } from '../types';\n\nimport { getDataAsArray } from './getDataAsArray';\n\nexport const getPlotRange = (data: Data | Data[]): PlotRange => {\n  const { x, y } = getDataAsArray(data).reduce<{\n    x: number[];\n    y: number[];\n  }>(\n    (result, { x, y }) => {\n      return {\n        x: [...result.x, ...x.map(getPointValue)],\n        y: [...result.y, ...y.map(getPointValue)],\n      };\n    },\n    { x: [], y: [] }\n  );\n\n  return {\n    x: [Math.min(...x), Math.max(...x)],\n    y: [Math.min(...y), Math.max(...y)],\n  };\n};\n\nexport const getPointValue = (value: ValueType, index: number): number => {\n  if (isNumber(value)) {\n    return value;\n  }\n\n  if (isDate(value)) {\n    return value.getTime();\n  }\n\n  return index;\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,OAAOC,QAAQ,MAAM,iBAAiB;AAItC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,YAAY,GAAIC,IAAmB,IAAgB;EAC9D,MAAM;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGJ,cAAc,CAACE,IAAI,CAAC,CAACG,MAAM,CAI1C,CAACC,MAAM,EAAE;IAAEH,CAAC;IAAEC;EAAE,CAAC,KAAK;IACpB,OAAO;MACLD,CAAC,EAAE,CAAC,GAAGG,MAAM,CAACH,CAAC,EAAE,GAAGA,CAAC,CAACI,GAAG,CAACC,aAAa,CAAC,CAAC;MACzCJ,CAAC,EAAE,CAAC,GAAGE,MAAM,CAACF,CAAC,EAAE,GAAGA,CAAC,CAACG,GAAG,CAACC,aAAa,CAAC;IAC1C,CAAC;EACH,CAAC,EACD;IAAEL,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,CACjB;EAED,OAAO;IACLD,CAAC,EAAE,CAACM,IAAI,CAACC,GAAG,CAAC,GAAGP,CAAC,CAAC,EAAEM,IAAI,CAACE,GAAG,CAAC,GAAGR,CAAC,CAAC,CAAC;IACnCC,CAAC,EAAE,CAACK,IAAI,CAACC,GAAG,CAAC,GAAGN,CAAC,CAAC,EAAEK,IAAI,CAACE,GAAG,CAAC,GAAGP,CAAC,CAAC;EACpC,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,CAACI,KAAgB,EAAEC,KAAa,KAAa;EACxE,IAAId,QAAQ,CAACa,KAAK,CAAC,EAAE;IACnB,OAAOA,KAAK;EACd;EAEA,IAAId,MAAM,CAACc,KAAK,CAAC,EAAE;IACjB,OAAOA,KAAK,CAACE,OAAO,EAAE;EACxB;EAEA,OAAOD,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module"}