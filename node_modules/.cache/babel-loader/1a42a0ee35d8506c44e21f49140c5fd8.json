{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/Plot/Plot.tsx\",\n  _s = $RefreshSig$();\nimport { useImperativeHandle, useRef, useMemo, useCallback, useEffect, memo, forwardRef } from 'react';\nimport PlotlyPlot from 'react-plotly.js';\nimport debounce from 'lodash/debounce';\nimport { useAxisTickCount } from '../../hooks/useAxisTickCount';\nimport { useDeepMemo } from '../../hooks/useDeep';\nimport { useHandlePlotRange } from '../../hooks/useHandlePlotRange';\nimport { useLayoutFixedRangeConfig } from '../../hooks/useLayoutFixedRangeConfig';\nimport { useLayoutMargin } from '../../hooks/useLayoutMargin';\nimport { usePlotData } from '../../hooks/usePlotData';\nimport { usePlotDataRange } from '../../hooks/usePlotDataRange';\nimport { usePlotDataRangeInitial } from '../../hooks/usePlotDataRangeInitial';\nimport { usePlotRevision } from '../../hooks/usePlotRevision';\nimport { getPlotRangeFromPlotSelectionEvent, getPlotRangeFromRelayoutEvent } from '../../utils/extractPlotRange';\nimport { getCommonAxisLayoutProps } from '../../utils/getCommonAxisLayoutProps';\nimport { getPlotlyHoverMode } from '../../utils/getPlotlyHoverMode';\nimport { Loader } from '../Loader';\nimport { PlotWrapper } from './elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Plot = /*#__PURE__*/_s( /*#__PURE__*/memo(_c2 = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  data,\n  dataRevision,\n  isLoading,\n  variant,\n  xAxis,\n  yAxis,\n  presetRange,\n  layout,\n  config,\n  isCursorOnPlot,\n  height,\n  onHover,\n  onUnhover,\n  onSelecting,\n  onSelected,\n  onRangeChange\n}, ref) => {\n  _s();\n  const {\n    showTicks,\n    showMarkers\n  } = layout;\n  const {\n    responsive,\n    scrollZoom,\n    pan\n  } = config;\n  const plotRef = useRef(null);\n  const plotRevision = usePlotRevision(plotRef);\n  const {\n    plotData,\n    isEmptyData\n  } = usePlotData({\n    data,\n    showMarkers,\n    variant,\n    presetRange\n  });\n  const {\n    tickCount,\n    updateAxisTickCount\n  } = useAxisTickCount({\n    x: xAxis?.tickCount,\n    y: yAxis?.tickCount\n  });\n  const {\n    margin,\n    updateLayoutMargin\n  } = useLayoutMargin({\n    layout,\n    xAxis,\n    yAxis\n  });\n  const plotDataRange = usePlotDataRange({\n    data\n  });\n  const initialRange = usePlotDataRangeInitial({\n    plotDataRange,\n    dataRevision\n  });\n  const {\n    range,\n    setPlotRange,\n    resetPlotRange\n  } = useHandlePlotRange({\n    initialRange,\n    onRangeChange\n  });\n  const {\n    fixedRange,\n    fixedRangeLayoutConfig,\n    cursor\n  } = useLayoutFixedRangeConfig(config, isCursorOnPlot);\n  useImperativeHandle(ref, () => {\n    return {\n      getPlotRange: () => range,\n      setPlotRange,\n      resetPlotRange\n    };\n  }, [range, setPlotRange, resetPlotRange]);\n  const plotLayout = useDeepMemo(() => ({\n    xaxis: {\n      ...getCommonAxisLayoutProps('x', xAxis, layout),\n      nticks: tickCount.x,\n      range: presetRange?.x || range?.x,\n      fixedrange: fixedRange.x\n    },\n    yaxis: {\n      ...getCommonAxisLayoutProps('y', yAxis, layout),\n      nticks: tickCount.y,\n      range: presetRange?.y || range?.y,\n      fixedrange: fixedRange.y\n    },\n    ...fixedRangeLayoutConfig,\n    margin,\n    hovermode: getPlotlyHoverMode(config.hoverMode),\n    autosize: responsive\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [tickCount, presetRange, range, fixedRange, fixedRangeLayoutConfig]);\n  const isScrollZoomEnabled = Boolean(scrollZoom);\n  const isPanEnabled = Boolean(pan);\n  const plotConfig = useMemo(() => ({\n    scrollZoom: isScrollZoomEnabled && isCursorOnPlot,\n    showAxisDragHandles: isPanEnabled,\n    displayModeBar: false\n  }), [isScrollZoomEnabled, isPanEnabled, isCursorOnPlot]);\n  const handleManualRelayout = useCallback(() => {\n    updateAxisTickCount(plotRef.current, isEmptyData);\n    updateLayoutMargin(plotRef.current);\n  }, [isEmptyData, updateAxisTickCount, updateLayoutMargin]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleRelayout = useCallback(debounce(event => {\n    const plotRange = getPlotRangeFromRelayoutEvent(event);\n    setPlotRange(plotRange);\n    handleManualRelayout();\n  }, 500), [plotDataRange, setPlotRange, handleManualRelayout]);\n  const handleSelected = useCallback(event => {\n    const plotRange = getPlotRangeFromPlotSelectionEvent(event);\n    setPlotRange(plotRange);\n    onSelected?.(event);\n  }, [setPlotRange, onSelected]);\n  const handleResetPlotZoom = useCallback(() => {\n    resetPlotRange();\n    handleManualRelayout();\n  }, [resetPlotRange, handleManualRelayout]);\n  useEffect(() => {\n    /**\n     * We need this side-effect to be triggered slightly after the container changes.\n     * Otherwise the calculations are made with the old measurements.\n     */\n    setTimeout(() => handleManualRelayout());\n  }, [handleManualRelayout, plotData, plotRevision]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      variant: variant,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PlotWrapper, {\n    ref: plotRef,\n    showticks: showTicks,\n    cursor: cursor,\n    variant: variant,\n    children: /*#__PURE__*/_jsxDEV(PlotlyPlot, {\n      data: plotData,\n      revision: plotRevision,\n      layout: plotLayout,\n      config: plotConfig,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      useResizeHandler: responsive,\n      onInitialized: handleManualRelayout,\n      onHover: onHover,\n      onUnhover: onUnhover,\n      onRelayout: handleRelayout,\n      onSelecting: onSelecting,\n      onSelected: handleSelected,\n      onDeselect: handleResetPlotZoom,\n      onDoubleClick: handleResetPlotZoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}, \"y8+J1HmQ2y3zC0r++93FfgnOpvE=\", false, function () {\n  return [usePlotRevision, usePlotData, useAxisTickCount, useLayoutMargin, usePlotDataRange, usePlotDataRangeInitial, useHandlePlotRange, useLayoutFixedRangeConfig, useDeepMemo];\n})), \"y8+J1HmQ2y3zC0r++93FfgnOpvE=\", false, function () {\n  return [usePlotRevision, usePlotData, useAxisTickCount, useLayoutMargin, usePlotDataRange, usePlotDataRangeInitial, useHandlePlotRange, useLayoutFixedRangeConfig, useDeepMemo];\n})), \"y8+J1HmQ2y3zC0r++93FfgnOpvE=\", false, function () {\n  return [usePlotRevision, usePlotData, useAxisTickCount, useLayoutMargin, usePlotDataRange, usePlotDataRangeInitial, useHandlePlotRange, useLayoutFixedRangeConfig, useDeepMemo];\n});\n_c3 = Plot;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Plot$memo$forwardRef\");\n$RefreshReg$(_c2, \"Plot$memo\");\n$RefreshReg$(_c3, \"Plot\");","map":{"version":3,"names":["useImperativeHandle","useRef","useMemo","useCallback","useEffect","memo","forwardRef","PlotlyPlot","debounce","useAxisTickCount","useDeepMemo","useHandlePlotRange","useLayoutFixedRangeConfig","useLayoutMargin","usePlotData","usePlotDataRange","usePlotDataRangeInitial","usePlotRevision","getPlotRangeFromPlotSelectionEvent","getPlotRangeFromRelayoutEvent","getCommonAxisLayoutProps","getPlotlyHoverMode","Loader","PlotWrapper","Plot","data","dataRevision","isLoading","variant","xAxis","yAxis","presetRange","layout","config","isCursorOnPlot","height","onHover","onUnhover","onSelecting","onSelected","onRangeChange","ref","showTicks","showMarkers","responsive","scrollZoom","pan","plotRef","plotRevision","plotData","isEmptyData","tickCount","updateAxisTickCount","x","y","margin","updateLayoutMargin","plotDataRange","initialRange","range","setPlotRange","resetPlotRange","fixedRange","fixedRangeLayoutConfig","cursor","getPlotRange","plotLayout","xaxis","nticks","fixedrange","yaxis","hovermode","hoverMode","autosize","isScrollZoomEnabled","Boolean","isPanEnabled","plotConfig","showAxisDragHandles","displayModeBar","handleManualRelayout","current","handleRelayout","event","plotRange","handleSelected","handleResetPlotZoom","setTimeout","width"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/Plot/Plot.tsx"],"sourcesContent":["import {\n  useImperativeHandle,\n  useRef,\n  useMemo,\n  useCallback,\n  useEffect,\n  memo,\n  forwardRef,\n} from 'react';\nimport PlotlyPlot from 'react-plotly.js';\n\nimport debounce from 'lodash/debounce';\nimport {\n  Layout as PlotlyLayout,\n  Config as PlotlyConfig,\n  PlotHoverEvent,\n  PlotMouseEvent,\n  PlotSelectionEvent,\n  PlotRelayoutEvent,\n} from 'plotly.js';\n\nimport { useAxisTickCount } from '../../hooks/useAxisTickCount';\nimport { useDeepMemo } from '../../hooks/useDeep';\nimport { useHandlePlotRange } from '../../hooks/useHandlePlotRange';\nimport { useLayoutFixedRangeConfig } from '../../hooks/useLayoutFixedRangeConfig';\nimport { useLayoutMargin } from '../../hooks/useLayoutMargin';\nimport { usePlotData } from '../../hooks/usePlotData';\nimport { usePlotDataRange } from '../../hooks/usePlotDataRange';\nimport { usePlotDataRangeInitial } from '../../hooks/usePlotDataRangeInitial';\nimport { usePlotRevision } from '../../hooks/usePlotRevision';\nimport {\n  Config,\n  Layout,\n  LineChartProps,\n  PlotRange,\n  PresetPlotRange,\n} from '../../types';\nimport {\n  getPlotRangeFromPlotSelectionEvent,\n  getPlotRangeFromRelayoutEvent,\n} from '../../utils/extractPlotRange';\nimport { getCommonAxisLayoutProps } from '../../utils/getCommonAxisLayoutProps';\nimport { getPlotlyHoverMode } from '../../utils/getPlotlyHoverMode';\nimport { Loader } from '../Loader';\n\nimport { PlotWrapper } from './elements';\n\nexport interface PlotElement {\n  getPlotRange: () => PlotRange | undefined;\n  setPlotRange: (range: PlotRange) => void;\n  resetPlotRange: () => void;\n}\n\nexport interface PlotProps\n  extends Pick<\n    LineChartProps,\n    | 'data'\n    | 'dataRevision'\n    | 'isLoading'\n    | 'xAxis'\n    | 'yAxis'\n    | 'variant'\n    | 'onRangeChange'\n  > {\n  presetRange?: PresetPlotRange;\n  layout: Layout;\n  config: Config;\n  isCursorOnPlot: boolean;\n  height?: React.CSSProperties['height'];\n  onHover?: (event: PlotHoverEvent) => void;\n  onUnhover?: (event: PlotMouseEvent) => void;\n  onSelecting?: (event?: PlotSelectionEvent) => void;\n  onSelected?: (event?: PlotSelectionEvent) => void;\n}\n\nexport const Plot = memo(\n  forwardRef<PlotElement, PlotProps>(\n    (\n      {\n        data,\n        dataRevision,\n        isLoading,\n        variant,\n        xAxis,\n        yAxis,\n        presetRange,\n        layout,\n        config,\n        isCursorOnPlot,\n        height,\n        onHover,\n        onUnhover,\n        onSelecting,\n        onSelected,\n        onRangeChange,\n      },\n      ref\n    ) => {\n      const { showTicks, showMarkers } = layout;\n      const { responsive, scrollZoom, pan } = config;\n\n      const plotRef = useRef<HTMLDivElement>(null);\n\n      const plotRevision = usePlotRevision(plotRef);\n\n      const { plotData, isEmptyData } = usePlotData({\n        data,\n        showMarkers,\n        variant,\n        presetRange,\n      });\n\n      const { tickCount, updateAxisTickCount } = useAxisTickCount({\n        x: xAxis?.tickCount,\n        y: yAxis?.tickCount,\n      });\n\n      const { margin, updateLayoutMargin } = useLayoutMargin({\n        layout,\n        xAxis,\n        yAxis,\n      });\n\n      const plotDataRange = usePlotDataRange({ data });\n\n      const initialRange = usePlotDataRangeInitial({\n        plotDataRange,\n        dataRevision,\n      });\n\n      const { range, setPlotRange, resetPlotRange } = useHandlePlotRange({\n        initialRange,\n        onRangeChange,\n      });\n\n      const { fixedRange, fixedRangeLayoutConfig, cursor } =\n        useLayoutFixedRangeConfig(config, isCursorOnPlot);\n\n      useImperativeHandle(\n        ref,\n        () => {\n          return {\n            getPlotRange: () => range,\n            setPlotRange,\n            resetPlotRange,\n          };\n        },\n        [range, setPlotRange, resetPlotRange]\n      );\n\n      const plotLayout: Partial<PlotlyLayout> = useDeepMemo(\n        () => ({\n          xaxis: {\n            ...getCommonAxisLayoutProps('x', xAxis, layout),\n            nticks: tickCount.x,\n            range: presetRange?.x || range?.x,\n            fixedrange: fixedRange.x,\n          },\n          yaxis: {\n            ...getCommonAxisLayoutProps('y', yAxis, layout),\n            nticks: tickCount.y,\n            range: presetRange?.y || range?.y,\n            fixedrange: fixedRange.y,\n          },\n          ...fixedRangeLayoutConfig,\n          margin,\n          hovermode: getPlotlyHoverMode(config.hoverMode),\n          autosize: responsive,\n        }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [tickCount, presetRange, range, fixedRange, fixedRangeLayoutConfig]\n      );\n\n      const isScrollZoomEnabled = Boolean(scrollZoom);\n      const isPanEnabled = Boolean(pan);\n\n      const plotConfig: Partial<PlotlyConfig> = useMemo(\n        () => ({\n          scrollZoom: isScrollZoomEnabled && isCursorOnPlot,\n          showAxisDragHandles: isPanEnabled,\n          displayModeBar: false,\n        }),\n        [isScrollZoomEnabled, isPanEnabled, isCursorOnPlot]\n      );\n\n      const handleManualRelayout = useCallback(() => {\n        updateAxisTickCount(plotRef.current, isEmptyData);\n        updateLayoutMargin(plotRef.current);\n      }, [isEmptyData, updateAxisTickCount, updateLayoutMargin]);\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const handleRelayout = useCallback(\n        debounce((event: PlotRelayoutEvent) => {\n          const plotRange = getPlotRangeFromRelayoutEvent(event);\n          setPlotRange(plotRange);\n          handleManualRelayout();\n        }, 500),\n        [plotDataRange, setPlotRange, handleManualRelayout]\n      );\n\n      const handleSelected = useCallback(\n        (event?: PlotSelectionEvent) => {\n          const plotRange = getPlotRangeFromPlotSelectionEvent(event);\n          setPlotRange(plotRange);\n          onSelected?.(event);\n        },\n        [setPlotRange, onSelected]\n      );\n\n      const handleResetPlotZoom = useCallback(() => {\n        resetPlotRange();\n        handleManualRelayout();\n      }, [resetPlotRange, handleManualRelayout]);\n\n      useEffect(() => {\n        /**\n         * We need this side-effect to be triggered slightly after the container changes.\n         * Otherwise the calculations are made with the old measurements.\n         */\n        setTimeout(() => handleManualRelayout());\n      }, [handleManualRelayout, plotData, plotRevision]);\n\n      if (isLoading) {\n        return <Loader variant={variant} height={height} />;\n      }\n\n      return (\n        <PlotWrapper\n          ref={plotRef}\n          showticks={showTicks}\n          cursor={cursor}\n          variant={variant}\n        >\n          <PlotlyPlot\n            data={plotData}\n            revision={plotRevision}\n            layout={plotLayout}\n            config={plotConfig}\n            style={{ width: '100%', height: '100%' }}\n            useResizeHandler={responsive}\n            onInitialized={handleManualRelayout}\n            onHover={onHover}\n            onUnhover={onUnhover}\n            onRelayout={handleRelayout}\n            onSelecting={onSelecting}\n            onSelected={handleSelected}\n            onDeselect={handleResetPlotZoom}\n            onDoubleClick={handleResetPlotZoom}\n          />\n        </PlotWrapper>\n      );\n    }\n  )\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}