{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/HoverLayer/HoverLineInfo.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport head from 'lodash/head';\nimport isUndefined from 'lodash/isUndefined';\nimport { getLineInfoPosition } from '../../utils/getLineInfoPosition';\nimport { getPointCustomData } from '../../utils/getPointCustomData';\nimport { LineInfo, LineInfoPointer, LineInfoWrapper } from './elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LINE_INFO_POINTER_SIZE = 9;\nexport const HoverLineInfo = ({\n  chartRef,\n  isVisible,\n  position,\n  plotStyleData,\n  plotHoverEvent,\n  formatHoverLineInfo\n}) => {\n  _s();\n  const lineInfoRef = useRef(null);\n  const [lineInfoWidth, setLineInfoWidth] = useState();\n  const updateLineInfoWidth = useCallback(() => {\n    setLineInfoWidth(lineInfoRef.current?.clientWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plotHoverEvent, lineInfoRef.current?.clientWidth]);\n  useEffect(() => {\n    updateLineInfoWidth();\n  }, [updateLineInfoWidth]);\n  const {\n    offsetTop,\n    height\n  } = plotStyleData;\n  const lineInfoLeft = getLineInfoPosition(chartRef.current, position?.x, lineInfoWidth);\n  const point = head(plotHoverEvent?.points);\n  const lineInfoText = useMemo(() => {\n    if (!point) {\n      return null;\n    }\n    if (formatHoverLineInfo) {\n      return formatHoverLineInfo({\n        x: point.x,\n        y: point.y,\n        name: point.data.name,\n        customData: getPointCustomData(point)\n      });\n    }\n    return String(point.x);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [point?.curveNumber, point?.pointNumber]);\n  if (!plotHoverEvent) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(LineInfoWrapper, {\n    style: {\n      opacity: isVisible ? 1 : 0,\n      display: isVisible ? 'initial' : 'none',\n      visibility: isUndefined(lineInfoLeft) ? 'hidden' : 'visible'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LineInfoPointer, {\n      style: {\n        left: position?.x,\n        top: offsetTop + height - LINE_INFO_POINTER_SIZE\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineInfo, {\n      ref: lineInfoRef,\n      style: {\n        left: lineInfoLeft,\n        top: offsetTop + height\n      },\n      children: lineInfoText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(HoverLineInfo, \"URGPUFGdmifnWSaz+vaJq7ioQa0=\");\n_c = HoverLineInfo;\nvar _c;\n$RefreshReg$(_c, \"HoverLineInfo\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","head","isUndefined","getLineInfoPosition","getPointCustomData","LineInfo","LineInfoPointer","LineInfoWrapper","LINE_INFO_POINTER_SIZE","HoverLineInfo","chartRef","isVisible","position","plotStyleData","plotHoverEvent","formatHoverLineInfo","lineInfoRef","lineInfoWidth","setLineInfoWidth","updateLineInfoWidth","current","clientWidth","offsetTop","height","lineInfoLeft","x","point","points","lineInfoText","y","name","data","customData","String","curveNumber","pointNumber","opacity","display","visibility","left","top"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/HoverLayer/HoverLineInfo.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport head from 'lodash/head';\nimport isUndefined from 'lodash/isUndefined';\nimport { PlotHoverEvent } from 'plotly.js';\n\nimport { Coordinate, HoverLineData } from '../../types';\nimport { getLineInfoPosition } from '../../utils/getLineInfoPosition';\nimport { getPointCustomData } from '../../utils/getPointCustomData';\n\nimport { LineInfo, LineInfoPointer, LineInfoWrapper } from './elements';\n\nexport const LINE_INFO_POINTER_SIZE = 9;\n\nexport interface HoverLineInfoProps {\n  chartRef: React.RefObject<HTMLDivElement>;\n  isVisible: boolean;\n  position?: Coordinate;\n  plotStyleData: Record<string, number>;\n  plotHoverEvent?: PlotHoverEvent;\n  formatHoverLineInfo?: (props: HoverLineData) => string;\n}\n\nexport const HoverLineInfo: React.FC<HoverLineInfoProps> = ({\n  chartRef,\n  isVisible,\n  position,\n  plotStyleData,\n  plotHoverEvent,\n  formatHoverLineInfo,\n}) => {\n  const lineInfoRef = useRef<HTMLDivElement>(null);\n\n  const [lineInfoWidth, setLineInfoWidth] = useState<number>();\n\n  const updateLineInfoWidth = useCallback(() => {\n    setLineInfoWidth(lineInfoRef.current?.clientWidth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plotHoverEvent, lineInfoRef.current?.clientWidth]);\n\n  useEffect(() => {\n    updateLineInfoWidth();\n  }, [updateLineInfoWidth]);\n\n  const { offsetTop, height } = plotStyleData;\n  const lineInfoLeft = getLineInfoPosition(\n    chartRef.current,\n    position?.x,\n    lineInfoWidth\n  );\n\n  const point = head(plotHoverEvent?.points);\n\n  const lineInfoText = useMemo(() => {\n    if (!point) {\n      return null;\n    }\n\n    if (formatHoverLineInfo) {\n      return formatHoverLineInfo({\n        x: point.x,\n        y: point.y,\n        name: point.data.name,\n        customData: getPointCustomData(point),\n      });\n    }\n\n    return String(point.x);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [point?.curveNumber, point?.pointNumber]);\n\n  if (!plotHoverEvent) {\n    return null;\n  }\n\n  return (\n    <LineInfoWrapper\n      style={{\n        opacity: isVisible ? 1 : 0,\n        display: isVisible ? 'initial' : 'none',\n        visibility: isUndefined(lineInfoLeft) ? 'hidden' : 'visible',\n      }}\n    >\n      <LineInfoPointer\n        style={{\n          left: position?.x,\n          top: offsetTop + height - LINE_INFO_POINTER_SIZE,\n        }}\n      />\n      <LineInfo\n        ref={lineInfoRef}\n        style={{\n          left: lineInfoLeft,\n          top: offsetTop + height,\n        }}\n      >\n        {lineInfoText}\n      </LineInfo>\n    </LineInfoWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}