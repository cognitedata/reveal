{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { getTimeseriesByIds } from '../../service';\nexport const useTimeseriesByIdsQuery = (ids, options) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.timeseriesById(ids), () => getTimeseriesByIds(sdk, ids || []), options);\n};\n_s(useTimeseriesByIdsQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","useSDK","queryKeys","getTimeseriesByIds","useTimeseriesByIdsQuery","ids","options","sdk","timeseriesById"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/internal/queries/useTimeseriesByIdsQuery.ts"],"sourcesContent":["import { UseQueryOptions, useQuery } from '@tanstack/react-query';\n\nimport { IdEither } from '@cognite/sdk';\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { queryKeys } from '../../../queryKeys';\nimport { getTimeseriesByIds } from '../../service';\nimport { InternalTimeseriesData } from '../types';\n\nexport const useTimeseriesByIdsQuery = <T = InternalTimeseriesData>(\n  ids?: IdEither[],\n  options?: Omit<\n    UseQueryOptions<InternalTimeseriesData[], any, T[]>,\n    'queryKey'\n  >\n) => {\n  const sdk = useSDK();\n  return useQuery(\n    queryKeys.timeseriesById(ids),\n    () => getTimeseriesByIds(sdk, ids || []),\n    options\n  );\n};\n"],"mappings":";AAAA,SAA0BA,QAAQ,QAAQ,uBAAuB;AAGjE,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,kBAAkB,QAAQ,eAAe;AAGlD,OAAO,MAAMC,uBAAuB,GAAG,CACrCC,GAAgB,EAChBC,OAGC,KACE;EAAA;EACH,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACpB,OAAOD,QAAQ,CACbE,SAAS,CAACM,cAAc,CAACH,GAAG,CAAC,EAC7B,MAAMF,kBAAkB,CAACI,GAAG,EAAEF,GAAG,IAAI,EAAE,CAAC,EACxCC,OAAO,CACR;AACH,CAAC;AAAC,GAbWF,uBAAuB;EAAA,QAOtBH,MAAM,EACXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}