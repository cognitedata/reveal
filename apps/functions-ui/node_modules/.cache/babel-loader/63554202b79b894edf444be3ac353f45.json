{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/DateRangePicker/DatePicker/PivotRangePicker.tsx\";\n/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport { Body, Input } from '@cognite/cogs.js';\nimport { DatePickerInput, renderCustomHeader } from './Common';\nimport { DatePickerWrapper, PivotRangeDirection, PivotRangeInput, PivotRangePickerWrapper, PivotRangeUnit, SpacedRow } from './elements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst directions = [{\n  label: 'before',\n  value: 'before'\n}, {\n  label: 'after',\n  value: 'after'\n}, {\n  label: 'before and after',\n  value: 'both'\n}];\nexport const PivotRangePicker = ({\n  range: {\n    date,\n    unit,\n    amount,\n    direction,\n    type\n  },\n  onRangeChanged,\n  units = ['minute', 'hour', 'day', 'week', 'month', 'year']\n}) => {\n  const options = units.map(key => ({\n    value: key,\n    label: Number(amount) > 1 ? `${key}s` : key\n  }));\n  const onChange = changes => {\n    onRangeChanged({\n      date,\n      unit,\n      amount,\n      direction,\n      type,\n      ...changes\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PivotRangePickerWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Body, {\n      children: \"Show me data from\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpacedRow, {\n      style: {\n        marginBottom: 8,\n        marginTop: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(PivotRangeInput, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"tel\",\n          variant: \"noBorder\",\n          value: amount,\n          style: {\n            width: '100%'\n          },\n          onChange: ev => {\n            const {\n              value\n            } = ev.target;\n            const number = +value;\n            if (!Number.isNaN(number)) {\n              onChange({\n                amount: value\n              });\n            }\n          },\n          onBlur: () => {\n            if (amount === '') onChange({\n              amount: 0\n            });else onChange({\n              amount: Number(amount)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PivotRangeUnit, {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: options.find(el => el.value === unit)?.value,\n          onChange: value => {\n            onChange({\n              unit: options[value.target.selectedIndex].value\n            });\n          },\n          className: \"cogs-select__control\",\n          children: options.map(duration => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: duration.value,\n            children: duration.label\n          }, duration.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PivotRangeDirection, {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: directions.find(el => el.value === direction)?.value,\n        onChange: value => {\n          onChange({\n            direction: directions[value.target.selectedIndex].value\n          });\n        },\n        className: \"cogs-select__control\",\n        children: directions.map(directionValue => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: directionValue.value,\n          children: directionValue.label\n        }, directionValue.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePickerInput, {\n      date: date,\n      onDateChange: newDate => onChange({\n        date: newDate\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePickerWrapper, {\n      mode: undefined,\n      style: {\n        marginTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactDatePicker, {\n        renderCustomHeader: renderCustomHeader(),\n        selected: date,\n        onChange: newDate => onChange({\n          date: newDate\n        }),\n        inline: true,\n        disabledKeyboardNavigation: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = PivotRangePicker;\nvar _c;\n$RefreshReg$(_c, \"PivotRangePicker\");","map":{"version":3,"names":["React","ReactDatePicker","Body","Input","DatePickerInput","renderCustomHeader","DatePickerWrapper","PivotRangeDirection","PivotRangeInput","PivotRangePickerWrapper","PivotRangeUnit","SpacedRow","directions","label","value","PivotRangePicker","range","date","unit","amount","direction","type","onRangeChanged","units","options","map","key","Number","onChange","changes","marginBottom","marginTop","width","ev","target","number","isNaN","find","el","selectedIndex","duration","directionValue","newDate","undefined"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/DateRangePicker/DatePicker/PivotRangePicker.tsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport dayjs from 'dayjs';\n\nimport { Body, Input } from '@cognite/cogs.js';\n\nimport { DatePickerInput, PivotRange, renderCustomHeader } from './Common';\nimport {\n  DatePickerWrapper,\n  PivotRangeDirection,\n  PivotRangeInput,\n  PivotRangePickerWrapper,\n  PivotRangeUnit,\n  SpacedRow,\n} from './elements';\n\nconst directions = [\n  {\n    label: 'before',\n    value: 'before',\n  },\n  {\n    label: 'after',\n    value: 'after',\n  },\n  {\n    label: 'before and after',\n    value: 'both',\n  },\n];\n\nexport type PivotRangePickerProps = {\n  range: PivotRange;\n  onRangeChanged: (range: PivotRange) => void;\n  units?: dayjs.OpUnitType[];\n};\n\nexport const PivotRangePicker = ({\n  range: { date, unit, amount, direction, type },\n  onRangeChanged,\n  units = ['minute', 'hour', 'day', 'week', 'month', 'year'],\n}: PivotRangePickerProps) => {\n  const options = units.map((key) => ({\n    value: key,\n    label: Number(amount) > 1 ? `${key}s` : key,\n  }));\n\n  const onChange = (changes: Partial<PivotRange>) => {\n    onRangeChanged({ date, unit, amount, direction, type, ...changes });\n  };\n\n  return (\n    <PivotRangePickerWrapper>\n      <Body>Show me data from</Body>\n      <SpacedRow style={{ marginBottom: 8, marginTop: 8 }}>\n        <PivotRangeInput>\n          <Input\n            type=\"tel\"\n            variant=\"noBorder\"\n            value={amount}\n            style={{ width: '100%' }}\n            onChange={(ev) => {\n              const { value } = ev.target;\n              const number = +value;\n\n              if (!Number.isNaN(number)) {\n                onChange({ amount: value });\n              }\n            }}\n            onBlur={() => {\n              if (amount === '') onChange({ amount: 0 });\n              else onChange({ amount: Number(amount) });\n            }}\n          />\n        </PivotRangeInput>\n        <PivotRangeUnit>\n          <select\n            value={options.find((el) => el.value === unit)?.value}\n            onChange={(value) => {\n              onChange({\n                unit: (\n                  options[value.target.selectedIndex] as {\n                    value: PivotRange['unit'];\n                  }\n                ).value,\n              });\n            }}\n            className=\"cogs-select__control\"\n          >\n            {options.map((duration) => (\n              <option value={duration.value} key={duration.value}>\n                {duration.label}\n              </option>\n            ))}\n          </select>\n        </PivotRangeUnit>\n      </SpacedRow>\n      <PivotRangeDirection>\n        <select\n          value={directions.find((el) => el.value === direction)?.value}\n          onChange={(value) => {\n            onChange({\n              direction: (\n                directions[value.target.selectedIndex] as {\n                  value: PivotRange['direction'];\n                }\n              ).value,\n            });\n          }}\n          className=\"cogs-select__control\"\n        >\n          {directions.map((directionValue) => (\n            <option value={directionValue.value} key={directionValue.label}>\n              {directionValue.label}\n            </option>\n          ))}\n        </select>\n      </PivotRangeDirection>\n      <DatePickerInput\n        date={date}\n        onDateChange={(newDate) => onChange({ date: newDate })}\n      />\n      <DatePickerWrapper mode={undefined} style={{ marginTop: 8 }}>\n        <ReactDatePicker\n          renderCustomHeader={renderCustomHeader()}\n          selected={date}\n          onChange={(newDate) => onChange({ date: newDate as Date })}\n          inline\n          disabledKeyboardNavigation\n        />\n      </DatePickerWrapper>\n    </PivotRangePickerWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}