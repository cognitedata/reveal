{"ast":null,"code":"export const getEventsAggregateCount = (sdk, {\n  filter,\n  advancedFilter\n}) => {\n  return sdk.post(`/api/v1/projects/${sdk.project}/events/aggregate`, {\n    headers: {\n      'cdf-version': 'alpha'\n    },\n    data: {\n      filter,\n      advancedFilter,\n      aggregate: 'count'\n    }\n  }).then(({\n    data\n  }) => {\n    return {\n      count: data.items[0].count\n    };\n  });\n};","map":{"version":3,"names":["getEventsAggregateCount","sdk","filter","advancedFilter","post","project","headers","data","aggregate","then","count","items"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/events/service/network/getEventsAggregateCount.ts"],"sourcesContent":["import {\n  AggregateResponse,\n  CogniteClient,\n  CursorResponse,\n  EventFilter,\n} from '@cognite/sdk';\n\nimport { AdvancedFilter } from '../../../builders';\nimport { EventsProperties } from '../../internal';\n\nexport const getEventsAggregateCount = (\n  sdk: CogniteClient,\n  {\n    filter,\n    advancedFilter,\n  }: {\n    filter?: EventFilter;\n    advancedFilter?: AdvancedFilter<EventsProperties>;\n  }\n) => {\n  return sdk\n    .post<CursorResponse<AggregateResponse[]>>(\n      `/api/v1/projects/${sdk.project}/events/aggregate`,\n      {\n        headers: {\n          'cdf-version': 'alpha',\n        },\n        data: {\n          filter,\n          advancedFilter,\n          aggregate: 'count',\n        },\n      }\n    )\n    .then(({ data }) => {\n      return { count: data.items[0].count };\n    });\n};\n"],"mappings":"AAUA,OAAO,MAAMA,uBAAuB,GAAG,CACrCC,GAAkB,EAClB;EACEC,MAAM;EACNC;AAIF,CAAC,KACE;EACH,OAAOF,GAAG,CACPG,IAAI,CACF,oBAAmBH,GAAG,CAACI,OAAQ,mBAAkB,EAClD;IACEC,OAAO,EAAE;MACP,aAAa,EAAE;IACjB,CAAC;IACDC,IAAI,EAAE;MACJL,MAAM;MACNC,cAAc;MACdK,SAAS,EAAE;IACb;EACF,CAAC,CACF,CACAC,IAAI,CAAC,CAAC;IAAEF;EAAK,CAAC,KAAK;IAClB,OAAO;MAAEG,KAAK,EAAEH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC,CAACD;IAAM,CAAC;EACvC,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}