{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/LineChart.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { Header } from './components/Header';\nimport { HoverLayer } from './components/HoverLayer';\nimport { Legend } from './components/Legend';\nimport { Plot } from './components/Plot';\nimport { Toolbar } from './components/Toolbar';\nimport { Tooltip } from './components/Tooltip';\nimport { LineChartWrapper } from './elements';\nimport { useCursorPosition } from './hooks/useCursorPosition';\nimport { usePlotHoverEvent } from './hooks/usePlotHoverEvent';\nimport { getConfig } from './utils/getConfig';\nimport { getLayout } from './utils/getLayout';\nimport { getStyleProperties } from './utils/getStyleProperties';\nimport { isContinuousHoverEnabled } from './utils/isContinuousHoverEnabled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LineChart = ({\n  data,\n  dataRevision,\n  isLoading,\n  xAxis,\n  yAxis,\n  range,\n  title,\n  subtitle,\n  variant,\n  layout: layoutProp = {},\n  config: configProp = {},\n  style: styleProp = {},\n  formatTooltipContent,\n  renderTooltipContent,\n  renderFilters,\n  renderActions,\n  formatHoverLineInfo,\n  onRangeChange\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const plotRef = useRef(null);\n  const [isPlotSelecting, setPlotSelecting] = useState(false);\n  const layout = getLayout(layoutProp, variant);\n  const config = getConfig(configProp, variant);\n  const style = getStyleProperties(styleProp, variant);\n  const {\n    legendPlacement,\n    showTitle,\n    showSubtitle,\n    showLegend,\n    showTooltip,\n    showFilters,\n    showActions\n  } = layout;\n  const {\n    buttonZoom,\n    hoverMode\n  } = config;\n  const {\n    backgroundColor\n  } = style;\n  const isContinuousHover = isContinuousHoverEnabled(hoverMode);\n  const {\n    cursorPosition,\n    isCursorOnPlot\n  } = useCursorPosition(chartRef);\n  const {\n    plotHoverEvent,\n    updatePlotHoverEvent,\n    setPlotUnhovered\n  } = usePlotHoverEvent({\n    chartRef,\n    isCursorOnPlot,\n    isContinuousHover,\n    isPlotSelecting\n  });\n  const handlePlotSelecting = useCallback(() => {\n    setPlotSelecting(true);\n  }, []);\n  const handlePlotSelected = useCallback(() => {\n    setPlotSelecting(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LineChartWrapper, {\n    ref: chartRef,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      plotRef: plotRef,\n      zoomDirectionConfig: buttonZoom,\n      showFilters: showFilters,\n      showActions: showActions,\n      renderFilters: renderFilters,\n      renderActions: renderActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: title,\n      subtitle: subtitle,\n      showTitle: showTitle,\n      showSubtitle: showSubtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plot, {\n      ref: plotRef,\n      data: data,\n      dataRevision: dataRevision,\n      isLoading: isLoading,\n      variant: variant,\n      xAxis: xAxis,\n      yAxis: yAxis,\n      presetRange: range,\n      layout: layout,\n      config: config,\n      isCursorOnPlot: isCursorOnPlot,\n      height: style.height,\n      onHover: updatePlotHoverEvent,\n      onUnhover: setPlotUnhovered,\n      onSelecting: handlePlotSelecting,\n      onSelected: handlePlotSelected,\n      onRangeChange: onRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HoverLayer, {\n      chartRef: chartRef,\n      layout: layout,\n      variant: variant,\n      plotHoverEvent: plotHoverEvent,\n      cursorPosition: cursorPosition,\n      isContinuousHover: isContinuousHover,\n      formatHoverLineInfo: formatHoverLineInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      chartRef: chartRef,\n      variant: variant,\n      xAxisName: xAxis?.name,\n      yAxisName: yAxis?.name,\n      backgroundColor: backgroundColor,\n      plotHoverEvent: plotHoverEvent,\n      referencePosition: isContinuousHover ? {\n        x: cursorPosition?.x\n      } : {},\n      showTooltip: showTooltip,\n      formatTooltipContent: formatTooltipContent,\n      renderTooltipContent: renderTooltipContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      data: data,\n      showLegend: showLegend,\n      legendPlacement: legendPlacement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"xMS+qrgA5jG+EFgtzE534fWgvBQ=\", false, function () {\n  return [useCursorPosition, usePlotHoverEvent];\n});\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useCallback","useRef","useState","Header","HoverLayer","Legend","Plot","Toolbar","Tooltip","LineChartWrapper","useCursorPosition","usePlotHoverEvent","getConfig","getLayout","getStyleProperties","isContinuousHoverEnabled","LineChart","data","dataRevision","isLoading","xAxis","yAxis","range","title","subtitle","variant","layout","layoutProp","config","configProp","style","styleProp","formatTooltipContent","renderTooltipContent","renderFilters","renderActions","formatHoverLineInfo","onRangeChange","chartRef","plotRef","isPlotSelecting","setPlotSelecting","legendPlacement","showTitle","showSubtitle","showLegend","showTooltip","showFilters","showActions","buttonZoom","hoverMode","backgroundColor","isContinuousHover","cursorPosition","isCursorOnPlot","plotHoverEvent","updatePlotHoverEvent","setPlotUnhovered","handlePlotSelecting","handlePlotSelected","height","name","x"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/LineChart.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\n\nimport { Header } from './components/Header';\nimport { HoverLayer } from './components/HoverLayer';\nimport { Legend } from './components/Legend';\nimport { Plot, PlotElement } from './components/Plot';\nimport { Toolbar } from './components/Toolbar';\nimport { Tooltip } from './components/Tooltip';\nimport { LineChartWrapper } from './elements';\nimport { useCursorPosition } from './hooks/useCursorPosition';\nimport { usePlotHoverEvent } from './hooks/usePlotHoverEvent';\nimport { LineChartProps } from './types';\nimport { getConfig } from './utils/getConfig';\nimport { getLayout } from './utils/getLayout';\nimport { getStyleProperties } from './utils/getStyleProperties';\nimport { isContinuousHoverEnabled } from './utils/isContinuousHoverEnabled';\n\nexport const LineChart: React.FC<LineChartProps> = ({\n  data,\n  dataRevision,\n  isLoading,\n  xAxis,\n  yAxis,\n  range,\n  title,\n  subtitle,\n  variant,\n  layout: layoutProp = {},\n  config: configProp = {},\n  style: styleProp = {},\n  formatTooltipContent,\n  renderTooltipContent,\n  renderFilters,\n  renderActions,\n  formatHoverLineInfo,\n  onRangeChange,\n}) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n  const plotRef = useRef<PlotElement>(null);\n\n  const [isPlotSelecting, setPlotSelecting] = useState(false);\n\n  const layout = getLayout(layoutProp, variant);\n  const config = getConfig(configProp, variant);\n  const style = getStyleProperties(styleProp, variant);\n\n  const {\n    legendPlacement,\n    showTitle,\n    showSubtitle,\n    showLegend,\n    showTooltip,\n    showFilters,\n    showActions,\n  } = layout;\n  const { buttonZoom, hoverMode } = config;\n  const { backgroundColor } = style;\n\n  const isContinuousHover = isContinuousHoverEnabled(hoverMode);\n\n  const { cursorPosition, isCursorOnPlot } = useCursorPosition(chartRef);\n\n  const { plotHoverEvent, updatePlotHoverEvent, setPlotUnhovered } =\n    usePlotHoverEvent({\n      chartRef,\n      isCursorOnPlot,\n      isContinuousHover,\n      isPlotSelecting,\n    });\n\n  const handlePlotSelecting = useCallback(() => {\n    setPlotSelecting(true);\n  }, []);\n\n  const handlePlotSelected = useCallback(() => {\n    setPlotSelecting(false);\n  }, []);\n\n  return (\n    <LineChartWrapper ref={chartRef} style={style}>\n      <Toolbar\n        plotRef={plotRef}\n        zoomDirectionConfig={buttonZoom}\n        showFilters={showFilters}\n        showActions={showActions}\n        renderFilters={renderFilters}\n        renderActions={renderActions}\n      />\n\n      <Header\n        title={title}\n        subtitle={subtitle}\n        showTitle={showTitle}\n        showSubtitle={showSubtitle}\n      />\n\n      <Plot\n        ref={plotRef}\n        data={data}\n        dataRevision={dataRevision}\n        isLoading={isLoading}\n        variant={variant}\n        xAxis={xAxis}\n        yAxis={yAxis}\n        presetRange={range}\n        layout={layout}\n        config={config}\n        isCursorOnPlot={isCursorOnPlot}\n        height={style.height}\n        onHover={updatePlotHoverEvent}\n        onUnhover={setPlotUnhovered}\n        onSelecting={handlePlotSelecting}\n        onSelected={handlePlotSelected}\n        onRangeChange={onRangeChange}\n      />\n\n      <HoverLayer\n        chartRef={chartRef}\n        layout={layout}\n        variant={variant}\n        plotHoverEvent={plotHoverEvent}\n        cursorPosition={cursorPosition}\n        isContinuousHover={isContinuousHover}\n        formatHoverLineInfo={formatHoverLineInfo}\n      />\n\n      <Tooltip\n        chartRef={chartRef}\n        variant={variant}\n        xAxisName={xAxis?.name}\n        yAxisName={yAxis?.name}\n        backgroundColor={backgroundColor}\n        plotHoverEvent={plotHoverEvent}\n        referencePosition={isContinuousHover ? { x: cursorPosition?.x } : {}}\n        showTooltip={showTooltip}\n        formatTooltipContent={formatTooltipContent}\n        renderTooltipContent={renderTooltipContent}\n      />\n\n      <Legend\n        data={data}\n        showLegend={showLegend}\n        legendPlacement={legendPlacement}\n      />\n    </LineChartWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}