name: NX CD pipeline
on:
  push:
#    branches:
#      - master
#      - release*

env:
  NX_CLOUD_ACCESS_TOKEN: ${{secrets.NX_CLOUD_ACCESS_TOKEN}}
#  NX_VERBOSE_LOGGING: true
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Set NPMKEY variable
        run: |
          export NPMKEY=$(echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_READONLY_TOKEN }}")
          echo "::set-output name=NPMKEY::$NPMKEY"
        id: npm_auth_key

      - name: Create .npmrc
        run: echo '${{ steps.npm_auth_key.outputs.NPMKEY }}' > .npmrc

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: cache-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}
      #
      #      - run: git fetch --no-tags --prune --depth=1 origin ${{ github.base_ref }}
      #      - name: Derive appropriate SHAs for base and head for `nx affected` commands
      #        uses: nrwl/nx-set-shas@v3
      #        with:
      #          main-branch-name: ${{ github.base_ref }}

      - name: 'Get affected libs to build'
        id: affected-libs
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: 'HEAD~1'
          projects: 'libs/**'

      - name: 'Get affected apps to build'
        id: affected-apps
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: 'HEAD~1'
          projects: 'apps/data-exploration'
          exclude: '*shell'
          isRelease: 'true'
          branchName: '${{ github.event.push.base_ref }}'

      - name: 'Get affected shell apps to build'
        id: affected-shell-apps
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: 'HEAD~1'
          projects: '*shell'

    outputs:
      affected-libs: ${{ steps.affected-libs.outputs.projects }}
      affected-libs-string: ${{ steps.affected-libs.outputs.projectsString }}
      affected-apps: ${{ steps.affected-apps.outputs.projects }}
      affected-shell-apps: ${{ steps.affected-shell-apps.outputs.projects }}

  #  build-libs:
  #    name: 'Build libs'
  #    runs-on: ubuntu-20.04
  #    needs: setup
  #    if: ${{ needs.setup.outputs.affected-libs != '' && toJson(fromJson(needs.setup.outputs.affected-libs)) != '[]' }}
  #    steps:
  #      - uses: actions/checkout@v3
  #        with:
  #          fetch-depth: 0
  #      - uses: actions/setup-node@v3
  #        with:
  #          node-version: '18'
  #
  #      - name: Cache node modules
  #        uses: actions/cache@v3
  #        with:
  #          path: node_modules
  #          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
  #
  #      - run: git fetch --no-tags --prune --depth=1 origin ${{ github.base_ref }}
  #      - name: Derive appropriate SHAs for base and head for `nx affected` commands
  #        uses: nrwl/nx-set-shas@v3
  #        with:
  #          main-branch-name: ${{ github.base_ref }}
  #      - name: Build
  #        env:
  #          NODE_OPTIONS: '--max_old_space_size=8192'
  #        run: npx nx run-many --target=build --parallel --nx-bail --configuration=production --projects ${{ needs.setup.outputs.affected-libs-string }}

  build:
    name: Build
    runs-on: ubuntu-20.04
    needs: [setup]
    #    if: ${{ !cancelled() && !failure() && needs.build-libs.result != 'failure' && needs.build-libs.result != 'cancelled' && needs.setup.outputs.affected-apps != '' && toJson(fromJson(needs.setup.outputs.affected-apps)) != '[]' }}
    strategy:
      matrix:
        project: ${{ fromJson(needs.setup.outputs.affected-apps)  }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}

      - name: Build
        env:
          NODE_OPTIONS: '--max_old_space_size=8192'
        run: npx nx build ${{ matrix.project }} --configuration=production

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_HOSTING_DEPLOY_SA }}'
          channelId: live
          projectId: fbhosting-217032465111-staging
          target: cognite-data-exploration-staging
          entryPoint: dist/apps/data-exploration/

  #  build-shell:
  #    name: 'Build shell apps'
  #    runs-on: ubuntu-20.04
  #    needs: [setup, build]
  #    if: ${{ !cancelled() && !failure() && needs.setup.outputs.affected-shell-apps != '' && toJson(fromJson(needs.setup.outputs.affected-shell-apps)) != '[]' }}
  #    strategy:
  #      matrix:
  #        project: ${{ fromJson(needs.setup.outputs.affected-shell-apps)  }}
  #    steps:
  #      - uses: actions/checkout@v3
  #        with:
  #          fetch-depth: 0
  #      - uses: actions/setup-node@v3
  #        with:
  #          node-version: '18'
  #
  #      - name: Cache node modules
  #        uses: actions/cache@v3
  #        with:
  #          path: node_modules
  #          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
  #
  #      - name: Build
  #        env:
  #          NODE_OPTIONS: '--max_old_space_size=8192'
  #        run: npx nx build ${{ matrix.project }} --configuration=production
#  ci-passed:
#    # see https://github.community/t/status-check-for-a-matrix-jobs/127354/7
#    name: CI Passed
#    needs: [setup, build-libs, build]
#    if: ${{ always() }}
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Check all job status
#        # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
#        # see https://stackoverflow.com/a/67532120/4907315
#        if: >-
#          ${{
#               contains(needs.*.result, 'failure')
#            || contains(needs.*.result, 'cancelled')
#          }}
#        run: exit 1
