{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { createEventListener } from '../utils/createEventListener';\nexport const usePlotHoverEvent = ({\n  chartRef,\n  isCursorOnPlot,\n  isContinuousHover,\n  isPlotSelecting\n}) => {\n  _s();\n  const [isPlotHovered, setPlotHovered] = useState(false);\n  const [plotHoverEvent, setPlotHoverEvent] = useState();\n  const updatePlotHoverEvent = useCallback(event => {\n    setPlotHoverEvent(event);\n    setPlotHovered(true);\n  }, []);\n  const setPlotUnhovered = useCallback(() => {\n    setPlotHovered(false);\n  }, []);\n  useEffect(() => {\n    setPlotHoverEvent(undefined);\n  }, [isPlotSelecting]);\n  useEffect(() => {\n    if (!isCursorOnPlot || !isContinuousHover && !isPlotHovered) {\n      setPlotHoverEvent(undefined);\n    }\n  }, [isContinuousHover, isCursorOnPlot, isPlotHovered]);\n  useEffect(() => {\n    return createEventListener(chartRef.current, 'wheel', () => {\n      setPlotHoverEvent(undefined);\n    });\n  }, [chartRef]);\n  return {\n    plotHoverEvent,\n    updatePlotHoverEvent,\n    setPlotUnhovered\n  };\n};\n_s(usePlotHoverEvent, \"RS3/MpugmfnGmcDt4L4xXeWXxJQ=\");","map":{"version":3,"names":["useCallback","useEffect","useState","createEventListener","usePlotHoverEvent","chartRef","isCursorOnPlot","isContinuousHover","isPlotSelecting","isPlotHovered","setPlotHovered","plotHoverEvent","setPlotHoverEvent","updatePlotHoverEvent","event","setPlotUnhovered","undefined","current"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/hooks/usePlotHoverEvent.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { PlotHoverEvent } from 'plotly.js';\n\nimport { createEventListener } from '../utils/createEventListener';\n\nexport interface Props {\n  chartRef: React.RefObject<HTMLDivElement>;\n  isCursorOnPlot: boolean;\n  isContinuousHover: boolean;\n  isPlotSelecting?: boolean;\n}\n\nexport const usePlotHoverEvent = ({\n  chartRef,\n  isCursorOnPlot,\n  isContinuousHover,\n  isPlotSelecting,\n}: Props) => {\n  const [isPlotHovered, setPlotHovered] = useState(false);\n  const [plotHoverEvent, setPlotHoverEvent] = useState<PlotHoverEvent>();\n\n  const updatePlotHoverEvent = useCallback((event: PlotHoverEvent) => {\n    setPlotHoverEvent(event);\n    setPlotHovered(true);\n  }, []);\n\n  const setPlotUnhovered = useCallback(() => {\n    setPlotHovered(false);\n  }, []);\n\n  useEffect(() => {\n    setPlotHoverEvent(undefined);\n  }, [isPlotSelecting]);\n\n  useEffect(() => {\n    if (!isCursorOnPlot || (!isContinuousHover && !isPlotHovered)) {\n      setPlotHoverEvent(undefined);\n    }\n  }, [isContinuousHover, isCursorOnPlot, isPlotHovered]);\n\n  useEffect(() => {\n    return createEventListener(chartRef.current, 'wheel', () => {\n      setPlotHoverEvent(undefined);\n    });\n  }, [chartRef]);\n\n  return {\n    plotHoverEvent,\n    updatePlotHoverEvent,\n    setPlotUnhovered,\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAIxD,SAASC,mBAAmB,QAAQ,8BAA8B;AASlE,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAChCC,QAAQ;EACRC,cAAc;EACdC,iBAAiB;EACjBC;AACK,CAAC,KAAK;EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,EAAkB;EAEtE,MAAMW,oBAAoB,GAAGb,WAAW,CAAEc,KAAqB,IAAK;IAClEF,iBAAiB,CAACE,KAAK,CAAC;IACxBJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGf,WAAW,CAAC,MAAM;IACzCU,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACdW,iBAAiB,CAACI,SAAS,CAAC;EAC9B,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErBP,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,cAAc,IAAK,CAACC,iBAAiB,IAAI,CAACE,aAAc,EAAE;MAC7DG,iBAAiB,CAACI,SAAS,CAAC;IAC9B;EACF,CAAC,EAAE,CAACT,iBAAiB,EAAED,cAAc,EAAEG,aAAa,CAAC,CAAC;EAEtDR,SAAS,CAAC,MAAM;IACd,OAAOE,mBAAmB,CAACE,QAAQ,CAACY,OAAO,EAAE,OAAO,EAAE,MAAM;MAC1DL,iBAAiB,CAACI,SAAS,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,OAAO;IACLM,cAAc;IACdE,oBAAoB;IACpBE;EACF,CAAC;AACH,CAAC;AAAC,GAvCWX,iBAAiB"},"metadata":{},"sourceType":"module"}