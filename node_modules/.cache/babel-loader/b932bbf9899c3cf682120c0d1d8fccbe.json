{"ast":null,"code":"import { getEventsAggregate } from './getEventsAggregate';\nexport const getEventsUniqueValuesByProperty = (sdk, property, filters = {}) => {\n  return getEventsAggregate(sdk, {\n    ...filters,\n    aggregate: 'uniqueValues',\n    properties: [{\n      property: [property]\n    }]\n  }).then(({\n    items\n  }) => items);\n};","map":{"version":3,"names":["getEventsAggregate","getEventsUniqueValuesByProperty","sdk","property","filters","aggregate","properties","then","items"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/events/service/network/getEventsUniqueValuesByProperty.ts"],"sourcesContent":["import { CogniteClient } from '@cognite/sdk';\n\nimport {\n  EventProperty,\n  EventsAggregateFilters,\n  EventsAggregateUniqueValuesResponse,\n} from '../types';\n\nimport { getEventsAggregate } from './getEventsAggregate';\n\nexport const getEventsUniqueValuesByProperty = (\n  sdk: CogniteClient,\n  property: EventProperty,\n  filters: EventsAggregateFilters = {}\n): Promise<EventsAggregateUniqueValuesResponse[]> => {\n  return getEventsAggregate<EventsAggregateUniqueValuesResponse>(sdk, {\n    ...filters,\n    aggregate: 'uniqueValues',\n    properties: [\n      {\n        property: [property],\n      },\n    ],\n  }).then(({ items }) => items);\n};\n"],"mappings":"AAQA,SAASA,kBAAkB,QAAQ,sBAAsB;AAEzD,OAAO,MAAMC,+BAA+B,GAAG,CAC7CC,GAAkB,EAClBC,QAAuB,EACvBC,OAA+B,GAAG,CAAC,CAAC,KACe;EACnD,OAAOJ,kBAAkB,CAAsCE,GAAG,EAAE;IAClE,GAAGE,OAAO;IACVC,SAAS,EAAE,cAAc;IACzBC,UAAU,EAAE,CACV;MACEH,QAAQ,EAAE,CAACA,QAAQ;IACrB,CAAC;EAEL,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC;IAAEC;EAAM,CAAC,KAAKA,KAAK,CAAC;AAC/B,CAAC"},"metadata":{},"sourceType":"module"}