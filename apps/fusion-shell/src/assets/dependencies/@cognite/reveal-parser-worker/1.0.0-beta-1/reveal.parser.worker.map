{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/comlink/dist/esm/comlink.mjs","webpack:///./reveal.parser.worker.ts"],"names":["root","factory","exports","module","define","amd","a","i","self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","2","p0i32","p1i32","p0f64","p2i32","__webpack_require__","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","p","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","Map","canHandle","obj","port1","port2","MessageChannel","expose","port","start","createProxy","ep","path","target","isProxyReleased","proxy","Proxy","_target","prop","throwIfProxyReleased","requestResponseMessage","type","map","toString","closeEndPoint","fromWireValue","rawValue","transferables","toWireValue","_thisArg","rawArgumentList","last","slice","argumentList","processArguments","serialized","Error","isError","message","stack","assign","addEventListener","callback","ev","data","id","returnValue","parent","reduce","apply","transfers","transferCache","set","transfer","undefined","catch","wireValue","postMessage","removeEventListener","endpoint","constructor","isMessagePort","close","isReleased","processed","v","arr","Array","concat","WeakMap","handler","serializedValue","serialize","deserialize","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","rustModule","RevealParserWorker","buffer","sectorData","parse_and_convert_sector","instanceMeshes","this","extractInstanceMeshes","triangleMeshes","extractTriangleMeshes","parsedPrimitives","extractParsedPrimitives","parseResult","treeIndexToNodeIdMap","tree_index_to_node_id_map","nodeIdToTreeIndexMap","node_id_to_tree_index_map","primitives","free","ctm","parse_ctm","result","indices","vertices","normals","parse_and_convert_f3df","faces","boxCollection","box_collection","boxAttributes","convertToJSMemory","box_attributes","circleCollection","circle_collection","circleAttributes","circle_attributes","coneCollection","cone_collection","coneAttributes","cone_attributes","eccentricConeCollection","eccentric_cone_collection","eccentricConeAttributes","eccentric_cone_attributes","ellipsoidSegmentCollection","ellipsoid_segment_collection","ellipsoidSegmentAttributes","ellipsoid_segment_attributes","generalCylinderCollection","general_cylinder_collection","generalCylinderAttributes","general_cylinder_attributes","generalRingCollection","general_ring_collection","generalRingAttributes","general_ring_attributes","nutCollection","nut_collection","nutAttributes","nut_attributes","quadCollection","quad_collection","quadAttributes","quad_attributes","sphericalSegmentCollection","spherical_segment_collection","sphericalSegmentAttributes","spherical_segment_attributes","torusSegmentCollection","torus_segment_collection","torusSegmentAttributes","torus_segment_attributes","trapeziumCollection","trapezium_collection","trapeziumAttributes","trapezium_attributes","collection","triangle_mesh_collection","fileIds","file_id","treeIndices","tree_index","colors","color","triangleCounts","triangle_count","sizes","size","instanced_mesh_collection","triangleOffsets","triangle_offset","instanceMatrices","instance_matrix","rustAttributes","jsAttributes","entry","entries","attribute","offset"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,MAAM,WACT,O,YCVEA,KAAmB,aAAI,SAA8BC,EAAUC,GAC9D,IAAI,IAAIC,KAAYD,EACnBE,EAAQD,GAAYD,EAAYC,GAEjC,KAAMF,EAASI,QACdC,EAAgBL,EAASM,OAAS,GAIpC,IAAIC,EAAmB,GAInBF,EAAkB,CACrBG,EAAG,GAIAC,EAAuB,GAI3B,IAAIC,EAAoB,CACvBC,EAAG,WACF,MAAO,CACN,4BAA6B,CAC5B,sBAAyB,SAASC,GACjC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,2BAA8B,SAASA,GACtC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,sBAAyB,SAASA,EAAMC,GACvC,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,4BAA+B,SAASD,GACvC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,2BAA8B,WAC7B,OAAOL,EAAiB,GAAGd,QAAW,KAEvC,6BAAgC,SAASmB,EAAMC,GAC9C,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,6BAAgC,SAASD,EAAMC,GAC9C,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,oBAAuB,SAASD,GAC/B,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,sBAAyB,SAASE,GACjC,OAAOP,EAAiB,GAAGd,QAAW,EAAEqB,IAEzC,2BAA8B,WAC7B,OAAOP,EAAiB,GAAGd,QAAW,KAEvC,4BAA+B,SAASmB,EAAMC,GAC7C,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,2BAA8B,SAASD,EAAMC,GAC5C,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,2BAA8B,WAC7B,OAAON,EAAiB,GAAGd,QAAW,KAEvC,2BAA8B,SAASmB,EAAMC,EAAME,GAClD,OAAOR,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,EAAME,IAErD,8BAAiC,SAASH,GACzC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,kDAAqD,SAASA,EAAMC,EAAME,GACzE,OAAOR,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,EAAME,IAErD,2BAA8B,SAASH,GACtC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,kDAAqD,SAASA,EAAMC,EAAME,GACzE,OAAOR,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,EAAME,IAErD,2BAA8B,SAASH,GACtC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,kDAAqD,SAASA,EAAMC,EAAME,GACzE,OAAOR,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,EAAME,IAErD,2BAA8B,SAASH,GACtC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,kDAAqD,SAASA,EAAMC,EAAME,GACzE,OAAOR,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,EAAME,IAErD,2BAA8B,SAASH,GACtC,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,iBAAoB,SAASA,EAAMC,GAClC,OAAON,EAAiB,GAAGd,QAAW,EAAEmB,EAAMC,IAE/C,mBAAsB,SAASD,GAC9B,OAAOL,EAAiB,GAAGd,QAAW,EAAEmB,IAEzC,kBAAqB,WACpB,OAAOL,EAAiB,GAAGd,QAAW,SAQ3C,SAASuB,EAAoBd,GAG5B,GAAGK,EAAiBL,GACnB,OAAOK,EAAiBL,GAAUT,QAGnC,IAAIC,EAASa,EAAiBL,GAAY,CACzCJ,EAAGI,EACHe,GAAG,EACHxB,QAAS,IAUV,OANAU,EAAQD,GAAUgB,KAAKxB,EAAOD,QAASC,EAAQA,EAAOD,QAASuB,GAG/DtB,EAAOuB,GAAI,EAGJvB,EAAOD,QAyGf,OApGAuB,EAAoBG,EAAI,SAAuBC,GAC9C,IAAIC,EAAW,GAuCf,OAtCAA,EAASC,KAAKC,QAAQC,UAAUC,MAAK,WAEhCpB,EAAgBe,IACnBM,cAAcV,EAAoBW,EAAI,IAAM,GAAGP,IAAUA,GAAW,YAMpD,CAAC,EAAI,CAAC,IAAIA,IAAY,IAE5BQ,SAAQ,SAASC,GAC5B,IAAIC,EAA0BrB,EAAqBoB,GAGnD,GAAGC,EACFT,EAASC,KAAKQ,OACV,CACJ,IAEIC,EAFAC,EAAetB,EAAkBmB,KACjCI,EAAMC,MAAMlB,EAAoBW,EAAI,GAAK,CAAC,EAAI,wBAAwBE,GAAgB,gBAE1F,GAAGG,aAAwBT,SAAmD,mBAAjCY,YAAYC,iBACxDL,EAAUR,QAAQc,IAAI,CAACF,YAAYC,iBAAiBH,GAAMD,IAAeP,MAAK,SAASa,GACtF,OAAOH,YAAYI,YAAYD,EAAM,GAAIA,EAAM,YAE1C,GAA+C,mBAArCH,YAAYK,qBAC5BT,EAAUI,YAAYK,qBAAqBP,EAAKD,OAC1C,CAEND,EADmBE,EAAIR,MAAK,SAASgB,GAAK,OAAOA,EAAEC,iBAC5BjB,MAAK,SAASkB,GACpC,OAAOR,YAAYI,YAAYI,EAAOX,MAGxCX,EAASC,KAAKb,EAAqBoB,GAAgBE,EAAQN,MAAK,SAASmB,GACxE,OAAO5B,EAAoB6B,EAAEhB,IAAiBe,EAAIE,UAAYF,GAAKnD,gBAI/D8B,QAAQc,IAAIhB,IAIpBL,EAAoB+B,EAAI5C,EAGxBa,EAAoBgC,EAAIzC,EAGxBS,EAAoBiC,EAAI,SAASxD,EAASyD,EAAMC,GAC3CnC,EAAoBoC,EAAE3D,EAASyD,IAClCG,OAAOC,eAAe7D,EAASyD,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEnC,EAAoByC,EAAI,SAAShE,GACX,oBAAXiE,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAe7D,EAASiE,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAe7D,EAAS,aAAc,CAAEmE,OAAO,KAQvD5C,EAAoB6C,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQ5C,EAAoB4C,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAjD,EAAoByC,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAO5C,EAAoBiC,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRhD,EAAoBoD,EAAI,SAAS1E,GAChC,IAAIyD,EAASzD,GAAUA,EAAOqE,WAC7B,WAAwB,OAAOrE,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAsB,EAAoBiC,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRnC,EAAoBoC,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAetD,KAAKmD,EAAQC,IAGzGtD,EAAoBW,EAAI,kGAGxBX,EAAoB6B,EAAI,GAIjB7B,EAAoBA,EAAoByD,EAAI,G,yFC/NrD,MAAMC,EAAchB,OAAO,iBACrBiB,EAAiBjB,OAAO,oBACxBkB,EAAelB,OAAO,wBACtBmB,EAAcnB,OAAO,kBACrBoB,EAAYC,GAAwB,iBAARA,GAA4B,OAARA,GAAgC,mBAARA,EAgDxEC,EAAmB,IAAIC,IAAI,CAC7B,CAAC,QA7CwB,CACzBC,UAAYH,GAAQD,EAASC,IAAQA,EAAIL,GACzC,UAAUS,GACN,MAAM,MAAEC,EAAK,MAAEC,GAAU,IAAIC,eAE7B,OADAC,EAAOJ,EAAKC,GACL,CAACC,EAAO,CAACA,KAEpB,YAAYG,GAER,OADAA,EAAKC,QA4Hb,SAASC,EAAYC,EAAIC,EAAO,GAAIC,EAAS,cACzC,IAAIC,GAAkB,EACtB,MAAMC,EAAQ,IAAIC,MAAMH,EAAQ,CAC5B,IAAII,EAASC,GAET,GADAC,EAAqBL,GACjBI,IAAStB,EACT,MAAO,IACIwB,EAAuBT,EAAI,CAC9BU,KAAM,EACNT,KAAMA,EAAKU,IAAK3E,GAAMA,EAAE4E,cACzB9E,KAAK,KACJ+E,EAAcb,GACdG,GAAkB,IAI9B,GAAa,SAATI,EAAiB,CACjB,GAAoB,IAAhBN,EAAKxF,OACL,MAAO,CAAEqB,KAAM,IAAMsE,GAEzB,MAAMtC,EAAI2C,EAAuBT,EAAI,CACjCU,KAAM,EACNT,KAAMA,EAAKU,IAAK3E,GAAMA,EAAE4E,cACzB9E,KAAKgF,GACR,OAAOhD,EAAEhC,KAAK0C,KAAKV,GAEvB,OAAOiC,EAAYC,EAAI,IAAIC,EAAMM,KAErC,IAAID,EAASC,EAAMQ,GACfP,EAAqBL,GAGrB,MAAOlC,EAAO+C,GAAiBC,EAAYF,GAC3C,OAAON,EAAuBT,EAAI,CAC9BU,KAAM,EACNT,KAAM,IAAIA,EAAMM,GAAMI,IAAK3E,GAAMA,EAAE4E,YACnC3C,SACD+C,GAAelF,KAAKgF,IAE3B,MAAMR,EAASY,EAAUC,GACrBX,EAAqBL,GACrB,MAAMiB,EAAOnB,EAAKA,EAAKxF,OAAS,GAChC,GAAI2G,IAASpC,EACT,OAAOyB,EAAuBT,EAAI,CAC9BU,KAAM,IACP5E,KAAKgF,GAGZ,GAAa,SAATM,EACA,OAAOrB,EAAYC,EAAIC,EAAKoB,MAAM,GAAI,IAE1C,MAAOC,EAAcN,GAAiBO,EAAiBJ,GACvD,OAAOV,EAAuBT,EAAI,CAC9BU,KAAM,EACNT,KAAMA,EAAKU,IAAK3E,GAAMA,EAAE4E,YACxBU,gBACDN,GAAelF,KAAKgF,IAE3B,UAAUR,EAASa,GACfX,EAAqBL,GACrB,MAAOmB,EAAcN,GAAiBO,EAAiBJ,GACvD,OAAOV,EAAuBT,EAAI,CAC9BU,KAAM,EACNT,KAAMA,EAAKU,IAAK3E,GAAMA,EAAE4E,YACxBU,gBACDN,GAAelF,KAAKgF,MAG/B,OAAOV,EA3EAL,CApHSF,EAoHO,GAAIK,GAD/B,IAAkBA,KA9Ed,CAAC,QA/BwB,CACzBX,UAAYtB,GAAUkB,EAASlB,IAAUiB,KAAejB,EACxD,WAAU,MAAEA,IACR,IAAIuD,EAcJ,OAZIA,EADAvD,aAAiBwD,MACJ,CACTC,SAAS,EACTzD,MAAO,CACH0D,QAAS1D,EAAM0D,QACfpE,KAAMU,EAAMV,KACZqE,MAAO3D,EAAM2D,QAKR,CAAEF,SAAS,EAAOzD,SAE5B,CAACuD,EAAY,KAExB,YAAYA,GACR,GAAIA,EAAWE,QACX,MAAMhE,OAAOmE,OAAO,IAAIJ,MAAMD,EAAWvD,MAAM0D,SAAUH,EAAWvD,OAExE,MAAMuD,EAAWvD,WAUzB,SAAS2B,EAAOJ,EAAKQ,EAAK5F,MACtB4F,EAAG8B,iBAAiB,WAAW,SAASC,EAASC,GAC7C,IAAKA,IAAOA,EAAGC,KACX,OAEJ,MAAM,GAAEC,EAAE,KAAExB,EAAI,KAAET,GAASvC,OAAOmE,OAAO,CAAE5B,KAAM,IAAM+B,EAAGC,MACpDX,GAAgBU,EAAGC,KAAKX,cAAgB,IAAIX,IAAIG,GACtD,IAAIqB,EACJ,IACI,MAAMC,EAASnC,EAAKoB,MAAM,GAAI,GAAGgB,OAAO,CAAC7C,EAAKe,IAASf,EAAIe,GAAOf,GAC5DuB,EAAWd,EAAKoC,OAAO,CAAC7C,EAAKe,IAASf,EAAIe,GAAOf,GACvD,OAAQkB,GACJ,KAAK,EAEGyB,EAAcpB,EAElB,MACJ,KAAK,EAEGqB,EAAOnC,EAAKoB,OAAO,GAAG,IAAMP,EAAckB,EAAGC,KAAKhE,OAClDkE,GAAc,EAElB,MACJ,KAAK,EAEGA,EAAcpB,EAASuB,MAAMF,EAAQd,GAEzC,MACJ,KAAK,EAGGa,EAuIxB,SAAe3C,GACX,OAAO9B,OAAOmE,OAAOrC,EAAK,CAAE,CAACT,IAAc,IAxITqB,CADA,IAAIW,KAAYO,IAGlC,MACJ,KAAK,EACD,CACI,MAAM,MAAE7B,EAAK,MAAEC,GAAU,IAAIC,eAC7BC,EAAOJ,EAAKE,GACZyC,EA4HxB,SAAkB3C,EAAK+C,GAEnB,OADAC,EAAcC,IAAIjD,EAAK+C,GAChB/C,EA9H2BkD,CAASjD,EAAO,CAACA,IAEnC,MACJ,KAAK,EAEG0C,OAAcQ,GAK9B,MAAO1E,GACHkE,EAAc,CAAElE,QAAO,CAACiB,GAAc,GAE1CtD,QAAQC,QAAQsG,GACXS,MAAO3E,IACD,CAAEA,QAAO,CAACiB,GAAc,KAE9BpD,KAAMqG,IACP,MAAOU,EAAW7B,GAAiBC,EAAYkB,GAC/CnC,EAAG8C,YAAYpF,OAAOmE,OAAOnE,OAAOmE,OAAO,GAAIgB,GAAY,CAAEX,OAAOlB,GACvD,IAATN,IAEAV,EAAG+C,oBAAoB,UAAWhB,GAClClB,EAAcb,SAItBA,EAAGF,OACHE,EAAGF,QAMX,SAASe,EAAcmC,IAHvB,SAAuBA,GACnB,MAAqC,gBAA9BA,EAASC,YAAY1F,MAGxB2F,CAAcF,IACdA,EAASG,QAKjB,SAAS3C,EAAqB4C,GAC1B,GAAIA,EACA,MAAM,IAAI3B,MAAM,8CA4ExB,SAASF,EAAiBD,GACtB,MAAM+B,EAAY/B,EAAaX,IAAIM,GACnC,MAAO,CAACoC,EAAU1C,IAAK2C,GAAMA,EAAE,KALnBC,EAK+BF,EAAU1C,IAAK2C,GAAMA,EAAE,IAJ3DE,MAAM5E,UAAU6E,OAAOnB,MAAM,GAAIiB,KAD5C,IAAgBA,EAOhB,MAAMf,EAAgB,IAAIkB,QAe1B,SAASzC,EAAYhD,GACjB,IAAK,MAAOV,EAAMoG,KAAYtE,EAC1B,GAAIsE,EAAQpE,UAAUtB,GAAQ,CAC1B,MAAO2F,EAAiB5C,GAAiB2C,EAAQE,UAAU5F,GAC3D,MAAO,CACH,CACIyC,KAAM,EACNnD,OACAU,MAAO2F,GAEX5C,GAIZ,MAAO,CACH,CACIN,KAAM,EACNzC,SAEJuE,EAAc3E,IAAII,IAAU,IAGpC,SAAS6C,EAAc7C,GACnB,OAAQA,EAAMyC,MACV,KAAK,EACD,OAAOrB,EAAiBxB,IAAII,EAAMV,MAAMuG,YAAY7F,EAAMA,OAC9D,KAAK,EACD,OAAOA,EAAMA,OAGzB,SAASwC,EAAuBT,EAAI+D,EAAKxB,GACrC,OAAO,IAAI3G,QAASC,IAChB,MAAMqG,EAeH,IAAIsB,MAAM,GACZQ,KAAK,GACLrD,IAAI,IAAMsD,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAAkBzD,SAAS,KACvE0D,KAAK,KAjBNtE,EAAG8B,iBAAiB,WAAW,SAASxG,EAAE0G,GACjCA,EAAGC,MAASD,EAAGC,KAAKC,IAAMF,EAAGC,KAAKC,KAAOA,IAG9ClC,EAAG+C,oBAAoB,UAAWzH,GAClCO,EAAQmG,EAAGC,UAEXjC,EAAGF,OACHE,EAAGF,QAEPE,EAAG8C,YAAYpF,OAAOmE,OAAO,CAAEK,MAAM6B,GAAMxB;;;;ACxRnD,MAAMgC,EAAa,4BAoEZ,MAAMC,EACJ,kBAAkBC,GACvB,MACMC,SADaH,GACKI,yBAAyBF,GAE3CG,EAAiBC,KAAKC,sBAAsBJ,GAE5CK,EAAiBF,KAAKG,sBAAsBN,GAE5CO,EAAmBJ,KAAKK,wBAAwBR,GAEhDS,EAAiC,CACrCC,qBAAsBV,EAAWW,4BACjCC,qBAAsBZ,EAAWa,4BACjCC,WAAYP,EACZL,iBACAG,kBAKF,OAFAL,EAAWe,OAEJN,EAGF,eAAeV,GACpB,MAGMiB,SAHanB,GAGFoB,UAAUlB,GAMrBmB,EAAS,CAAEC,QAJDH,EAAIG,UAIMC,SAHTJ,EAAII,WAGeC,QAFpBL,EAAIK,WAMpB,OAFAL,EAAID,OAEGG,EAGF,iBAAiBnB,GACtB,MAEMC,SAFaH,GAEKyB,uBAAuBvB,GAEzCmB,EAAS,CACbnB,OAAQC,EAAWuB,QACnBb,qBAAsBV,EAAWW,4BACjCC,qBAAsBZ,EAAWa,6BAKnC,OAFAb,EAAWe,OAEJG,EAGD,wBAAwBlB,GAiG9B,MA3B2C,CACzCwB,cAtEoBxB,EAAWyB,iBAuE/BC,cAtEoBvB,KAAKwB,kBACzB3B,EAAW4B,kBAsEXC,iBAnEuB7B,EAAW8B,oBAoElCC,iBAnEuB5B,KAAKwB,kBAC5B3B,EAAWgC,qBAmEXC,eAhEqBjC,EAAWkC,kBAiEhCC,eAhEqBhC,KAAKwB,kBAC1B3B,EAAWoC,mBAgEXC,wBA7D8BrC,EAAWsC,4BA8DzCC,wBA7D8BpC,KAAKwB,kBACnC3B,EAAWwC,6BA6DXC,2BA1DiCzC,EAAW0C,+BA2D5CC,2BA1DiCxC,KAAKwB,kBACtC3B,EAAW4C,gCA0DXC,0BApDgC7C,EAAW8C,8BAqD3CC,0BApDgC5C,KAAKwB,kBACrC3B,EAAWgD,+BAoDXC,sBA9C4BjD,EAAWkD,0BA+CvCC,sBA9C4BhD,KAAKwB,kBACjC3B,EAAWoD,2BA8CXC,cA3CoBrD,EAAWsD,iBA4C/BC,cA3CoBpD,KAAKwB,kBACzB3B,EAAWwD,kBA2CXC,eAxCqBzD,EAAW0D,kBAyChCC,eAxCqBxD,KAAKwB,kBAC1B3B,EAAW4D,mBAwCXC,2BArCiC7D,EAAW8D,+BAsC5CC,2BArCiC5D,KAAKwB,kBACtC3B,EAAWgE,gCAqCXC,uBA/B6BjE,EAAWkE,2BAgCxCC,uBA/B6BhE,KAAKwB,kBAClC3B,EAAWoE,4BA+BXC,oBA5B0BrE,EAAWsE,uBA6BrCC,oBA5B0BpE,KAAKwB,kBAC/B3B,EAAWwE,yBAiCP,sBAAsBxE,GAC5B,MAAMyE,EAAazE,EAAW0E,2BAExBxD,EAAS,CACbyD,QAASF,EAAWG,UAAUjI,QAC9BkI,YAAaJ,EAAWK,aAAanI,QACrCoI,OAAQN,EAAWO,QAAQrI,QAC3BsI,eAAgBR,EAAWS,iBAAiBvI,QAC5CwI,MAAOV,EAAWW,OAAOzI,SAK3B,OAFA8H,EAAW1D,OAEJG,EAGD,sBAAsBlB,GAC5B,MAAMyE,EAAazE,EAAWqF,4BAExBnE,EAAS,CACbyD,QAASF,EAAWG,UAAUjI,QAC9BkI,YAAaJ,EAAWK,aAAanI,QACrCoI,OAAQN,EAAWO,QAAQrI,QAC3B2I,gBAAiBb,EAAWc,kBAAkB5I,QAC9CsI,eAAgBR,EAAWS,iBAAiBvI,QAC5CwI,MAAOV,EAAWW,OAAOzI,QACzB6I,iBAAkBf,EAAWgB,kBAAkB9I,SAKjD,OAFA8H,EAAW1D,OAEJG,EAGD,kBACNwE,GAEA,MAAMC,EAAe,IAAI/K,IAEzB,IAAK,MAAMgL,KAASF,EAAeG,UAAW,CAC5C,MAAOhM,EAAKiM,GAAaF,EAEzBD,EAAa5H,IAAIlE,EAAK,CAAEuL,KAAMU,EAAUV,KAAMW,OAAQD,EAAUC,SAEhED,EAAU/E,OAGZ,OAAO4E,GAMX,EAFY,IAAI7F","file":"reveal.parser.worker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn "," \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t2: function() {\n \t\t\treturn {\n \t\t\t\t\"./reveal_rs_wrapper_bg.js\": {\n \t\t\t\t\t\"__wbg_parsererror_new\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"N\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_drop_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"U\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_string_new\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"W\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_object_clone_ref\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"T\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_59cb74e423758ede\": function() {\n \t\t\t\t\t\treturn installedModules[1].exports[\"E\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_stack_558ba5917b466edd\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"Q\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_error_4bb6c2a97407129a\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"A\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_attribute_new\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"y\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_number_new\": function(p0f64) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"S\"](p0f64);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_6b6f346b4912cdae\": function() {\n \t\t\t\t\t\treturn installedModules[1].exports[\"F\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_push_f353108e20ec67a0\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"O\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_d333a6e567133fdb\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"H\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_4d63b46bdff6e16c\": function() {\n \t\t\t\t\t\treturn installedModules[1].exports[\"D\"]();\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_set_dfa2f1a42cb24532\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"P\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_buffer_44855aefa83ea48c\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"z\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_0da86dad4d55fbae\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"J\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_04793d2c09ba060f\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"B\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_b86dda8c37255ca3\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"L\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_a0b63d55f22daf72\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"G\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_c9f84d09508543c6\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"M\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_05020d898fee9291\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"C\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_newwithbyteoffsetandlength_b2bf19ec76071ed8\": function(p0i32,p1i32,p2i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"K\"](p0i32,p1i32,p2i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbg_new_ed94ebb0ae0424e3\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"I\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_throw\": function(p0i32,p1i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"X\"](p0i32,p1i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_rethrow\": function(p0i32) {\n \t\t\t\t\t\treturn installedModules[1].exports[\"V\"](p0i32);\n \t\t\t\t\t},\n \t\t\t\t\t\"__wbindgen_memory\": function() {\n \t\t\t\t\t\treturn installedModules[1].exports[\"R\"]();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"1\":[2]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"2\":\"447f3124e4c4251c0068\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://cdf-hub-bundles.cogniteapp.com/dependencies/@cognite/reveal-parser-worker/1.0.0-beta-1/\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","/*!\n * Copyright 2020 Cognite AS\n */\n\nimport * as Comlink from \"comlink\";\n\nimport type * as rustTypes from \"./pkg\";\nconst rustModule = import(\"./pkg\");\n\nexport interface ParsePrimitiveAttribute {\n  offset: number;\n  size: number;\n}\n\nexport interface ParsedPrimitives {\n  boxCollection: Uint8Array;\n  boxAttributes: Map<string, ParsePrimitiveAttribute>;\n  circleCollection: Uint8Array;\n  circleAttributes: Map<string, ParsePrimitiveAttribute>;\n  coneCollection: Uint8Array;\n  coneAttributes: Map<string, ParsePrimitiveAttribute>;\n  eccentricConeCollection: Uint8Array;\n  eccentricConeAttributes: Map<string, ParsePrimitiveAttribute>;\n  ellipsoidSegmentCollection: Uint8Array;\n  ellipsoidSegmentAttributes: Map<string, ParsePrimitiveAttribute>;\n  generalCylinderCollection: Uint8Array;\n  generalCylinderAttributes: Map<string, ParsePrimitiveAttribute>;\n  generalRingCollection: Uint8Array;\n  generalRingAttributes: Map<string, ParsePrimitiveAttribute>;\n  nutCollection: Uint8Array;\n  nutAttributes: Map<string, ParsePrimitiveAttribute>;\n  quadCollection: Uint8Array;\n  quadAttributes: Map<string, ParsePrimitiveAttribute>;\n  sphericalSegmentCollection: Uint8Array;\n  sphericalSegmentAttributes: Map<string, ParsePrimitiveAttribute>;\n  torusSegmentCollection: Uint8Array;\n  torusSegmentAttributes: Map<string, ParsePrimitiveAttribute>;\n  trapeziumCollection: Uint8Array;\n  trapeziumAttributes: Map<string, ParsePrimitiveAttribute>;\n}\n\nexport interface ParseSectorResult {\n  treeIndexToNodeIdMap: Map<number, number>;\n  nodeIdToTreeIndexMap: Map<number, number>;\n  primitives: ParsedPrimitives;\n  instanceMeshes: {\n    fileIds: Float64Array;\n    treeIndices: Float32Array;\n    colors: Uint8Array;\n    triangleOffsets: Float64Array;\n    triangleCounts: Float64Array;\n    sizes: Float32Array;\n    instanceMatrices: Float32Array;\n  };\n  triangleMeshes: {\n    fileIds: Float64Array;\n    treeIndices: Float32Array;\n    colors: Uint8Array;\n    triangleCounts: Float64Array;\n    sizes: Float32Array;\n  };\n}\n\nexport interface ParseCtmResult {\n  indices: Uint32Array;\n  vertices: Float32Array;\n  normals: Float32Array | undefined;\n}\n\nexport interface SectorQuads {\n  readonly nodeIdToTreeIndexMap: Map<number, number>;\n  readonly treeIndexToNodeIdMap: Map<number, number>;\n  readonly buffer: Float32Array;\n}\n\nexport class RevealParserWorker {\n  public async parseSector(buffer: Uint8Array): Promise<ParseSectorResult> {\n    const rust = await rustModule;\n    const sectorData = rust.parse_and_convert_sector(buffer);\n\n    const instanceMeshes = this.extractInstanceMeshes(sectorData);\n\n    const triangleMeshes = this.extractTriangleMeshes(sectorData);\n\n    const parsedPrimitives = this.extractParsedPrimitives(sectorData);\n\n    const parseResult: ParseSectorResult = {\n      treeIndexToNodeIdMap: sectorData.tree_index_to_node_id_map(),\n      nodeIdToTreeIndexMap: sectorData.node_id_to_tree_index_map(),\n      primitives: parsedPrimitives,\n      instanceMeshes,\n      triangleMeshes,\n    };\n\n    sectorData.free();\n\n    return parseResult;\n  }\n\n  public async parseCtm(buffer: Uint8Array): Promise<ParseCtmResult> {\n    const rust = await rustModule;\n\n    // TODO handle parsing failure\n    const ctm = rust.parse_ctm(buffer);\n\n    const indices = ctm.indices();\n    const vertices = ctm.vertices();\n    const normals = ctm.normals();\n\n    const result = { indices, vertices, normals };\n\n    ctm.free();\n\n    return result;\n  }\n\n  public async parseQuads(buffer: Uint8Array): Promise<SectorQuads> {\n    const rust = await rustModule;\n\n    const sectorData = rust.parse_and_convert_f3df(buffer);\n\n    const result = {\n      buffer: sectorData.faces(),\n      treeIndexToNodeIdMap: sectorData.tree_index_to_node_id_map(),\n      nodeIdToTreeIndexMap: sectorData.node_id_to_tree_index_map(),\n    };\n\n    sectorData.free();\n\n    return result;\n  }\n\n  private extractParsedPrimitives(sectorData: rustTypes.Sector) {\n    const boxCollection = sectorData.box_collection();\n    const boxAttributes = this.convertToJSMemory(\n      sectorData.box_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const circleCollection = sectorData.circle_collection();\n    const circleAttributes = this.convertToJSMemory(\n      sectorData.circle_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const coneCollection = sectorData.cone_collection();\n    const coneAttributes = this.convertToJSMemory(\n      sectorData.cone_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const eccentricConeCollection = sectorData.eccentric_cone_collection();\n    const eccentricConeAttributes = this.convertToJSMemory(\n      sectorData.eccentric_cone_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const ellipsoidSegmentCollection = sectorData.ellipsoid_segment_collection();\n    const ellipsoidSegmentAttributes = this.convertToJSMemory(\n      sectorData.ellipsoid_segment_attributes() as Map<\n        string,\n        rustTypes.Attribute\n      >\n    );\n\n    const generalCylinderCollection = sectorData.general_cylinder_collection();\n    const generalCylinderAttributes = this.convertToJSMemory(\n      sectorData.general_cylinder_attributes() as Map<\n        string,\n        rustTypes.Attribute\n      >\n    );\n\n    const generalRingCollection = sectorData.general_ring_collection();\n    const generalRingAttributes = this.convertToJSMemory(\n      sectorData.general_ring_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const nutCollection = sectorData.nut_collection();\n    const nutAttributes = this.convertToJSMemory(\n      sectorData.nut_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const quadCollection = sectorData.quad_collection();\n    const quadAttributes = this.convertToJSMemory(\n      sectorData.quad_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const sphericalSegmentCollection = sectorData.spherical_segment_collection();\n    const sphericalSegmentAttributes = this.convertToJSMemory(\n      sectorData.spherical_segment_attributes() as Map<\n        string,\n        rustTypes.Attribute\n      >\n    );\n\n    const torusSegmentCollection = sectorData.torus_segment_collection();\n    const torusSegmentAttributes = this.convertToJSMemory(\n      sectorData.torus_segment_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const trapeziumCollection = sectorData.trapezium_collection();\n    const trapeziumAttributes = this.convertToJSMemory(\n      sectorData.trapezium_attributes() as Map<string, rustTypes.Attribute>\n    );\n\n    const parsedPrimitives: ParsedPrimitives = {\n      boxCollection,\n      boxAttributes,\n      circleCollection,\n      circleAttributes,\n      coneCollection,\n      coneAttributes,\n      eccentricConeCollection,\n      eccentricConeAttributes,\n      ellipsoidSegmentCollection,\n      ellipsoidSegmentAttributes,\n      generalCylinderCollection,\n      generalCylinderAttributes,\n      generalRingCollection,\n      generalRingAttributes,\n      nutCollection,\n      nutAttributes,\n      quadCollection,\n      quadAttributes,\n      sphericalSegmentCollection,\n      sphericalSegmentAttributes,\n      torusSegmentCollection,\n      torusSegmentAttributes,\n      trapeziumCollection,\n      trapeziumAttributes,\n    };\n\n    return parsedPrimitives;\n  }\n\n  private extractTriangleMeshes(sectorData: rustTypes.Sector) {\n    const collection = sectorData.triangle_mesh_collection();\n\n    const result = {\n      fileIds: collection.file_id().slice(),\n      treeIndices: collection.tree_index().slice(),\n      colors: collection.color().slice(),\n      triangleCounts: collection.triangle_count().slice(),\n      sizes: collection.size().slice(),\n    };\n\n    collection.free();\n\n    return result;\n  }\n\n  private extractInstanceMeshes(sectorData: rustTypes.Sector) {\n    const collection = sectorData.instanced_mesh_collection();\n\n    const result = {\n      fileIds: collection.file_id().slice(),\n      treeIndices: collection.tree_index().slice(),\n      colors: collection.color().slice(),\n      triangleOffsets: collection.triangle_offset().slice(),\n      triangleCounts: collection.triangle_count().slice(),\n      sizes: collection.size().slice(),\n      instanceMatrices: collection.instance_matrix().slice(),\n    };\n\n    collection.free();\n\n    return result;\n  }\n\n  private convertToJSMemory(\n    rustAttributes: Map<string, rustTypes.Attribute>\n  ): Map<string, ParsePrimitiveAttribute> {\n    const jsAttributes = new Map<string, ParsePrimitiveAttribute>();\n\n    for (const entry of rustAttributes.entries()) {\n      const [key, attribute] = entry;\n\n      jsAttributes.set(key, { size: attribute.size, offset: attribute.offset });\n\n      attribute.free();\n    }\n\n    return jsAttributes;\n  }\n}\n\nconst obj = new RevealParserWorker();\n\nComlink.expose(obj);\n"],"sourceRoot":""}