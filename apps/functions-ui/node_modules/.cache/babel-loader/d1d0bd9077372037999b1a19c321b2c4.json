{"ast":null,"code":"import get from 'lodash/get';\nimport head from 'lodash/head';\nimport { PLOT_CLASSNAME } from '../constants';\nimport { getAverageTickTextWidth } from './getAverageTickTextWidth';\nconst X_AXIS_TICK_MARGIN = 32; // marginLeft + marginRight\n\nexport const calculateAxisTickCount = graph => {\n  const plot = head(graph.getElementsByClassName(PLOT_CLASSNAME));\n  const plotWidth = get(plot, 'viewportElement.clientWidth', 0);\n  const plotHeight = get(plot, 'viewportElement.clientHeight', 0);\n  const xticks = graph.getElementsByClassName('xtick');\n  const xTickWidth = getAverageTickTextWidth(xticks);\n  const xTickWidthWithMargin = xTickWidth + X_AXIS_TICK_MARGIN;\n  const nticksX = Math.ceil(plotWidth / xTickWidthWithMargin);\n  const xTicksGap = plotWidth / nticksX;\n  const nticksY = Math.ceil(plotHeight / xTicksGap);\n  return {\n    nticksX,\n    nticksY\n  };\n};","map":{"version":3,"names":["get","head","PLOT_CLASSNAME","getAverageTickTextWidth","X_AXIS_TICK_MARGIN","calculateAxisTickCount","graph","plot","getElementsByClassName","plotWidth","plotHeight","xticks","xTickWidth","xTickWidthWithMargin","nticksX","Math","ceil","xTicksGap","nticksY"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/utils/calculateAxisTickCount.ts"],"sourcesContent":["import get from 'lodash/get';\nimport head from 'lodash/head';\n\nimport { PLOT_CLASSNAME } from '../constants';\n\nimport { getAverageTickTextWidth } from './getAverageTickTextWidth';\n\nconst X_AXIS_TICK_MARGIN = 32; // marginLeft + marginRight\n\nexport const calculateAxisTickCount = (graph: HTMLElement) => {\n  const plot = head(graph.getElementsByClassName(PLOT_CLASSNAME));\n  const plotWidth = get(plot, 'viewportElement.clientWidth', 0);\n  const plotHeight = get(plot, 'viewportElement.clientHeight', 0);\n\n  const xticks = graph.getElementsByClassName('xtick');\n  const xTickWidth = getAverageTickTextWidth(xticks);\n  const xTickWidthWithMargin = xTickWidth + X_AXIS_TICK_MARGIN;\n\n  const nticksX = Math.ceil(plotWidth / xTickWidthWithMargin);\n\n  const xTicksGap = plotWidth / nticksX;\n  const nticksY = Math.ceil(plotHeight / xTicksGap);\n\n  return { nticksX, nticksY };\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,YAAY;AAC5B,OAAOC,IAAI,MAAM,aAAa;AAE9B,SAASC,cAAc,QAAQ,cAAc;AAE7C,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE,MAAMC,kBAAkB,GAAG,EAAE,CAAC,CAAC;;AAE/B,OAAO,MAAMC,sBAAsB,GAAIC,KAAkB,IAAK;EAC5D,MAAMC,IAAI,GAAGN,IAAI,CAACK,KAAK,CAACE,sBAAsB,CAACN,cAAc,CAAC,CAAC;EAC/D,MAAMO,SAAS,GAAGT,GAAG,CAACO,IAAI,EAAE,6BAA6B,EAAE,CAAC,CAAC;EAC7D,MAAMG,UAAU,GAAGV,GAAG,CAACO,IAAI,EAAE,8BAA8B,EAAE,CAAC,CAAC;EAE/D,MAAMI,MAAM,GAAGL,KAAK,CAACE,sBAAsB,CAAC,OAAO,CAAC;EACpD,MAAMI,UAAU,GAAGT,uBAAuB,CAACQ,MAAM,CAAC;EAClD,MAAME,oBAAoB,GAAGD,UAAU,GAAGR,kBAAkB;EAE5D,MAAMU,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACP,SAAS,GAAGI,oBAAoB,CAAC;EAE3D,MAAMI,SAAS,GAAGR,SAAS,GAAGK,OAAO;EACrC,MAAMI,OAAO,GAAGH,IAAI,CAACC,IAAI,CAACN,UAAU,GAAGO,SAAS,CAAC;EAEjD,OAAO;IAAEH,OAAO;IAAEI;EAAQ,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"module"}