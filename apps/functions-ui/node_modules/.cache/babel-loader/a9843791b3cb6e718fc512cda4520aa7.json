{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useTimeseriesSingleAggregateQuery } from '../../service/queries';\nimport { CHART_POINTS_PER_SERIES } from '../constants';\nimport { getDataFetchMode } from '../utils';\nexport const useTimeseriesChartMetadata = ({\n  query,\n  dataFetchOptions\n}) => {\n  _s();\n  const {\n    timeseriesId,\n    dateRange\n  } = query;\n  const {\n    data,\n    isFetched,\n    isInitialLoading\n  } = useTimeseriesSingleAggregateQuery({\n    query: {\n      id: timeseriesId,\n      aggregates: ['count'],\n      start: dateRange?.[0].valueOf(),\n      end: dateRange?.[1].valueOf()\n    }\n  });\n  const metadata = useMemo(() => {\n    const numberOfPoints = Math.min(query.numberOfPoints || data?.data.count || CHART_POINTS_PER_SERIES, CHART_POINTS_PER_SERIES);\n    const isString = data?.isString;\n    const dataFetchMode = getDataFetchMode({\n      numberOfPoints,\n      dataFetchOptions,\n      isString\n    });\n    return {\n      numberOfPoints,\n      dataFetchMode,\n      isStep: data?.isStep,\n      isString,\n      unit: data?.unit\n    };\n  }, [data, dataFetchOptions, query.numberOfPoints]);\n  return {\n    data: metadata,\n    isFetched,\n    isInitialLoading\n  };\n};\n_s(useTimeseriesChartMetadata, \"bNNyTKZDH+54FgvPj8C8Qh9BDfA=\", false, function () {\n  return [useTimeseriesSingleAggregateQuery];\n});","map":{"version":3,"names":["useMemo","useTimeseriesSingleAggregateQuery","CHART_POINTS_PER_SERIES","getDataFetchMode","useTimeseriesChartMetadata","query","dataFetchOptions","timeseriesId","dateRange","data","isFetched","isInitialLoading","id","aggregates","start","valueOf","end","metadata","numberOfPoints","Math","min","count","isString","dataFetchMode","isStep","unit"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/domain/internal/hooks/useTimeseriesChartMetadata.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { DataFetchOptions } from '../../../types';\nimport { useTimeseriesSingleAggregateQuery } from '../../service/queries';\nimport { CHART_POINTS_PER_SERIES } from '../constants';\nimport { TimeseriesChartMetadata, TimeseriesChartQuery } from '../types';\nimport { getDataFetchMode } from '../utils';\n\ninterface Props {\n  query: TimeseriesChartQuery;\n  dataFetchOptions?: DataFetchOptions;\n}\n\nexport const useTimeseriesChartMetadata = ({\n  query,\n  dataFetchOptions,\n}: Props) => {\n  const { timeseriesId, dateRange } = query;\n\n  const { data, isFetched, isInitialLoading } =\n    useTimeseriesSingleAggregateQuery({\n      query: {\n        id: timeseriesId,\n        aggregates: ['count'],\n        start: dateRange?.[0].valueOf(),\n        end: dateRange?.[1].valueOf(),\n      },\n    });\n\n  const metadata: TimeseriesChartMetadata = useMemo(() => {\n    const numberOfPoints = Math.min(\n      query.numberOfPoints || data?.data.count || CHART_POINTS_PER_SERIES,\n      CHART_POINTS_PER_SERIES\n    );\n\n    const isString = data?.isString;\n\n    const dataFetchMode = getDataFetchMode({\n      numberOfPoints,\n      dataFetchOptions,\n      isString,\n    });\n\n    return {\n      numberOfPoints,\n      dataFetchMode,\n      isStep: data?.isStep,\n      isString,\n      unit: data?.unit,\n    };\n  }, [data, dataFetchOptions, query.numberOfPoints]);\n\n  return {\n    data: metadata,\n    isFetched,\n    isInitialLoading,\n  };\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,SAASC,iCAAiC,QAAQ,uBAAuB;AACzE,SAASC,uBAAuB,QAAQ,cAAc;AAEtD,SAASC,gBAAgB,QAAQ,UAAU;AAO3C,OAAO,MAAMC,0BAA0B,GAAG,CAAC;EACzCC,KAAK;EACLC;AACK,CAAC,KAAK;EAAA;EACX,MAAM;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGH,KAAK;EAEzC,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAiB,CAAC,GACzCV,iCAAiC,CAAC;IAChCI,KAAK,EAAE;MACLO,EAAE,EAAEL,YAAY;MAChBM,UAAU,EAAE,CAAC,OAAO,CAAC;MACrBC,KAAK,EAAEN,SAAS,GAAG,CAAC,CAAC,CAACO,OAAO,EAAE;MAC/BC,GAAG,EAAER,SAAS,GAAG,CAAC,CAAC,CAACO,OAAO;IAC7B;EACF,CAAC,CAAC;EAEJ,MAAME,QAAiC,GAAGjB,OAAO,CAAC,MAAM;IACtD,MAAMkB,cAAc,GAAGC,IAAI,CAACC,GAAG,CAC7Bf,KAAK,CAACa,cAAc,IAAIT,IAAI,EAAEA,IAAI,CAACY,KAAK,IAAInB,uBAAuB,EACnEA,uBAAuB,CACxB;IAED,MAAMoB,QAAQ,GAAGb,IAAI,EAAEa,QAAQ;IAE/B,MAAMC,aAAa,GAAGpB,gBAAgB,CAAC;MACrCe,cAAc;MACdZ,gBAAgB;MAChBgB;IACF,CAAC,CAAC;IAEF,OAAO;MACLJ,cAAc;MACdK,aAAa;MACbC,MAAM,EAAEf,IAAI,EAAEe,MAAM;MACpBF,QAAQ;MACRG,IAAI,EAAEhB,IAAI,EAAEgB;IACd,CAAC;EACH,CAAC,EAAE,CAAChB,IAAI,EAAEH,gBAAgB,EAAED,KAAK,CAACa,cAAc,CAAC,CAAC;EAElD,OAAO;IACLT,IAAI,EAAEQ,QAAQ;IACdP,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAAC,GA5CWP,0BAA0B;EAAA,QAOnCH,iCAAiC;AAAA"},"metadata":{},"sourceType":"module"}