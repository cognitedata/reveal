{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/apps/functions-ui/src/app/containers/RootApp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, Suspense, useState } from 'react';\nimport { useLocation, useNavigate, Route, Routes } from 'react-router-dom';\nimport { Loader } from 'components/Common';\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport * as mixpanelConfig from 'mixpanel-browser';\nimport queryString from 'query-string';\nimport { useUserInformation } from '../utils/hooks';\nimport { Functions } from './Functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageNotFound() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Page not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_c = PageNotFound;\nexport default function RootApp() {\n  _s();\n  console.log('Inside Root App');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [initialCdfEnv] = useState(queryString.parse(window.location.search).env);\n  const {\n    data: userInfo\n  } = useUserInformation();\n  const username = userInfo?.username || userInfo?.email;\n  const cdfEnv = queryString.parse(window.location.search).env;\n  useEffect(() => {\n    if (initialCdfEnv && !cdfEnv) {\n      // if env is not visible via URL add it in\n      navigate(location.pathname, {\n        state: {\n          search: `?env=${initialCdfEnv}`\n        }\n      });\n    }\n  }, [cdfEnv, initialCdfEnv, navigate, location.pathname]);\n  useEffect(() => {\n    if (username) {\n      const company = username.split('@').pop();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      mixpanelConfig.datastudio.add_group('company', company);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      mixpanelConfig.datastudio.identify(username);\n    }\n  }, [username]);\n  const routes = [{\n    path: '/:tenant/functions',\n    component: Functions\n  }, {\n    path: '/:tenant/*',\n    component: PageNotFound\n  }];\n\n  // inside component\n\n  // check if pathname ends with '/'\n  if (location.pathname.slice(-1) === '/') {\n    navigate(location.pathname.slice(0, -1) + location.search + location.hash, {\n      replace: true\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: routes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          element: /*#__PURE__*/_jsxDEV(route.component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 24\n          }, this)\n        }, route.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(RootApp, \"09EkPb/Gryix9/zCteM1ifQKMRo=\", false, function () {\n  return [useNavigate, useLocation, useUserInformation];\n});\n_c2 = RootApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"PageNotFound\");\n$RefreshReg$(_c2, \"RootApp\");","map":{"version":3,"names":["React","useEffect","Suspense","useState","useLocation","useNavigate","Route","Routes","Loader","ErrorBoundary","mixpanelConfig","queryString","useUserInformation","Functions","PageNotFound","RootApp","console","log","navigate","location","initialCdfEnv","parse","window","search","env","data","userInfo","username","email","cdfEnv","pathname","state","company","split","pop","datastudio","add_group","identify","routes","path","component","slice","hash","replace","map","route"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/app/containers/RootApp.tsx"],"sourcesContent":["import React, { useEffect, useMemo, Suspense, useState } from 'react';\nimport { useLocation, useNavigate, Route, Routes } from 'react-router-dom';\n\nimport { Loader } from 'components/Common';\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport * as mixpanelConfig from 'mixpanel-browser';\nimport queryString from 'query-string';\n\nimport { useUserInformation } from '../utils/hooks';\n\nimport { Functions } from './Functions';\n\ntype RouteDef = {\n  exact?: boolean;\n  strict?: boolean;\n  path: string;\n  component: any;\n  breadcrumbs?: any;\n};\n\nfunction PageNotFound() {\n  return <h1>Page not found</h1>;\n}\n\nexport default function RootApp() {\n  console.log('Inside Root App');\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const [initialCdfEnv] = useState(\n    queryString.parse(window.location.search).env as string\n  );\n  const { data: userInfo } = useUserInformation();\n  const username = userInfo?.username || userInfo?.email;\n\n  const cdfEnv = queryString.parse(window.location.search).env as string;\n\n  useEffect(() => {\n    if (initialCdfEnv && !cdfEnv) {\n      // if env is not visible via URL add it in\n      navigate(location.pathname, {\n        state: { search: `?env=${initialCdfEnv}` },\n      });\n    }\n  }, [cdfEnv, initialCdfEnv, navigate, location.pathname]);\n\n  useEffect(() => {\n    if (username) {\n      const company = username.split('@').pop();\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      mixpanelConfig.datastudio.add_group('company', company);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      mixpanelConfig.datastudio.identify(username);\n    }\n  }, [username]);\n\n  const routes = [\n    {\n      path: '/:tenant/functions',\n      component: Functions,\n    },\n    { path: '/:tenant/*', component: PageNotFound },\n  ] as RouteDef[];\n\n  // inside component\n\n  // check if pathname ends with '/'\n  if (location.pathname.slice(-1) === '/') {\n    navigate(location.pathname.slice(0, -1) + location.search + location.hash, {\n      replace: true,\n    });\n  }\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <ErrorBoundary>\n        <Routes>\n          {routes.map((route) => (\n            <Route\n              key={route.path}\n              path={route.path}\n              element={<route.component />}\n            />\n          ))}\n        </Routes>\n      </ErrorBoundary>\n    </Suspense>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}