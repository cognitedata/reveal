{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/DateRangePicker/DatePicker/RangePicker.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-nested-ternary */\nimport React, { useMemo, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport noop from 'lodash/noop';\nimport { Dropdown, Button, Icon, SegmentedControl, Flex } from '@cognite/cogs.js';\nimport { CalendarPicker } from './CalendarPicker';\nimport { determinePivotRange, getPivotRangeAsDates } from './Common';\nimport { TIME_SELECT } from './constants';\nimport { Divider } from './elements';\nimport { PivotRangePicker } from './PivotRangePicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RangePicker = ({\n  initialRange = TIME_SELECT['2Y'].getTime(),\n  onRangeChanged = noop,\n  buttonProps,\n  children\n}) => {\n  _s();\n  // Cogs is stupid af so we have to ref the span\n  const spanRef = useRef(null);\n  const [mode, setMode] = useState('range');\n  const [pivotRange, setPivotRange] = useState(determinePivotRange(initialRange[0], initialRange[1]));\n  const [startEndRange, setStartEndRange] = useState({\n    type: 'StartEnd',\n    startDate: initialRange[0],\n    endDate: initialRange[1]\n  });\n  const {\n    offsetTop,\n    offsetHeight\n  } = spanRef?.current || {\n    offsetTop: 0,\n    offsetHeight: 0\n  };\n  const maxHeight = useMemo(() => Math.max(window.innerHeight - offsetTop - offsetHeight - 100, 300), [offsetTop, offsetHeight]);\n  const onPivotRangeChange = range => {\n    onRangeChanged(getPivotRangeAsDates(range));\n    setPivotRange(range);\n  };\n  const renderModePicker = () => /*#__PURE__*/_jsxDEV(DateModePicker, {\n    maxheight: maxHeight,\n    direction: \"column\",\n    gap: 8,\n    children: [/*#__PURE__*/_jsxDEV(SegmentedControl, {\n      style: {\n        marginBottom: 8\n      },\n      currentKey: mode,\n      fullWidth: true,\n      onButtonClicked: key => setMode(key),\n      children: [/*#__PURE__*/_jsxDEV(SegmentedControl.Button, {\n        icon: \"Events\",\n        children: \"Range\"\n      }, \"range\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SegmentedControl.Button, {\n        icon: \"Calendar\",\n        children: \"Calendar\"\n      }, \"calendar\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), mode === 'range' ? /*#__PURE__*/_jsxDEV(PivotRangePicker, {\n      range: pivotRange,\n      onRangeChanged: onPivotRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CalendarPicker, {\n      dates: [startEndRange.startDate, startEndRange.endDate],\n      onDatesChanged: (startDate, endDate) => {\n        onRangeChanged([startDate, endDate]);\n        setStartEndRange(currentRange => ({\n          ...currentRange,\n          startDate,\n          endDate\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider.Horizontal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    content: renderModePicker(),\n    maxWidth: \"auto\",\n    children: children ? children : /*#__PURE__*/_jsxDEV(Button, {\n      icon: \"Calendar\",\n      ...buttonProps,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        ref: spanRef,\n        children: `${dayjs(initialRange[0]).format('YYYY/MM/DD HH:mm')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        type: \"ArrowRight\"\n        // style={{ marginLeft: 8, marginRight: 8 }}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${dayjs(initialRange[1]).format('YYYY/MM/DD HH:mm')}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(RangePicker, \"Qk0MATm9YHtEdbVhaSn2NBMmabU=\");\n_c = RangePicker;\nconst DateModePicker = /*#__PURE__*/styled(Flex).withConfig({\n  displayName: \"RangePicker__DateModePicker\",\n  componentId: \"sc-1ta50ba-0\"\n})([\"border-radius:8px;box-shadow:0 0 16px lightgrey;padding:16px;overflow:auto;background:white;width:375px;max-height:\", \"px;\"], props => props.maxheight);\n_c2 = DateModePicker;\nvar _c, _c2;\n$RefreshReg$(_c, \"RangePicker\");\n$RefreshReg$(_c2, \"DateModePicker\");","map":{"version":3,"names":["React","useMemo","useState","useRef","styled","dayjs","noop","Dropdown","Button","Icon","SegmentedControl","Flex","CalendarPicker","determinePivotRange","getPivotRangeAsDates","TIME_SELECT","Divider","PivotRangePicker","RangePicker","initialRange","getTime","onRangeChanged","buttonProps","children","spanRef","mode","setMode","pivotRange","setPivotRange","startEndRange","setStartEndRange","type","startDate","endDate","offsetTop","offsetHeight","current","maxHeight","Math","max","window","innerHeight","onPivotRangeChange","range","renderModePicker","marginBottom","key","currentRange","format","DateModePicker","props","maxheight"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/DateRangePicker/DatePicker/RangePicker.tsx"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React, { useMemo, useState, useRef } from 'react';\n\nimport styled from 'styled-components';\n\nimport dayjs from 'dayjs';\nimport noop from 'lodash/noop';\n\nimport {\n  Dropdown,\n  Button,\n  Icon,\n  ButtonProps,\n  SegmentedControl,\n  Flex,\n} from '@cognite/cogs.js';\n\nimport { CalendarPicker } from './CalendarPicker';\nimport {\n  PivotRange,\n  StartEndRange,\n  determinePivotRange,\n  getPivotRangeAsDates,\n} from './Common';\nimport { TIME_SELECT } from './constants';\nimport { Divider } from './elements';\nimport { PivotRangePicker } from './PivotRangePicker';\n\nexport type RangePickerProps = {\n  initialRange?: [Date, Date];\n  onRangeChanged?: (dates: [Date, Date]) => void;\n  buttonProps?: ButtonProps;\n  children?: React.ReactElement;\n};\n\nexport const RangePicker = ({\n  initialRange = TIME_SELECT['2Y'].getTime(),\n  onRangeChanged = noop,\n  buttonProps,\n  children,\n}: RangePickerProps) => {\n  // Cogs is stupid af so we have to ref the span\n  const spanRef = useRef<HTMLSpanElement>(null);\n  const [mode, setMode] = useState<'range' | 'calendar'>('range');\n\n  const [pivotRange, setPivotRange] = useState<PivotRange>(\n    determinePivotRange(initialRange[0], initialRange[1])\n  );\n  const [startEndRange, setStartEndRange] = useState<StartEndRange>({\n    type: 'StartEnd',\n    startDate: initialRange[0],\n    endDate: initialRange[1],\n  });\n\n  const { offsetTop, offsetHeight } = spanRef?.current || {\n    offsetTop: 0,\n    offsetHeight: 0,\n  };\n\n  const maxHeight = useMemo(\n    () => Math.max(window.innerHeight - offsetTop - offsetHeight - 100, 300),\n    [offsetTop, offsetHeight]\n  );\n\n  const onPivotRangeChange = (range: PivotRange) => {\n    onRangeChanged(getPivotRangeAsDates(range));\n    setPivotRange(range);\n  };\n\n  const renderModePicker = () => (\n    <DateModePicker maxheight={maxHeight} direction=\"column\" gap={8}>\n      <SegmentedControl\n        style={{ marginBottom: 8 }}\n        currentKey={mode}\n        fullWidth\n        onButtonClicked={(key) => setMode(key as 'range' | 'calendar')}\n      >\n        <SegmentedControl.Button key=\"range\" icon=\"Events\">\n          Range\n        </SegmentedControl.Button>\n        <SegmentedControl.Button key=\"calendar\" icon=\"Calendar\">\n          Calendar\n        </SegmentedControl.Button>\n      </SegmentedControl>\n      {mode === 'range' ? (\n        <PivotRangePicker\n          range={pivotRange}\n          onRangeChanged={onPivotRangeChange}\n        />\n      ) : (\n        <CalendarPicker\n          dates={[startEndRange.startDate, startEndRange.endDate]}\n          onDatesChanged={(startDate, endDate) => {\n            onRangeChanged([startDate, endDate]);\n            setStartEndRange((currentRange) => ({\n              ...currentRange,\n              startDate,\n              endDate,\n            }));\n          }}\n        />\n      )}\n      <Divider.Horizontal />\n    </DateModePicker>\n  );\n\n  return (\n    <Dropdown content={renderModePicker()} maxWidth=\"auto\">\n      {children ? (\n        children\n      ) : (\n        <Button icon=\"Calendar\" {...buttonProps}>\n          <span ref={spanRef}>{`${dayjs(initialRange[0]).format(\n            'YYYY/MM/DD HH:mm'\n          )}`}</span>\n          <Icon\n            type=\"ArrowRight\"\n            // style={{ marginLeft: 8, marginRight: 8 }}\n          />\n          <span>{`${dayjs(initialRange[1]).format('YYYY/MM/DD HH:mm')}`}</span>\n        </Button>\n      )}\n    </Dropdown>\n  );\n};\n\ninterface DateModePickerProps {\n  readonly maxheight: number;\n}\nconst DateModePicker = styled(Flex)<DateModePickerProps>`\n  border-radius: 8px;\n  box-shadow: 0 0 16px lightgrey;\n  padding: 16px;\n  overflow: auto;\n  background: white;\n  width: 375px;\n  max-height: ${(props) => props.maxheight}px;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}