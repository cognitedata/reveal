{"ast":null,"code":"import { acceptCompletion, autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { defaultKeymap, historyKeymap, history, indentLess, insertTab } from '@codemirror/commands';\nimport { bracketMatching, defaultHighlightStyle, foldGutter, foldKeymap, indentOnInput, syntaxHighlighting } from '@codemirror/language';\nimport { lintGutter, lintKeymap } from '@codemirror/lint';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { EditorState } from '@codemirror/state';\nimport { crosshairCursor, drawSelection, dropCursor, highlightActiveLine, highlightActiveLineGutter, highlightSpecialChars, keymap, lineNumbers, rectangularSelection, scrollPastEnd } from '@codemirror/view';\nconst PHRASES = {\n  // @codemirror/view\n  'Control character': 'Control character',\n  // @codemirror/language\n  'Folded lines': 'Folded lines',\n  'Unfolded lines': 'Unfolded lines',\n  to: 'to',\n  'folded code': 'folded code',\n  unfold: 'Unfold',\n  'Fold line': 'Fold line',\n  'Unfold line': 'Unfold line',\n  // @codemirror/search\n  'Go to line': 'Go to line',\n  go: 'go',\n  Find: 'Find',\n  Replace: 'Replace',\n  next: 'Next',\n  previous: 'Previous',\n  all: 'All',\n  'match case': 'Match case',\n  replace: 'Replace',\n  'replace all': 'Replace all',\n  close: 'close',\n  'current match': 'current match',\n  'replaced $ matches': 'replaced {{count}} matches',\n  'replaced match on line $': 'replaced match on line {{line}}',\n  'on line': 'on line',\n  // @codemirror/autocomplete\n  Completions: 'Completions',\n  // @codemirror/lint\n  Diagnostics: 'Diagnostics',\n  'No diagnostics': 'No diagnostics'\n};\n/**\n * Turns standard functions into CodeMirror commands. Returning `true` means no\n * other command should be executed for this keypress.\n */\nexport const getCommands = functions => {\n  return Object.keys(functions).reduce((commands, key) => ({\n    ...commands,\n    [key]: functions[key] ? (...args) => {\n      functions[key]?.(args);\n      return true;\n    } : () => false\n  }), {});\n};\nexport const getHotkeyExtension = ({\n  onRun\n}) => {\n  const customHotkeys = [{\n    key: 'Mod-Enter',\n    run: onRun\n  }, {\n    key: 'Shift-Tab',\n    run: indentLess\n  }, {\n    key: 'Tab',\n    run: acceptCompletion\n  }, {\n    key: 'Tab',\n    run: insertTab\n  }];\n  return keymap.of([...customHotkeys, ...closeBracketsKeymap, ...defaultKeymap, ...searchKeymap, ...historyKeymap, ...foldKeymap, ...completionKeymap, ...lintKeymap]);\n};\nexport const getExtensions = (commands, disabled) => {\n  return [lintGutter(), lineNumbers(), foldGutter(), highlightSpecialChars(), history(), drawSelection(), dropCursor(), EditorState.allowMultipleSelections.of(true), indentOnInput(), syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }), bracketMatching(), closeBrackets(), autocompletion(), rectangularSelection(), crosshairCursor(), highlightSelectionMatches(), getHotkeyExtension(getCommands(commands)), EditorState.phrases.of(PHRASES), ...[disabled ? [] : [scrollPastEnd(), highlightActiveLine(), highlightActiveLineGutter()]]];\n};","map":{"version":3,"names":["acceptCompletion","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","defaultKeymap","historyKeymap","history","indentLess","insertTab","bracketMatching","defaultHighlightStyle","foldGutter","foldKeymap","indentOnInput","syntaxHighlighting","lintGutter","lintKeymap","highlightSelectionMatches","searchKeymap","EditorState","crosshairCursor","drawSelection","dropCursor","highlightActiveLine","highlightActiveLineGutter","highlightSpecialChars","keymap","lineNumbers","rectangularSelection","scrollPastEnd","PHRASES","to","unfold","go","Find","Replace","next","previous","all","replace","close","Completions","Diagnostics","getCommands","functions","Object","keys","reduce","commands","key","args","getHotkeyExtension","onRun","customHotkeys","run","of","getExtensions","disabled","allowMultipleSelections","fallback","phrases"],"sources":["/Volumes/csvol/fusion/libs/shared/cdf-utilities/src/components/CodeEditor/extensions.ts"],"sourcesContent":["import {\n  acceptCompletion,\n  autocompletion,\n  closeBrackets,\n  closeBracketsKeymap,\n  completionKeymap,\n} from '@codemirror/autocomplete';\nimport {\n  defaultKeymap,\n  historyKeymap,\n  history,\n  indentLess,\n  insertTab,\n} from '@codemirror/commands';\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  foldGutter,\n  foldKeymap,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language';\nimport { lintGutter, lintKeymap } from '@codemirror/lint';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { EditorState } from '@codemirror/state';\nimport {\n  Command,\n  crosshairCursor,\n  drawSelection,\n  dropCursor,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n  rectangularSelection,\n  scrollPastEnd,\n} from '@codemirror/view';\n\nconst PHRASES: Record<string, string> = {\n  // @codemirror/view\n  'Control character': 'Control character',\n  // @codemirror/language\n  'Folded lines': 'Folded lines',\n  'Unfolded lines': 'Unfolded lines',\n  to: 'to',\n  'folded code': 'folded code',\n  unfold: 'Unfold',\n  'Fold line': 'Fold line',\n  'Unfold line': 'Unfold line',\n  // @codemirror/search\n  'Go to line': 'Go to line',\n  go: 'go',\n  Find: 'Find',\n  Replace: 'Replace',\n  next: 'Next',\n  previous: 'Previous',\n  all: 'All',\n  'match case': 'Match case',\n  replace: 'Replace',\n  'replace all': 'Replace all',\n  close: 'close',\n  'current match': 'current match',\n  'replaced $ matches': 'replaced {{count}} matches',\n  'replaced match on line $': 'replaced match on line {{line}}',\n  'on line': 'on line',\n  // @codemirror/autocomplete\n  Completions: 'Completions',\n  // @codemirror/lint\n  Diagnostics: 'Diagnostics',\n  'No diagnostics': 'No diagnostics',\n};\n\nexport type CommandFunction = (args: any[]) => void;\n\n/**\n * Turns standard functions into CodeMirror commands. Returning `true` means no\n * other command should be executed for this keypress.\n */\nexport const getCommands = (\n  functions: Record<string, CommandFunction | undefined>\n) => {\n  return Object.keys(functions).reduce(\n    (commands, key) => ({\n      ...commands,\n      [key]: functions[key]\n        ? (...args: any[]) => {\n            functions[key]?.(args);\n            return true;\n          }\n        : () => false,\n    }),\n    {} as Record<string, Command>\n  );\n};\n\nexport const getHotkeyExtension = ({ onRun }: Record<string, Command>) => {\n  const customHotkeys = [\n    {\n      key: 'Mod-Enter',\n      run: onRun,\n    },\n    {\n      key: 'Shift-Tab',\n      run: indentLess,\n    },\n    {\n      key: 'Tab',\n      run: acceptCompletion,\n    },\n    {\n      key: 'Tab',\n      run: insertTab,\n    },\n  ];\n\n  return keymap.of([\n    ...customHotkeys,\n    ...closeBracketsKeymap,\n    ...defaultKeymap,\n    ...searchKeymap,\n    ...historyKeymap,\n    ...foldKeymap,\n    ...completionKeymap,\n    ...lintKeymap,\n  ]);\n};\n\nexport const getExtensions = (\n  commands: Record<string, CommandFunction | undefined>,\n  disabled?: boolean\n) => {\n  return [\n    lintGutter(),\n    lineNumbers(),\n    foldGutter(),\n    highlightSpecialChars(),\n    history(),\n    drawSelection(),\n    dropCursor(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    crosshairCursor(),\n    highlightSelectionMatches(),\n    getHotkeyExtension(getCommands(commands)),\n    EditorState.phrases.of(PHRASES),\n    ...[\n      disabled\n        ? []\n        : [scrollPastEnd(), highlightActiveLine(), highlightActiveLineGutter()],\n    ],\n  ];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}