{"ast":null,"code":"import { formatDate, formatDateCustom } from '@cognite/cogs.js';\nimport { ABSOLUTE_TIME_FORMAT, RELATIVE_TIME_THRESHOLD_IN_HOURS } from '../common';\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n\nexport const formatTime = (timestamp, absolute) => {\n  const shouldUseAbsolute = absolute || Math.abs((new Date().getTime() - timestamp) / 1000 / 60 / 60) > RELATIVE_TIME_THRESHOLD_IN_HOURS;\n  return shouldUseAbsolute ? getAbsoluteTime(timestamp) : getRelativeTime(timestamp);\n};\nexport const getRelativeTime = timestamp => {\n  return formatDate(timestamp, true).toLowerCase();\n};\nexport const getAbsoluteTime = timestamp => {\n  return formatDateCustom(timestamp, ABSOLUTE_TIME_FORMAT);\n};\nexport const getDetailedTime = timestamp => {\n  return new Date(timestamp).toISOString();\n};","map":{"version":3,"names":["formatDate","formatDateCustom","ABSOLUTE_TIME_FORMAT","RELATIVE_TIME_THRESHOLD_IN_HOURS","formatTime","timestamp","absolute","shouldUseAbsolute","Math","abs","Date","getTime","getAbsoluteTime","getRelativeTime","toLowerCase","getDetailedTime","toISOString"],"sources":["/Volumes/csvol/fusion/libs/shared/cdf-utilities/src/utils/date.ts"],"sourcesContent":["import { formatDate, formatDateCustom } from '@cognite/cogs.js';\n\nimport {\n  ABSOLUTE_TIME_FORMAT,\n  RELATIVE_TIME_THRESHOLD_IN_HOURS,\n} from '../common';\n\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\n\nexport const formatTime = (timestamp: number, absolute?: boolean) => {\n  const shouldUseAbsolute =\n    absolute ||\n    Math.abs((new Date().getTime() - timestamp) / 1000 / 60 / 60) >\n      RELATIVE_TIME_THRESHOLD_IN_HOURS;\n\n  return shouldUseAbsolute\n    ? getAbsoluteTime(timestamp)\n    : getRelativeTime(timestamp);\n};\n\nexport const getRelativeTime = (timestamp: number) => {\n  return formatDate(timestamp, true).toLowerCase();\n};\n\nexport const getAbsoluteTime = (timestamp: number) => {\n  return formatDateCustom(timestamp, ABSOLUTE_TIME_FORMAT);\n};\n\nexport const getDetailedTime = (timestamp: number) => {\n  return new Date(timestamp).toISOString();\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,gBAAgB,QAAQ,kBAAkB;AAE/D,SACEC,oBAAoB,EACpBC,gCAAgC,QAC3B,WAAW;;AAElB;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,SAAiB,EAAEC,QAAkB,KAAK;EACnE,MAAMC,iBAAiB,GACrBD,QAAQ,IACRE,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGN,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAC3DF,gCAAgC;EAEpC,OAAOI,iBAAiB,GACpBK,eAAe,CAACP,SAAS,CAAC,GAC1BQ,eAAe,CAACR,SAAS,CAAC;AAChC,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAIR,SAAiB,IAAK;EACpD,OAAOL,UAAU,CAACK,SAAS,EAAE,IAAI,CAAC,CAACS,WAAW,EAAE;AAClD,CAAC;AAED,OAAO,MAAMF,eAAe,GAAIP,SAAiB,IAAK;EACpD,OAAOJ,gBAAgB,CAACI,SAAS,EAAEH,oBAAoB,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMa,eAAe,GAAIV,SAAiB,IAAK;EACpD,OAAO,IAAIK,IAAI,CAACL,SAAS,CAAC,CAACW,WAAW,EAAE;AAC1C,CAAC"},"metadata":{},"sourceType":"module"}