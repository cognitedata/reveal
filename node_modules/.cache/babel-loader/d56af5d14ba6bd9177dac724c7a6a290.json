{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimePeriods/TimePeriods.tsx\";\nimport * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\nimport { TimePeriodsWrapper } from './elements';\nimport { TimePeriodButton } from './TimePeriodButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimePeriods = ({\n  options,\n  value,\n  onChange\n}) => {\n  if (isEmpty(options)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(TimePeriodsWrapper, {\n    children: options.map(timePeriod => {\n      return /*#__PURE__*/_jsxDEV(TimePeriodButton, {\n        timePeriod: timePeriod,\n        isSelected: timePeriod === value,\n        onClick: onChange\n      }, timePeriod, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = TimePeriods;\nvar _c;\n$RefreshReg$(_c, \"TimePeriods\");","map":{"version":3,"names":["React","isEmpty","TimePeriodsWrapper","TimePeriodButton","TimePeriods","options","value","onChange","map","timePeriod"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimePeriods/TimePeriods.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport isEmpty from 'lodash/isEmpty';\n\nimport { TimePeriod, UpdateTimePeriodProps } from '../../types';\n\nimport { TimePeriodsWrapper } from './elements';\nimport { TimePeriodButton } from './TimePeriodButton';\n\nexport interface TimePeriodsProps {\n  options: TimePeriod[];\n  value?: TimePeriod;\n  onChange: (props: UpdateTimePeriodProps) => void;\n}\n\nexport const TimePeriods: React.FC<TimePeriodsProps> = ({\n  options,\n  value,\n  onChange,\n}) => {\n  if (isEmpty(options)) {\n    return null;\n  }\n\n  return (\n    <TimePeriodsWrapper>\n      {options.map((timePeriod) => {\n        return (\n          <TimePeriodButton\n            key={timePeriod}\n            timePeriod={timePeriod}\n            isSelected={timePeriod === value}\n            onClick={onChange}\n          />\n        );\n      })}\n    </TimePeriodsWrapper>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,OAAO,MAAM,gBAAgB;AAIpC,SAASC,kBAAkB,QAAQ,YAAY;AAC/C,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC;AAQtD,OAAO,MAAMC,WAAuC,GAAG,CAAC;EACtDC,OAAO;EACPC,KAAK;EACLC;AACF,CAAC,KAAK;EACJ,IAAIN,OAAO,CAACI,OAAO,CAAC,EAAE;IACpB,OAAO,IAAI;EACb;EAEA,oBACE,QAAC,kBAAkB;IAAA,UAChBA,OAAO,CAACG,GAAG,CAAEC,UAAU,IAAK;MAC3B,oBACE,QAAC,gBAAgB;QAEf,UAAU,EAAEA,UAAW;QACvB,UAAU,EAAEA,UAAU,KAAKH,KAAM;QACjC,OAAO,EAAEC;MAAS,GAHbE,UAAU;QAAA;QAAA;QAAA;MAAA,QAIf;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACiB;AAEzB,CAAC;AAAC,KAvBWL,WAAuC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}