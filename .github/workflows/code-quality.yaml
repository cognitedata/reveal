name: Code Quality
on:
  push:
    branches: [master, main, release-*, staging]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"
          cache: yarn
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn install --ignore-scripts --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}

      - name: Linting
        run: yarn lint
  tests:
    name: Tests
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: ["unit", "storybook"]
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"
          cache: yarn
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn install --ignore-scripts --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}

      - name: Unit Tests
        if: ${{matrix.test-type == 'unit'}}
        run: yarn test:ci

      - name: Install Playwright
        if: ${{matrix.test-type == 'storybook'}}
        run: npx playwright install --with-deps chromium

      - name: Storybook Tests
        if: ${{matrix.test-type == 'storybook'}}
        env:
          NODE_OPTIONS: --max-old-space-size=16384
        run: yarn test-storybook:ci

      - name: Upload Coverage Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.test-type }}
          path: coverage/

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{matrix.test-type == 'unit' && always() }}
        with:
          files: "**/junit.xml"
  publish-coverage-results:
    name: Publish Coverage Results
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: coverage

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: true
