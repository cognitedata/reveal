{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/UploadFunctionModal.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react/no-array-index-key */\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMutation, useQueryCache } from '@tanstack/react-query';\nimport { Modal, Form, InputNumber, Input, Upload, Alert, Row, Col, notification } from 'antd';\nimport { Button, Icon, Dropdown, Tooltip, Menu } from '@cognite/cogs.js';\nimport ErrorFeedback from '../../components/Common/atoms/ErrorFeedback';\nimport FunctionMetadata from '../../components/FunctionModals/FunctionMetadata';\nimport Link from '../../components/Link';\nimport { uploadFunction } from '../../utils/api';\nimport { checkSecretKey, getAllSecretKeys, checkSecretValue, checkFunctionName, checkOwner, checkDescription, checkExternalId, checkSecrets, checkFile, checkFloat } from '../../utils/formValidations';\nimport { useLimits } from '../../utils/hooks';\nimport { allFunctionsKey } from '../../utils/queryKeys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledForm = /*#__PURE__*/styled(Form).withConfig({\n  displayName: \"UploadFunctionModal__StyledForm\",\n  componentId: \"k1sgdp-0\"\n})([\"label{font-weight:bold;}.cogs-icon{padding-left:8px;}.ant-upload-drag-container{display:table-cell;vertical-align:middle;height:350px;}\"]);\n_c = StyledForm;\nconst runtimes = [{\n  label: 'Python 3.7',\n  value: 'py37'\n}, {\n  label: 'Python 3.8',\n  value: 'py38'\n}, {\n  label: 'Python 3.9',\n  value: 'py39'\n}, {\n  label: 'Python 3.10',\n  value: 'py310'\n}];\nconst limitDefaults = {\n  timeoutMinutes: 10,\n  cpuCores: {\n    default: 0.25,\n    max: 0.6,\n    min: 0.1\n  },\n  memoryGb: {\n    default: 1,\n    max: 2.5,\n    min: 0.1\n  },\n  runtimes: ['py37', 'py38', 'py39', 'py310'],\n  responseSizeMb: 1\n};\nexport default function UploadFunctionModal({\n  onCancel\n}) {\n  _s();\n  const queryCache = useQueryCache();\n  const {\n    data: limits = limitDefaults\n  } = useLimits();\n  const [doUploadFunction, {\n    isLoading,\n    isError,\n    error\n  }] = useMutation(uploadFunction, {\n    onSuccess(id) {\n      notification.success({\n        message: 'Function created',\n        description: `Fuction ${id} was successfully created`\n      });\n      queryCache.invalidateQueries(allFunctionsKey);\n      onCancel();\n    }\n  });\n  const disableForm = isLoading;\n  const [functionName, setFunctionName] = useState({\n    value: '',\n    touched: false\n  });\n  const [description, setDescription] = useState('');\n  const [owner, setOwner] = useState('');\n  const [externalId, setExternalId] = useState('');\n  const [file, setFile] = useState();\n  const [fileTouched, setFileTouched] = useState(false);\n  const [secrets, setSecrets] = useState([]);\n  const [cpu, setCpu] = useState(String(limits.cpuCores.default));\n  const [memory, setMemory] = useState(String(limits.memoryGb.default));\n  const [runtime, setRuntime] = useState(runtimes[1]);\n  const [metadata, setMetadata] = useState([]);\n  const [dataSetId, setDataSetId] = useState(undefined);\n  const addSecret = () => {\n    setSecrets(prevSecrets => [...prevSecrets, {\n      key: '',\n      value: '',\n      keyTouched: false,\n      valueTouched: false\n    }]);\n  };\n  const removeSecret = index => {\n    const arr = [...secrets];\n    arr.splice(index, 1);\n    setSecrets(arr);\n  };\n  const handleSecretChange = evt => {\n    const {\n      idx\n    } = evt.target.dataset;\n    const changeField = evt.target.name;\n    const updatedSecrets = [...secrets];\n    if (changeField === 'secret_key') {\n      updatedSecrets[idx].key = evt.target.value;\n      updatedSecrets[idx].keyTouched = true;\n    } else if (changeField === 'secret_value') {\n      updatedSecrets[idx].value = evt.target.value;\n      updatedSecrets[idx].valueTouched = true;\n    }\n    setSecrets(updatedSecrets);\n  };\n  const handleCpuChange = evt => {\n    setCpu(evt.target.value);\n  };\n  const handleMemoryChange = evt => {\n    setMemory(evt.target.value);\n  };\n  const handleFileUploadChange = evt => {\n    if (evt.file.status === 'removed') {\n      setFile(undefined);\n      setFileTouched(true);\n      evt.fileList = [];\n      return;\n    }\n    setFile(evt.file);\n    setFileTouched(true);\n    if (evt.fileList.length > 1) {\n      evt.fileList.shift();\n    }\n  };\n  const handleSubmit = async evt => {\n    if (canBeSubmitted) {\n      evt.preventDefault();\n      doUploadFunction({\n        data: {\n          name: functionName.value,\n          externalId,\n          owner,\n          cpu: cpu ? parseFloat(cpu) : undefined,\n          memory: memory ? parseFloat(memory) : undefined,\n          secrets: secrets.reduce((accl, s) => ({\n            ...accl,\n            [s.key]: s.value\n          }), {}),\n          metadata: metadata.reduce((accl, s) => ({\n            ...accl,\n            [s.key]: s.value\n          }), {}),\n          description,\n          runtime: runtime.value\n        },\n        file: file,\n        dataSetId\n      });\n    }\n  };\n  const checkCPU = checkFloat(limits.cpuCores.min, limits.cpuCores.max);\n  const checkMemory = checkFloat(limits.memoryGb.min, limits.memoryGb.max);\n  const isAKS = limits?.vendor === 'aks';\n  const canBeSubmitted = !!file && !checkFunctionName(functionName.value).error && !checkOwner(owner).error && !checkDescription(description).error && !checkExternalId(externalId).error && checkSecrets(secrets) && !checkCPU(cpu).error && !checkMemory(memory).error && !checkFile(file).error;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: true,\n    title: \"Upload Function\",\n    width: \"975px\",\n    style: {\n      top: 20\n    },\n    onCancel: onCancel,\n    footer: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: \"CloseLarge\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, \"cance\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: isLoading ? 'Loader' : 'Upload',\n      disabled: disableForm || !canBeSubmitted,\n      onClick: handleSubmit,\n      htmlType: \"submit\",\n      children: \"Upload\"\n    }, \"upload\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)],\n    children: [isError ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Error\",\n      description: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An error occured when trying to upload this function.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ErrorFeedback, {\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true),\n      type: \"error\",\n      closable: true,\n      showIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : undefined, /*#__PURE__*/_jsxDEV(StyledForm, {\n      layout: \"vertical\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Function File\",\n            validateStatus: fileTouched && checkFile(file).error ? 'error' : 'success',\n            help: fileTouched && checkFile(file).error ? 'A file is required' : undefined,\n            required: true,\n            colon: false,\n            children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n              accept: \".zip\",\n              onChange: handleFileUploadChange,\n              beforeUpload: () => false,\n              multiple: false,\n              fileList: file ? [file] : [],\n              disabled: isLoading,\n              name: \"fileUpload\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Drag file here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Browse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Must be a zip file with at least a Python file called\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"handler.py \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), \"with a function named \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"handle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this), \" with any of following arguments: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 26\n            }, this), \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 39\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"secrets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 53\n            }, this), \" and\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"metadata\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), \". More information can be found\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              href: \"https://docs.cognite.com/api/v1/#tag/Functions\",\n              children: \"here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Dataset ID\",\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              disabled: disableForm,\n              name: \"datasetId\",\n              style: {\n                width: '100%'\n              },\n              value: dataSetId,\n              onChange: value => {\n                // eslint-disable-next-line no-unused-expressions\n                value && setDataSetId(value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Function name\",\n            validateStatus: functionName.touched && checkFunctionName(functionName.value).error ? 'error' : 'success',\n            help: functionName.touched ? checkFunctionName(functionName.value).message : undefined,\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              disabled: disableForm,\n              name: \"functionName\",\n              value: functionName.value,\n              allowClear: true,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setFunctionName({\n                value,\n                touched: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Owner\",\n            validateStatus: checkOwner(owner).error ? 'error' : 'success',\n            help: checkOwner(owner).message,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              disabled: disableForm,\n              name: \"owner\",\n              value: owner,\n              allowClear: true,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setOwner(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Description\",\n            validateStatus: checkDescription(description).error ? 'error' : 'success',\n            help: checkDescription(description).message,\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n              disabled: disableForm,\n              name: \"description\",\n              value: description,\n              allowClear: true,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setDescription(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"External Id\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                placement: \"right\",\n                content: \"The external id must be unique for its resource type\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  type: \"Help\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            validateStatus: checkExternalId(externalId).error ? 'error' : 'success',\n            help: checkExternalId(externalId).message,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              disabled: disableForm,\n              name: \"externalId\",\n              value: externalId,\n              allowClear: true,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setExternalId(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"CPU\",\n            validateStatus: checkCPU(cpu).error ? 'error' : 'success',\n            help: checkCPU(cpu).message,\n            style: {\n              fontWeight: 'bold'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"cpu\",\n              type: \"number\",\n              step: \"0.05\",\n              min: \"0.1\",\n              max: \"0.6\",\n              value: cpu,\n              onChange: handleCpuChange,\n              disabled: isAKS,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Memory\",\n            validateStatus: checkMemory(memory).error ? 'error' : 'success',\n            help: checkMemory(memory).message,\n            style: {\n              fontWeight: 'bold'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"Memory\",\n              value: memory,\n              type: \"number\",\n              step: \"0.1\",\n              min: \"0.1\",\n              max: \"2.5\",\n              onChange: handleMemoryChange,\n              disabled: isAKS,\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Runtime\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              content: /*#__PURE__*/_jsxDEV(Menu, {\n                children: runtimes.map(rt => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                  onClick: () => setRuntime(rt),\n                  children: rt.label\n                }, rt.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: \"ChevronDownSmall\",\n                iconPlacement: \"right\",\n                children: runtime.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Secrets\",\n            children: [secrets.map((s, index) => /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 10,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Key\",\n                  required: true,\n                  validateStatus: s.keyTouched && checkSecretKey(s.key, getAllSecretKeys(secrets)).error ? 'error' : 'success',\n                  help: s.keyTouched ? checkSecretKey(s.key, getAllSecretKeys(secrets)).message : undefined,\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    value: s.key,\n                    name: \"secret_key\",\n                    \"data-idx\": index,\n                    allowClear: true,\n                    onChange: handleSecretChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 10,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Value\",\n                  required: true,\n                  validateStatus: s.valueTouched && checkSecretValue(s.value).error ? 'error' : 'success',\n                  help: s.valueTouched ? checkSecretValue(s.value).message : undefined,\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    value: s.value,\n                    name: \"secret_value\",\n                    \"data-idx\": index,\n                    allowClear: true,\n                    onChange: handleSecretChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 2,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"-\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"btnDeleteSecret\",\n                    onClick: () => removeSecret(index),\n                    style: {\n                      left: 4,\n                      position: 'relative'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Icon, {\n                      type: \"Delete\",\n                      size: 22\n                      // @ts-ignore\n                      ,\n                      style: {\n                        left: -6,\n                        position: 'relative'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)]\n            }, `secret-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)), secrets.length >= 5 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You may only have 5 secrets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addSecret,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                type: \"Add\",\n                size: 22\n                // @ts-ignore\n                ,\n                style: {\n                  left: -12,\n                  position: 'relative'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), \"Add a secret\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FunctionMetadata, {\n            metadata: metadata,\n            setMetadata: setMetadata\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadFunctionModal, \"uWdmBZ5OczF7hwolg3BrlZ8q/U0=\", false, function () {\n  return [useQueryCache, useLimits, useMutation];\n});\n_c2 = UploadFunctionModal;\nexport const stuffForUnitTests = {\n  checkFunctionName,\n  checkFile,\n  checkDescription,\n  checkExternalId,\n  checkOwner,\n  checkSecretKey,\n  checkSecretValue,\n  checkSecrets\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"UploadFunctionModal\");","map":{"version":3,"names":["React","useState","styled","useMutation","useQueryCache","Modal","Form","InputNumber","Input","Upload","Alert","Row","Col","notification","Button","Icon","Dropdown","Tooltip","Menu","ErrorFeedback","FunctionMetadata","Link","uploadFunction","checkSecretKey","getAllSecretKeys","checkSecretValue","checkFunctionName","checkOwner","checkDescription","checkExternalId","checkSecrets","checkFile","checkFloat","useLimits","allFunctionsKey","StyledForm","runtimes","label","value","limitDefaults","timeoutMinutes","cpuCores","default","max","min","memoryGb","responseSizeMb","UploadFunctionModal","onCancel","queryCache","data","limits","doUploadFunction","isLoading","isError","error","onSuccess","id","success","message","description","invalidateQueries","disableForm","functionName","setFunctionName","touched","setDescription","owner","setOwner","externalId","setExternalId","file","setFile","fileTouched","setFileTouched","secrets","setSecrets","cpu","setCpu","String","memory","setMemory","runtime","setRuntime","metadata","setMetadata","dataSetId","setDataSetId","undefined","addSecret","prevSecrets","key","keyTouched","valueTouched","removeSecret","index","arr","splice","handleSecretChange","evt","idx","target","dataset","changeField","name","updatedSecrets","handleCpuChange","handleMemoryChange","handleFileUploadChange","status","fileList","length","shift","handleSubmit","canBeSubmitted","preventDefault","parseFloat","reduce","accl","s","checkCPU","checkMemory","isAKS","vendor","top","width","fontWeight","map","rt","left","position","stuffForUnitTests"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/UploadFunctionModal.tsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\n\nimport React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { useMutation, useQueryCache } from '@tanstack/react-query';\nimport {\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Upload,\n  Alert,\n  Row,\n  Col,\n  notification,\n} from 'antd';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\n\nimport { Button, Icon, Dropdown, Tooltip, Menu } from '@cognite/cogs.js';\n\nimport ErrorFeedback from '../../components/Common/atoms/ErrorFeedback';\nimport FunctionMetadata, {\n  MetaType,\n} from '../../components/FunctionModals/FunctionMetadata';\nimport Link from '../../components/Link';\nimport { CogFunctionLimit, Runtime } from '../../types';\nimport { uploadFunction } from '../../utils/api';\nimport {\n  checkSecretKey,\n  getAllSecretKeys,\n  checkSecretValue,\n  checkFunctionName,\n  checkOwner,\n  checkDescription,\n  checkExternalId,\n  checkSecrets,\n  checkFile,\n  checkFloat,\n} from '../../utils/formValidations';\nimport { useLimits } from '../../utils/hooks';\nimport { allFunctionsKey } from '../../utils/queryKeys';\n\nexport interface Secret {\n  key: string;\n  value: string;\n  keyTouched: boolean;\n  valueTouched: boolean;\n}\n\ntype Props = {\n  onCancel: () => void;\n};\n\nconst StyledForm = styled(Form)`\n  label {\n    font-weight: bold;\n  }\n  .cogs-icon {\n    padding-left: 8px;\n  }\n  .ant-upload-drag-container {\n    display: table-cell;\n    vertical-align: middle;\n    height: 350px;\n  }\n`;\n\nexport type RuntimeOption = { label: string; value: Runtime };\n\nconst runtimes: RuntimeOption[] = [\n  { label: 'Python 3.7', value: 'py37' },\n  { label: 'Python 3.8', value: 'py38' },\n  { label: 'Python 3.9', value: 'py39' },\n  { label: 'Python 3.10', value: 'py310' },\n];\n\nconst limitDefaults: CogFunctionLimit = {\n  timeoutMinutes: 10,\n  cpuCores: { default: 0.25, max: 0.6, min: 0.1 },\n  memoryGb: { default: 1, max: 2.5, min: 0.1 },\n  runtimes: ['py37', 'py38', 'py39', 'py310'],\n  responseSizeMb: 1,\n};\n\nexport default function UploadFunctionModal({ onCancel }: Props) {\n  const queryCache = useQueryCache();\n  const { data: limits = limitDefaults } = useLimits();\n\n  const [doUploadFunction, { isLoading, isError, error }] = useMutation(\n    uploadFunction,\n    {\n      onSuccess(id) {\n        notification.success({\n          message: 'Function created',\n          description: `Fuction ${id} was successfully created`,\n        });\n        queryCache.invalidateQueries(allFunctionsKey);\n        onCancel();\n      },\n    }\n  );\n\n  const disableForm = isLoading;\n\n  const [functionName, setFunctionName] = useState({\n    value: '',\n    touched: false,\n  });\n  const [description, setDescription] = useState('');\n  const [owner, setOwner] = useState('');\n  const [externalId, setExternalId] = useState('');\n  const [file, setFile] = useState<UploadFile>();\n  const [fileTouched, setFileTouched] = useState(false);\n  const [secrets, setSecrets] = useState([] as Secret[]);\n  const [cpu, setCpu] = useState(String(limits.cpuCores.default));\n  const [memory, setMemory] = useState(String(limits.memoryGb.default));\n  const [runtime, setRuntime] = useState<RuntimeOption>(runtimes[1]);\n  const [metadata, setMetadata] = useState([] as MetaType[]);\n  const [dataSetId, setDataSetId] = useState<undefined | number>(undefined);\n\n  const addSecret = () => {\n    setSecrets((prevSecrets) => [\n      ...prevSecrets,\n      { key: '', value: '', keyTouched: false, valueTouched: false } as Secret,\n    ]);\n  };\n\n  const removeSecret = (index: number) => {\n    const arr = [...secrets];\n    arr.splice(index, 1);\n    setSecrets(arr);\n  };\n\n  const handleSecretChange = (evt: {\n    target: { name: string; value: string; dataset: any };\n  }) => {\n    const { idx } = evt.target.dataset;\n    const changeField = evt.target.name;\n    const updatedSecrets = [...secrets];\n    if (changeField === 'secret_key') {\n      updatedSecrets[idx].key = evt.target.value;\n      updatedSecrets[idx].keyTouched = true;\n    } else if (changeField === 'secret_value') {\n      updatedSecrets[idx].value = evt.target.value;\n      updatedSecrets[idx].valueTouched = true;\n    }\n    setSecrets(updatedSecrets);\n  };\n\n  const handleCpuChange = (evt: { target: { value: string } }) => {\n    setCpu(evt.target.value);\n  };\n\n  const handleMemoryChange = (evt: { target: { value: string } }) => {\n    setMemory(evt.target.value);\n  };\n\n  const handleFileUploadChange = (evt: UploadChangeParam) => {\n    if (evt.file.status === 'removed') {\n      setFile(undefined);\n      setFileTouched(true);\n      evt.fileList = [];\n      return;\n    }\n    setFile(evt.file);\n    setFileTouched(true);\n    if (evt.fileList.length > 1) {\n      evt.fileList.shift();\n    }\n  };\n\n  const handleSubmit = async (evt: { preventDefault: () => void }) => {\n    if (canBeSubmitted) {\n      evt.preventDefault();\n      doUploadFunction({\n        data: {\n          name: functionName.value,\n          externalId,\n          owner,\n          cpu: cpu ? parseFloat(cpu) : undefined,\n          memory: memory ? parseFloat(memory) : undefined,\n          secrets: secrets.reduce(\n            (accl, s) => ({ ...accl, [s.key]: s.value }),\n            {}\n          ),\n          metadata: metadata.reduce(\n            (accl, s) => ({ ...accl, [s.key]: s.value }),\n            {}\n          ),\n          description,\n          runtime: runtime.value,\n        },\n        file: file!,\n        dataSetId,\n      });\n    }\n  };\n\n  const checkCPU = checkFloat(limits.cpuCores.min, limits.cpuCores.max);\n  const checkMemory = checkFloat(limits.memoryGb.min, limits.memoryGb.max);\n  const isAKS = limits?.vendor === 'aks';\n\n  const canBeSubmitted =\n    !!file &&\n    !checkFunctionName(functionName.value).error &&\n    !checkOwner(owner).error &&\n    !checkDescription(description).error &&\n    !checkExternalId(externalId).error &&\n    checkSecrets(secrets) &&\n    !checkCPU(cpu).error &&\n    !checkMemory(memory).error &&\n    !checkFile(file).error;\n\n  return (\n    <Modal\n      open\n      title=\"Upload Function\"\n      width=\"975px\"\n      style={{ top: 20 }}\n      onCancel={onCancel}\n      footer={[\n        <Button key=\"cance\" icon=\"CloseLarge\" onClick={onCancel}>\n          Cancel\n        </Button>,\n        <Button\n          type=\"primary\"\n          key=\"upload\"\n          icon={isLoading ? 'Loader' : 'Upload'}\n          disabled={disableForm || !canBeSubmitted}\n          onClick={handleSubmit}\n          htmlType=\"submit\"\n        >\n          Upload\n        </Button>,\n      ]}\n    >\n      {isError ? (\n        <Alert\n          message=\"Error\"\n          description={\n            <>\n              <p>An error occured when trying to upload this function.</p>\n              <ErrorFeedback error={error} />\n            </>\n          }\n          type=\"error\"\n          closable\n          showIcon\n        />\n      ) : undefined}\n      <StyledForm layout=\"vertical\">\n        <Row gutter={[16, 16]}>\n          <Col span={12}>\n            <Form.Item\n              label=\"Function File\"\n              validateStatus={\n                fileTouched && checkFile(file).error ? 'error' : 'success'\n              }\n              help={\n                fileTouched && checkFile(file).error\n                  ? 'A file is required'\n                  : undefined\n              }\n              required\n              colon={false}\n            >\n              <Upload.Dragger\n                accept=\".zip\"\n                onChange={handleFileUploadChange}\n                beforeUpload={() => false}\n                multiple={false}\n                fileList={file ? [file] : []}\n                disabled={isLoading}\n                name=\"fileUpload\"\n              >\n                <p>Drag file here</p>\n                <p>or</p>\n                <p>\n                  <Button>Browse</Button>\n                </p>\n              </Upload.Dragger>\n            </Form.Item>\n            <p>\n              Must be a zip file with at least a Python file called{' '}\n              <b>handler.py </b>\n              with a function named <b>handle</b> with any of following\n              arguments: <b>data</b>, <b>client</b> <b>secrets</b> and{' '}\n              <b>metadata</b>. More information can be found{' '}\n              <Link href=\"https://docs.cognite.com/api/v1/#tag/Functions\">\n                here.\n              </Link>\n            </p>\n            <Form.Item label=\"Dataset ID\">\n              <InputNumber\n                disabled={disableForm}\n                name=\"datasetId\"\n                style={{ width: '100%' }}\n                value={dataSetId}\n                onChange={(value) => {\n                  // eslint-disable-next-line no-unused-expressions\n                  value && setDataSetId(value);\n                }}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              label=\"Function name\"\n              validateStatus={\n                functionName.touched &&\n                checkFunctionName(functionName.value).error\n                  ? 'error'\n                  : 'success'\n              }\n              help={\n                functionName.touched\n                  ? checkFunctionName(functionName.value).message\n                  : undefined\n              }\n              required\n            >\n              <Input\n                disabled={disableForm}\n                name=\"functionName\"\n                value={functionName.value}\n                allowClear\n                onChange={({ target: { value } }) =>\n                  setFunctionName({ value, touched: true })\n                }\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Owner\"\n              validateStatus={checkOwner(owner).error ? 'error' : 'success'}\n              help={checkOwner(owner).message}\n            >\n              <Input\n                disabled={disableForm}\n                name=\"owner\"\n                value={owner}\n                allowClear\n                onChange={({ target: { value } }) => setOwner(value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n              validateStatus={\n                checkDescription(description).error ? 'error' : 'success'\n              }\n              help={checkDescription(description).message}\n            >\n              <Input.TextArea\n                disabled={disableForm}\n                name=\"description\"\n                value={description}\n                allowClear\n                onChange={({ target: { value } }) => setDescription(value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={\n                <>\n                  External Id\n                  <Tooltip\n                    placement=\"right\"\n                    content=\"The external id must be unique for its resource type\"\n                  >\n                    <Icon type=\"Help\" />\n                  </Tooltip>\n                </>\n              }\n              validateStatus={\n                checkExternalId(externalId).error ? 'error' : 'success'\n              }\n              help={checkExternalId(externalId).message}\n            >\n              <Input\n                disabled={disableForm}\n                name=\"externalId\"\n                value={externalId}\n                allowClear\n                onChange={({ target: { value } }) => setExternalId(value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"CPU\"\n              validateStatus={checkCPU(cpu).error ? 'error' : 'success'}\n              help={checkCPU(cpu).message}\n              style={{ fontWeight: 'bold' }}\n            >\n              <Input\n                name=\"cpu\"\n                type=\"number\"\n                step=\"0.05\"\n                min=\"0.1\"\n                max=\"0.6\"\n                value={cpu}\n                onChange={handleCpuChange}\n                disabled={isAKS}\n                allowClear\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Memory\"\n              validateStatus={checkMemory(memory).error ? 'error' : 'success'}\n              help={checkMemory(memory).message}\n              style={{ fontWeight: 'bold' }}\n            >\n              <Input\n                name=\"Memory\"\n                value={memory}\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"2.5\"\n                onChange={handleMemoryChange}\n                disabled={isAKS}\n                allowClear\n              />\n            </Form.Item>\n            <Form.Item label=\"Runtime\">\n              <Dropdown\n                content={\n                  <Menu>\n                    {runtimes.map((rt) => (\n                      <Menu.Item key={rt.value} onClick={() => setRuntime(rt)}>\n                        {rt.label}\n                      </Menu.Item>\n                    ))}\n                  </Menu>\n                }\n              >\n                <Button icon=\"ChevronDownSmall\" iconPlacement=\"right\">\n                  {runtime.label}\n                </Button>\n              </Dropdown>\n            </Form.Item>\n            <Form.Item label=\"Secrets\">\n              {secrets.map((s: Secret, index) => (\n                <Row key={`secret-${index}`}>\n                  <Col span={10}>\n                    <Form.Item\n                      label=\"Key\"\n                      required\n                      validateStatus={\n                        s.keyTouched &&\n                        checkSecretKey(s.key, getAllSecretKeys(secrets)).error\n                          ? 'error'\n                          : 'success'\n                      }\n                      help={\n                        s.keyTouched\n                          ? checkSecretKey(s.key, getAllSecretKeys(secrets))\n                              .message\n                          : undefined\n                      }\n                    >\n                      <Input\n                        value={s.key}\n                        name=\"secret_key\"\n                        data-idx={index}\n                        allowClear\n                        onChange={handleSecretChange}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={10}>\n                    <Form.Item\n                      label=\"Value\"\n                      required\n                      validateStatus={\n                        s.valueTouched && checkSecretValue(s.value).error\n                          ? 'error'\n                          : 'success'\n                      }\n                      help={\n                        s.valueTouched\n                          ? checkSecretValue(s.value).message\n                          : undefined\n                      }\n                    >\n                      <Input\n                        value={s.value}\n                        name=\"secret_value\"\n                        data-idx={index}\n                        allowClear\n                        onChange={handleSecretChange}\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col span={2}>\n                    <Form.Item label=\"-\">\n                      <Button\n                        id=\"btnDeleteSecret\"\n                        onClick={() => removeSecret(index)}\n                        style={{ left: 4, position: 'relative' }}\n                      >\n                        <Icon\n                          type=\"Delete\"\n                          size={22}\n                          // @ts-ignore\n                          style={{ left: -6, position: 'relative' }}\n                        />\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                </Row>\n              ))}\n              {secrets.length >= 5 ? (\n                <p>You may only have 5 secrets</p>\n              ) : (\n                <Button onClick={addSecret}>\n                  <Icon\n                    type=\"Add\"\n                    size={22}\n                    // @ts-ignore\n                    style={{ left: -12, position: 'relative' }}\n                  />\n                  Add a secret\n                </Button>\n              )}\n            </Form.Item>\n            <FunctionMetadata metadata={metadata} setMetadata={setMetadata} />\n          </Col>\n        </Row>\n      </StyledForm>\n    </Modal>\n  );\n}\n\nexport const stuffForUnitTests = {\n  checkFunctionName,\n  checkFile,\n  checkDescription,\n  checkExternalId,\n  checkOwner,\n  checkSecretKey,\n  checkSecretValue,\n  checkSecrets,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}