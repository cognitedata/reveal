{"ast":null,"code":"import { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useAssetsMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToAssetsAdvancedFilters } from '../transformers';\nexport const useAssetsMetadataValuesOptionsQuery = ({\n  searchQuery,\n  filter\n}) => {\n  var _s = $RefreshSig$();\n  return _s((metadataKey, query, options) => {\n    _s();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      data = [],\n      isLoading\n    } = useAssetsMetadataValuesAggregateQuery({\n      metadataKey,\n      query,\n      options\n    });\n    const omittedFilter = omit(filter, 'metadata');\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      data: dynamicData = []\n    } = useAssetsMetadataValuesAggregateQuery({\n      metadataKey,\n      query,\n      advancedFilter: mapFiltersToAssetsAdvancedFilters(omittedFilter, searchQuery),\n      filter: getAssetSubtreeIdFilter(omittedFilter),\n      options\n    });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n    return {\n      options: transformedOptions,\n      isLoading\n    };\n  }, \"dSG+xEU8Ir1B6+j2M9rb/gWnHlw=\", false, function () {\n    return [useAssetsMetadataValuesAggregateQuery, useAssetsMetadataValuesAggregateQuery];\n  });\n};","map":{"version":3,"names":["useMemo","omit","getAssetSubtreeIdFilter","mergeDynamicFilterOptions","useAssetsMetadataValuesAggregateQuery","mapFiltersToAssetsAdvancedFilters","useAssetsMetadataValuesOptionsQuery","searchQuery","filter","metadataKey","query","options","data","isLoading","omittedFilter","dynamicData","advancedFilter","transformedOptions"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/assets/internal/queries/useAssetsMetadataValuesOptionsQuery.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { UseQueryOptions } from '@tanstack/react-query';\nimport omit from 'lodash/omit';\n\nimport { InternalAssetFilters } from '@data-exploration-lib/core';\n\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useAssetsMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToAssetsAdvancedFilters } from '../transformers';\n\ninterface Props {\n  searchQuery?: string;\n  filter?: InternalAssetFilters;\n}\n\nexport const useAssetsMetadataValuesOptionsQuery =\n  ({ searchQuery, filter }: Props) =>\n  (\n    metadataKey?: string | null,\n    query?: string,\n    options?: UseQueryOptions<any>\n  ) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data = [], isLoading } = useAssetsMetadataValuesAggregateQuery({\n      metadataKey,\n      query,\n      options,\n    });\n\n    const omittedFilter = omit(filter, 'metadata');\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data: dynamicData = [] } = useAssetsMetadataValuesAggregateQuery({\n      metadataKey,\n      query,\n      advancedFilter: mapFiltersToAssetsAdvancedFilters(\n        omittedFilter,\n        searchQuery\n      ),\n      filter: getAssetSubtreeIdFilter(omittedFilter),\n      options,\n    });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n\n    return { options: transformedOptions, isLoading };\n  };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,OAAOC,IAAI,MAAM,aAAa;AAI9B,SAASC,uBAAuB,QAAQ,gBAAgB;AACxD,SAASC,yBAAyB,QAAQ,0CAA0C;AACpF,SAASC,qCAAqC,QAAQ,eAAe;AACrE,SAASC,iCAAiC,QAAQ,iBAAiB;AAOnE,OAAO,MAAMC,mCAAmC,GAC9C,CAAC;EAAEC,WAAW;EAAEC;AAAc,CAAC;EAAA;EAAA,UAC/B,CACEC,WAA2B,EAC3BC,KAAc,EACdC,OAA8B,KAC3B;IAAA;IACH;IACA,MAAM;MAAEC,IAAI,GAAG,EAAE;MAAEC;IAAU,CAAC,GAAGT,qCAAqC,CAAC;MACrEK,WAAW;MACXC,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,MAAMG,aAAa,GAAGb,IAAI,CAACO,MAAM,EAAE,UAAU,CAAC;;IAE9C;IACA,MAAM;MAAEI,IAAI,EAAEG,WAAW,GAAG;IAAG,CAAC,GAAGX,qCAAqC,CAAC;MACvEK,WAAW;MACXC,KAAK;MACLM,cAAc,EAAEX,iCAAiC,CAC/CS,aAAa,EACbP,WAAW,CACZ;MACDC,MAAM,EAAEN,uBAAuB,CAACY,aAAa,CAAC;MAC9CH;IACF,CAAC,CAAC;;IAEF;IACA,MAAMM,kBAAkB,GAAGjB,OAAO,CAAC,MAAM;MACvC,OAAOG,yBAAyB,CAACS,IAAI,EAAEG,WAAW,CAAC;IACrD,CAAC,EAAE,CAACH,IAAI,EAAEG,WAAW,CAAC,CAAC;IAEvB,OAAO;MAAEJ,OAAO,EAAEM,kBAAkB;MAAEJ;IAAU,CAAC;EACnD,CAAC;IAAA,QA1BkCT,qCAAqC,EASnCA,qCAAqC;EAAA;AAAA,CAiBzE"},"metadata":{},"sourceType":"module"}