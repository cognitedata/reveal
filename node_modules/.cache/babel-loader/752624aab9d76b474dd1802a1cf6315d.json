{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useMemo } from 'react';\nimport { getFixedRangeConfig } from '../utils/getFixedRangeConfig';\nimport { getPlotAreaCursor } from '../utils/getPlotAreaCursor';\nimport { getSelectDirection } from '../utils/getSelectDirection';\nimport { useAxisDirection } from './useAxisDirection';\nexport const useLayoutFixedRangeConfig = (config, isCursorOnPlot) => {\n  _s();\n  const {\n    scrollZoom,\n    selectionZoom,\n    pan\n  } = config;\n  const scrollZoomDirection = useAxisDirection(scrollZoom);\n  const selectionZoomDirection = useAxisDirection(selectionZoom);\n  const panDirection = useAxisDirection(pan);\n  const getAxisFixedRange = useCallback(axis => {\n    if (scrollZoomDirection && isCursorOnPlot) {\n      return getFixedRangeConfig(scrollZoomDirection, axis);\n    }\n    if (panDirection) {\n      return getFixedRangeConfig(panDirection, axis);\n    }\n    return false;\n  }, [isCursorOnPlot, panDirection, scrollZoomDirection]);\n  const fixedRange = useMemo(() => {\n    return {\n      x: getAxisFixedRange('x'),\n      y: getAxisFixedRange('y')\n    };\n  }, [getAxisFixedRange]);\n  const fixedRangeLayoutConfig = useMemo(() => {\n    return {\n      dragmode: selectionZoomDirection ? 'select' : false,\n      selectdirection: getSelectDirection(selectionZoomDirection)\n    };\n  }, [selectionZoomDirection]);\n  const cursor = useMemo(() => {\n    return getPlotAreaCursor(selectionZoomDirection);\n  }, [selectionZoomDirection]);\n  return {\n    fixedRange,\n    fixedRangeLayoutConfig,\n    cursor\n  };\n};\n_s(useLayoutFixedRangeConfig, \"JvGT4Z/3E+kCAxLNU03/DplvsBo=\", false, function () {\n  return [useAxisDirection, useAxisDirection, useAxisDirection];\n});","map":{"version":3,"names":["useCallback","useMemo","getFixedRangeConfig","getPlotAreaCursor","getSelectDirection","useAxisDirection","useLayoutFixedRangeConfig","config","isCursorOnPlot","scrollZoom","selectionZoom","pan","scrollZoomDirection","selectionZoomDirection","panDirection","getAxisFixedRange","axis","fixedRange","x","y","fixedRangeLayoutConfig","dragmode","selectdirection","cursor"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/hooks/useLayoutFixedRangeConfig.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport { Layout as PlotlyLayout } from 'plotly.js';\n\nimport { AxisIdentifier, Config } from '../types';\nimport { getFixedRangeConfig } from '../utils/getFixedRangeConfig';\nimport { getPlotAreaCursor } from '../utils/getPlotAreaCursor';\nimport { getSelectDirection } from '../utils/getSelectDirection';\n\nimport { useAxisDirection } from './useAxisDirection';\n\nexport const useLayoutFixedRangeConfig = (\n  config: Config,\n  isCursorOnPlot: boolean\n) => {\n  const { scrollZoom, selectionZoom, pan } = config;\n\n  const scrollZoomDirection = useAxisDirection(scrollZoom);\n  const selectionZoomDirection = useAxisDirection(selectionZoom);\n  const panDirection = useAxisDirection(pan);\n\n  const getAxisFixedRange = useCallback(\n    (axis: AxisIdentifier) => {\n      if (scrollZoomDirection && isCursorOnPlot) {\n        return getFixedRangeConfig(scrollZoomDirection, axis);\n      }\n      if (panDirection) {\n        return getFixedRangeConfig(panDirection, axis);\n      }\n      return false;\n    },\n    [isCursorOnPlot, panDirection, scrollZoomDirection]\n  );\n\n  const fixedRange = useMemo(() => {\n    return {\n      x: getAxisFixedRange('x'),\n      y: getAxisFixedRange('y'),\n    };\n  }, [getAxisFixedRange]);\n\n  const fixedRangeLayoutConfig: Partial<PlotlyLayout> = useMemo(() => {\n    return {\n      dragmode: selectionZoomDirection ? 'select' : false,\n      selectdirection: getSelectDirection(selectionZoomDirection),\n    };\n  }, [selectionZoomDirection]);\n\n  const cursor = useMemo(() => {\n    return getPlotAreaCursor(selectionZoomDirection);\n  }, [selectionZoomDirection]);\n\n  return {\n    fixedRange,\n    fixedRangeLayoutConfig,\n    cursor,\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAK5C,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SAASC,kBAAkB,QAAQ,6BAA6B;AAEhE,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,MAAMC,yBAAyB,GAAG,CACvCC,MAAc,EACdC,cAAuB,KACpB;EAAA;EACH,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAI,CAAC,GAAGJ,MAAM;EAEjD,MAAMK,mBAAmB,GAAGP,gBAAgB,CAACI,UAAU,CAAC;EACxD,MAAMI,sBAAsB,GAAGR,gBAAgB,CAACK,aAAa,CAAC;EAC9D,MAAMI,YAAY,GAAGT,gBAAgB,CAACM,GAAG,CAAC;EAE1C,MAAMI,iBAAiB,GAAGf,WAAW,CAClCgB,IAAoB,IAAK;IACxB,IAAIJ,mBAAmB,IAAIJ,cAAc,EAAE;MACzC,OAAON,mBAAmB,CAACU,mBAAmB,EAAEI,IAAI,CAAC;IACvD;IACA,IAAIF,YAAY,EAAE;MAChB,OAAOZ,mBAAmB,CAACY,YAAY,EAAEE,IAAI,CAAC;IAChD;IACA,OAAO,KAAK;EACd,CAAC,EACD,CAACR,cAAc,EAAEM,YAAY,EAAEF,mBAAmB,CAAC,CACpD;EAED,MAAMK,UAAU,GAAGhB,OAAO,CAAC,MAAM;IAC/B,OAAO;MACLiB,CAAC,EAAEH,iBAAiB,CAAC,GAAG,CAAC;MACzBI,CAAC,EAAEJ,iBAAiB,CAAC,GAAG;IAC1B,CAAC;EACH,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB,MAAMK,sBAA6C,GAAGnB,OAAO,CAAC,MAAM;IAClE,OAAO;MACLoB,QAAQ,EAAER,sBAAsB,GAAG,QAAQ,GAAG,KAAK;MACnDS,eAAe,EAAElB,kBAAkB,CAACS,sBAAsB;IAC5D,CAAC;EACH,CAAC,EAAE,CAACA,sBAAsB,CAAC,CAAC;EAE5B,MAAMU,MAAM,GAAGtB,OAAO,CAAC,MAAM;IAC3B,OAAOE,iBAAiB,CAACU,sBAAsB,CAAC;EAClD,CAAC,EAAE,CAACA,sBAAsB,CAAC,CAAC;EAE5B,OAAO;IACLI,UAAU;IACVG,sBAAsB;IACtBG;EACF,CAAC;AACH,CAAC;AAAC,GA9CWjB,yBAAyB;EAAA,QAMRD,gBAAgB,EACbA,gBAAgB,EAC1BA,gBAAgB;AAAA"},"metadata":{},"sourceType":"module"}