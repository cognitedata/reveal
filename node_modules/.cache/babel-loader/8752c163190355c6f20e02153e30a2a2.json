{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useMemo } from 'react';\nimport { DEFAULT_SEARCH_RESULTS_PAGE_SIZE } from '../../../constants';\nimport { useInfinite360Images } from './useInfinite360Images';\nimport { useInfinite3DModelsQuery } from './useInfinite3DModelsQuery';\nexport const use3DResults = (fileTypeVisibility, query, filter, limit = DEFAULT_SEARCH_RESULTS_PAGE_SIZE) => {\n  _s();\n  const {\n    data: threeDModelData = {\n      pages: []\n    },\n    fetchNextPage: fetchMore3DModelData,\n    hasNextPage: canFetchMore3DModelData,\n    isFetchingNextPage: isFetchingMore3DModelData\n  } = useInfinite3DModelsQuery(limit, {\n    enabled: true\n  });\n  const {\n    images360Data,\n    hasNextPage: canFetchMoreImage360Data,\n    fetchNextPage: fetchMoreImage360Data,\n    isFetchingNextPage: isFetchingMoreImage360Data\n  } = useInfinite360Images();\n  const memoizedFilteredModels = useMemo(() => {\n    const models = threeDModelData.pages.reduce((accl, t) => accl.concat(t.items), []);\n    const filteredModels = [...(fileTypeVisibility.Images360 ? images360Data.map(img360Data => {\n      return {\n        type: 'img360',\n        name: img360Data.siteName,\n        siteId: img360Data.siteId\n      };\n    }) : []),\n    // ToDo: add Point Clouds\n    ...(fileTypeVisibility.CADModels ? models : [])].filter(model => model.name.toLowerCase().includes(query?.toLowerCase() || ''));\n    return filteredModels;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [threeDModelData, images360Data, query, fileTypeVisibility]);\n  const canFetchMore = useMemo(() => {\n    return canFetchMoreImage360Data || canFetchMore3DModelData;\n  }, [canFetchMoreImage360Data, canFetchMore3DModelData]);\n  const isFetching = useMemo(() => {\n    return isFetchingMore3DModelData || isFetchingMoreImage360Data;\n  }, [isFetchingMore3DModelData, isFetchingMoreImage360Data]);\n  const fetchMore = useCallback(() => {\n    if (!isFetchingMoreImage360Data && canFetchMoreImage360Data) {\n      fetchMoreImage360Data();\n    }\n    if (!isFetchingMore3DModelData && canFetchMore3DModelData) {\n      fetchMore3DModelData();\n    }\n  }, [fetchMoreImage360Data, fetchMore3DModelData, isFetchingMore3DModelData, isFetchingMoreImage360Data, canFetchMoreImage360Data, canFetchMore3DModelData]);\n  return {\n    canFetchMore,\n    fetchMore,\n    items: memoizedFilteredModels,\n    isFetching\n  };\n};\n_s(use3DResults, \"RBddWbfYKRluiSk/RMWEBY4p8Lg=\", false, function () {\n  return [useInfinite3DModelsQuery, useInfinite360Images];\n});","map":{"version":3,"names":["useCallback","useMemo","DEFAULT_SEARCH_RESULTS_PAGE_SIZE","useInfinite360Images","useInfinite3DModelsQuery","use3DResults","fileTypeVisibility","query","filter","limit","data","threeDModelData","pages","fetchNextPage","fetchMore3DModelData","hasNextPage","canFetchMore3DModelData","isFetchingNextPage","isFetchingMore3DModelData","enabled","images360Data","canFetchMoreImage360Data","fetchMoreImage360Data","isFetchingMoreImage360Data","memoizedFilteredModels","models","reduce","accl","t","concat","items","filteredModels","Images360","map","img360Data","type","name","siteName","siteId","CADModels","model","toLowerCase","includes","canFetchMore","isFetching","fetchMore"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/threeD/internal/queries/use3DResults.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\n\nimport { Model3D } from '@cognite/sdk';\n\nimport {\n  FileTypeVisibility,\n  InternalThreeDFilters,\n} from '@data-exploration-lib/core';\n\nimport { DEFAULT_SEARCH_RESULTS_PAGE_SIZE } from '../../../constants';\nimport { Model3DWithType, ThreeDModelsResponse } from '../types';\n\nimport { useInfinite360Images } from './useInfinite360Images';\nimport { useInfinite3DModelsQuery } from './useInfinite3DModelsQuery';\n\nexport const use3DResults = (\n  fileTypeVisibility: FileTypeVisibility,\n  query?: string | undefined,\n  filter?: InternalThreeDFilters,\n  limit: number = DEFAULT_SEARCH_RESULTS_PAGE_SIZE\n) => {\n  const {\n    data: threeDModelData = { pages: [] as ThreeDModelsResponse[] },\n    fetchNextPage: fetchMore3DModelData,\n    hasNextPage: canFetchMore3DModelData,\n    isFetchingNextPage: isFetchingMore3DModelData,\n  } = useInfinite3DModelsQuery(limit, { enabled: true });\n\n  const {\n    images360Data,\n    hasNextPage: canFetchMoreImage360Data,\n    fetchNextPage: fetchMoreImage360Data,\n    isFetchingNextPage: isFetchingMoreImage360Data,\n  } = useInfinite360Images();\n\n  const memoizedFilteredModels = useMemo(() => {\n    const models = threeDModelData.pages.reduce(\n      (accl, t) => accl.concat(t.items),\n      [] as Model3D[]\n    );\n\n    const filteredModels = [\n      ...(fileTypeVisibility.Images360\n        ? images360Data.map<Model3DWithType>((img360Data) => {\n            return {\n              type: 'img360',\n              name: img360Data.siteName,\n              siteId: img360Data.siteId,\n            };\n          })\n        : []),\n      // ToDo: add Point Clouds\n      ...(fileTypeVisibility.CADModels ? models : []),\n    ].filter((model) =>\n      model.name.toLowerCase().includes(query?.toLowerCase() || '')\n    );\n    return filteredModels;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [threeDModelData, images360Data, query, fileTypeVisibility]);\n\n  const canFetchMore = useMemo(() => {\n    return canFetchMoreImage360Data || canFetchMore3DModelData;\n  }, [canFetchMoreImage360Data, canFetchMore3DModelData]);\n\n  const isFetching = useMemo(() => {\n    return isFetchingMore3DModelData || isFetchingMoreImage360Data;\n  }, [isFetchingMore3DModelData, isFetchingMoreImage360Data]);\n\n  const fetchMore = useCallback(() => {\n    if (!isFetchingMoreImage360Data && canFetchMoreImage360Data) {\n      fetchMoreImage360Data();\n    }\n    if (!isFetchingMore3DModelData && canFetchMore3DModelData) {\n      fetchMore3DModelData();\n    }\n  }, [\n    fetchMoreImage360Data,\n    fetchMore3DModelData,\n    isFetchingMore3DModelData,\n    isFetchingMoreImage360Data,\n    canFetchMoreImage360Data,\n    canFetchMore3DModelData,\n  ]);\n\n  return {\n    canFetchMore,\n    fetchMore,\n    items: memoizedFilteredModels,\n    isFetching,\n  };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAS5C,SAASC,gCAAgC,QAAQ,oBAAoB;AAGrE,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,wBAAwB,QAAQ,4BAA4B;AAErE,OAAO,MAAMC,YAAY,GAAG,CAC1BC,kBAAsC,EACtCC,KAA0B,EAC1BC,MAA8B,EAC9BC,KAAa,GAAGP,gCAAgC,KAC7C;EAAA;EACH,MAAM;IACJQ,IAAI,EAAEC,eAAe,GAAG;MAAEC,KAAK,EAAE;IAA6B,CAAC;IAC/DC,aAAa,EAAEC,oBAAoB;IACnCC,WAAW,EAAEC,uBAAuB;IACpCC,kBAAkB,EAAEC;EACtB,CAAC,GAAGd,wBAAwB,CAACK,KAAK,EAAE;IAAEU,OAAO,EAAE;EAAK,CAAC,CAAC;EAEtD,MAAM;IACJC,aAAa;IACbL,WAAW,EAAEM,wBAAwB;IACrCR,aAAa,EAAES,qBAAqB;IACpCL,kBAAkB,EAAEM;EACtB,CAAC,GAAGpB,oBAAoB,EAAE;EAE1B,MAAMqB,sBAAsB,GAAGvB,OAAO,CAAC,MAAM;IAC3C,MAAMwB,MAAM,GAAGd,eAAe,CAACC,KAAK,CAACc,MAAM,CACzC,CAACC,IAAI,EAAEC,CAAC,KAAKD,IAAI,CAACE,MAAM,CAACD,CAAC,CAACE,KAAK,CAAC,EACjC,EAAE,CACH;IAED,MAAMC,cAAc,GAAG,CACrB,IAAIzB,kBAAkB,CAAC0B,SAAS,GAC5BZ,aAAa,CAACa,GAAG,CAAmBC,UAAU,IAAK;MACjD,OAAO;QACLC,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAEF,UAAU,CAACG,QAAQ;QACzBC,MAAM,EAAEJ,UAAU,CAACI;MACrB,CAAC;IACH,CAAC,CAAC,GACF,EAAE,CAAC;IACP;IACA,IAAIhC,kBAAkB,CAACiC,SAAS,GAAGd,MAAM,GAAG,EAAE,CAAC,CAChD,CAACjB,MAAM,CAAEgC,KAAK,IACbA,KAAK,CAACJ,IAAI,CAACK,WAAW,EAAE,CAACC,QAAQ,CAACnC,KAAK,EAAEkC,WAAW,EAAE,IAAI,EAAE,CAAC,CAC9D;IACD,OAAOV,cAAc;IACrB;EACF,CAAC,EAAE,CAACpB,eAAe,EAAES,aAAa,EAAEb,KAAK,EAAED,kBAAkB,CAAC,CAAC;EAE/D,MAAMqC,YAAY,GAAG1C,OAAO,CAAC,MAAM;IACjC,OAAOoB,wBAAwB,IAAIL,uBAAuB;EAC5D,CAAC,EAAE,CAACK,wBAAwB,EAAEL,uBAAuB,CAAC,CAAC;EAEvD,MAAM4B,UAAU,GAAG3C,OAAO,CAAC,MAAM;IAC/B,OAAOiB,yBAAyB,IAAIK,0BAA0B;EAChE,CAAC,EAAE,CAACL,yBAAyB,EAAEK,0BAA0B,CAAC,CAAC;EAE3D,MAAMsB,SAAS,GAAG7C,WAAW,CAAC,MAAM;IAClC,IAAI,CAACuB,0BAA0B,IAAIF,wBAAwB,EAAE;MAC3DC,qBAAqB,EAAE;IACzB;IACA,IAAI,CAACJ,yBAAyB,IAAIF,uBAAuB,EAAE;MACzDF,oBAAoB,EAAE;IACxB;EACF,CAAC,EAAE,CACDQ,qBAAqB,EACrBR,oBAAoB,EACpBI,yBAAyB,EACzBK,0BAA0B,EAC1BF,wBAAwB,EACxBL,uBAAuB,CACxB,CAAC;EAEF,OAAO;IACL2B,YAAY;IACZE,SAAS;IACTf,KAAK,EAAEN,sBAAsB;IAC7BoB;EACF,CAAC;AACH,CAAC;AAAC,GA3EWvC,YAAY;EAAA,QAWnBD,wBAAwB,EAOxBD,oBAAoB;AAAA"},"metadata":{},"sourceType":"module"}