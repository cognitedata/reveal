{"ast":null,"code":"import { queryKeys } from '../../../queryKeys';\nexport const fetchThreeDRevisionQuery = (sdk, queryClient, modelId, revisionId, options) => {\n  return queryClient.fetchQuery(queryKeys.retrieveThreeDRevision(modelId, revisionId), () => sdk.revisions3D.retrieve(modelId, revisionId), options);\n};","map":{"version":3,"names":["queryKeys","fetchThreeDRevisionQuery","sdk","queryClient","modelId","revisionId","options","fetchQuery","retrieveThreeDRevision","revisions3D","retrieve"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/threeD/service/network/fetchThreeDRevisionQuery.ts"],"sourcesContent":["import { FetchQueryOptions, QueryClient } from '@tanstack/react-query';\n\nimport { CogniteClient, CogniteError, Revision3D } from '@cognite/sdk/dist/src';\n\nimport { queryKeys } from '../../../queryKeys';\n\nexport const fetchThreeDRevisionQuery = (\n  sdk: CogniteClient,\n  queryClient: QueryClient,\n  modelId: number,\n  revisionId: number,\n  options?: FetchQueryOptions<Revision3D, CogniteError, Revision3D>\n) => {\n  return queryClient.fetchQuery<Revision3D, CogniteError, Revision3D>(\n    queryKeys.retrieveThreeDRevision(modelId, revisionId),\n    () => sdk.revisions3D.retrieve(modelId, revisionId),\n    options\n  );\n};\n"],"mappings":"AAIA,SAASA,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,wBAAwB,GAAG,CACtCC,GAAkB,EAClBC,WAAwB,EACxBC,OAAe,EACfC,UAAkB,EAClBC,OAAiE,KAC9D;EACH,OAAOH,WAAW,CAACI,UAAU,CAC3BP,SAAS,CAACQ,sBAAsB,CAACJ,OAAO,EAAEC,UAAU,CAAC,EACrD,MAAMH,GAAG,CAACO,WAAW,CAACC,QAAQ,CAACN,OAAO,EAAEC,UAAU,CAAC,EACnDC,OAAO,CACR;AACH,CAAC"},"metadata":{},"sourceType":"module"}