{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../../queryKeys';\nimport { getDocumentsAggregate } from '../../network';\nexport const useDocumentsLabelAggregateQuery = ({\n  filter,\n  query\n}) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.documentsLabelValues(filter, query), () => {\n    return getDocumentsAggregate(sdk, {\n      aggregate: 'uniqueValues',\n      properties: [{\n        property: ['labels']\n      }],\n      filter,\n      aggregateFilter: query ? {\n        prefix: {\n          value: query\n        }\n      } : undefined\n    }).then(({\n      items\n    }) => {\n      return items.map(({\n        count,\n        values\n      }) => {\n        return {\n          count,\n          value: values[0].externalId,\n          values\n        };\n      });\n    });\n  }, {\n    keepPreviousData: true\n  });\n};\n_s(useDocumentsLabelAggregateQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","useSDK","queryKeys","getDocumentsAggregate","useDocumentsLabelAggregateQuery","filter","query","sdk","documentsLabelValues","aggregate","properties","property","aggregateFilter","prefix","value","undefined","then","items","map","count","values","externalId","keepPreviousData"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/documents/service/queries/aggregates/useDocumentsLabelAggregateQuery.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\n\nimport { DocumentsAggregateUniqueValuesItem, Label } from '@cognite/sdk';\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { AdvancedFilter } from '../../../../builders';\nimport { queryKeys } from '../../../../queryKeys';\nimport { DocumentProperties } from '../../../internal';\nimport { getDocumentsAggregate } from '../../network';\n\ninterface Props {\n  filter?: AdvancedFilter<DocumentProperties>;\n  query?: string;\n}\n\nexport const useDocumentsLabelAggregateQuery = ({ filter, query }: Props) => {\n  const sdk = useSDK();\n\n  return useQuery(\n    queryKeys.documentsLabelValues(filter, query),\n    () => {\n      return getDocumentsAggregate<DocumentsAggregateUniqueValuesItem>(sdk, {\n        aggregate: 'uniqueValues',\n        properties: [\n          {\n            property: ['labels'],\n          },\n        ],\n        filter,\n        aggregateFilter: query ? { prefix: { value: query } } : undefined,\n      }).then(({ items }) => {\n        return items.map(({ count, values }) => {\n          return {\n            count,\n            value: (values[0] as Label).externalId,\n            values,\n          };\n        });\n      });\n    },\n    {\n      keepPreviousData: true,\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAGhD,SAASC,MAAM,QAAQ,uBAAuB;AAG9C,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,qBAAqB,QAAQ,eAAe;AAOrD,OAAO,MAAMC,+BAA+B,GAAG,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAA;EAC3E,MAAMC,GAAG,GAAGN,MAAM,EAAE;EAEpB,OAAOD,QAAQ,CACbE,SAAS,CAACM,oBAAoB,CAACH,MAAM,EAAEC,KAAK,CAAC,EAC7C,MAAM;IACJ,OAAOH,qBAAqB,CAAqCI,GAAG,EAAE;MACpEE,SAAS,EAAE,cAAc;MACzBC,UAAU,EAAE,CACV;QACEC,QAAQ,EAAE,CAAC,QAAQ;MACrB,CAAC,CACF;MACDN,MAAM;MACNO,eAAe,EAAEN,KAAK,GAAG;QAAEO,MAAM,EAAE;UAAEC,KAAK,EAAER;QAAM;MAAE,CAAC,GAAGS;IAC1D,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAM,CAAC,KAAK;MACrB,OAAOA,KAAK,CAACC,GAAG,CAAC,CAAC;QAAEC,KAAK;QAAEC;MAAO,CAAC,KAAK;QACtC,OAAO;UACLD,KAAK;UACLL,KAAK,EAAGM,MAAM,CAAC,CAAC,CAAC,CAAWC,UAAU;UACtCD;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EACD;IACEE,gBAAgB,EAAE;EACpB,CAAC,CACF;AACH,CAAC;AAAC,GA7BWlB,+BAA+B;EAAA,QAC9BH,MAAM,EAEXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}