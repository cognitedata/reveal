{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimeseriesChartLarge/TimeseriesChartLarge.tsx\";\nimport * as React from 'react';\nimport { LineChart } from '../../../LineChart';\nimport { CONFIG, LAYOUT } from './constants';\nimport { formatHoverLineInfo } from './helpers/formatHoverLineInfo';\nimport { formatTooltipContent } from './helpers/formatTooltipContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimeseriesChartLarge = ({\n  metadata,\n  ...props\n}) => {\n  const {\n    dataFetchMode,\n    unit\n  } = metadata;\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    ...props,\n    variant: \"large\",\n    yAxis: {\n      name: unit\n    },\n    layout: {\n      ...LAYOUT,\n      showMarkers: dataFetchMode === 'raw'\n    },\n    config: CONFIG,\n    formatTooltipContent: tooltipProps => formatTooltipContent(tooltipProps, unit),\n    formatHoverLineInfo: formatHoverLineInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TimeseriesChartLarge;\nvar _c;\n$RefreshReg$(_c, \"TimeseriesChartLarge\");","map":{"version":3,"names":["React","LineChart","CONFIG","LAYOUT","formatHoverLineInfo","formatTooltipContent","TimeseriesChartLarge","metadata","props","dataFetchMode","unit","name","showMarkers","tooltipProps"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimeseriesChartLarge/TimeseriesChartLarge.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { LineChart, LineChartProps } from '../../../LineChart';\nimport { TimeseriesChartMetadata } from '../../domain/internal/types';\n\nimport { CONFIG, LAYOUT } from './constants';\nimport { formatHoverLineInfo } from './helpers/formatHoverLineInfo';\nimport { formatTooltipContent } from './helpers/formatTooltipContent';\n\nexport interface TimeseriesChartLargeProps extends LineChartProps {\n  metadata: TimeseriesChartMetadata;\n}\n\nexport const TimeseriesChartLarge: React.FC<TimeseriesChartLargeProps> = ({\n  metadata,\n  ...props\n}) => {\n  const { dataFetchMode, unit } = metadata;\n\n  return (\n    <LineChart\n      {...props}\n      variant=\"large\"\n      yAxis={{\n        name: unit,\n      }}\n      layout={{\n        ...LAYOUT,\n        showMarkers: dataFetchMode === 'raw',\n      }}\n      config={CONFIG}\n      formatTooltipContent={(tooltipProps) =>\n        formatTooltipContent(tooltipProps, unit)\n      }\n      formatHoverLineInfo={formatHoverLineInfo}\n    />\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,SAAS,QAAwB,oBAAoB;AAG9D,SAASC,MAAM,EAAEC,MAAM,QAAQ,aAAa;AAC5C,SAASC,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,oBAAoB,QAAQ,gCAAgC;AAAC;AAMtE,OAAO,MAAMC,oBAAyD,GAAG,CAAC;EACxEC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EACJ,MAAM;IAAEC,aAAa;IAAEC;EAAK,CAAC,GAAGH,QAAQ;EAExC,oBACE,QAAC,SAAS;IAAA,GACJC,KAAK;IACT,OAAO,EAAC,OAAO;IACf,KAAK,EAAE;MACLG,IAAI,EAAED;IACR,CAAE;IACF,MAAM,EAAE;MACN,GAAGP,MAAM;MACTS,WAAW,EAAEH,aAAa,KAAK;IACjC,CAAE;IACF,MAAM,EAAEP,MAAO;IACf,oBAAoB,EAAGW,YAAY,IACjCR,oBAAoB,CAACQ,YAAY,EAAEH,IAAI,CACxC;IACD,mBAAmB,EAAEN;EAAoB;IAAA;IAAA;IAAA;EAAA,QACzC;AAEN,CAAC;AAAC,KAxBWE,oBAAyD;AAAA;AAAA"},"metadata":{},"sourceType":"module"}