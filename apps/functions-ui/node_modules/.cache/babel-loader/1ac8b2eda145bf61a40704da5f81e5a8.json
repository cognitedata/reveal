{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\n/**\n * This custom hook can be used to help handle common open, close, or toggle scenarios. It can be used to control feedback component such as Modal, AlertDialog, Drawer, etc.\n * @param props {isOpen:Boolean}\n * @returns\n */\nexport const useDialog = props => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false || !!props?.isOpen);\n  const open = () => {\n    setIsOpen(true);\n  };\n  const close = () => {\n    setIsOpen(false);\n  };\n  const toggle = () => {\n    setIsOpen(prev => !prev);\n  };\n  return {\n    isOpen,\n    open,\n    close,\n    toggle\n  };\n};\n_s(useDialog, \"oNH8XFtLfJUeJ2JafABY1H60TpU=\");","map":{"version":3,"names":["useState","useDialog","props","isOpen","setIsOpen","open","close","toggle","prev"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/core/src/hooks/useDialog.ts"],"sourcesContent":["import { useState } from 'react';\n\ninterface UseDialogProps {\n  isOpen?: boolean;\n}\n\n/**\n * This custom hook can be used to help handle common open, close, or toggle scenarios. It can be used to control feedback component such as Modal, AlertDialog, Drawer, etc.\n * @param props {isOpen:Boolean}\n * @returns\n */\nexport const useDialog = (props?: UseDialogProps) => {\n  const [isOpen, setIsOpen] = useState(false || !!props?.isOpen);\n\n  const open = () => {\n    setIsOpen(true);\n  };\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  const toggle = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  return { isOpen, open, close, toggle };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAMhC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAsB,IAAK;EAAA;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,KAAK,IAAI,CAAC,CAACE,KAAK,EAAEC,MAAM,CAAC;EAE9D,MAAME,IAAI,GAAG,MAAM;IACjBD,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,MAAME,KAAK,GAAG,MAAM;IAClBF,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMG,MAAM,GAAG,MAAM;IACnBH,SAAS,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC;EAC5B,CAAC;EAED,OAAO;IAAEL,MAAM;IAAEE,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC;AACxC,CAAC;AAAC,GAfWN,SAAS"},"metadata":{},"sourceType":"module"}