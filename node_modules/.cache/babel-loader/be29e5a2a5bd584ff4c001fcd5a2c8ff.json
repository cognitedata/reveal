{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimeseriesChartSmall/TimeseriesChartSmall.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { LineChart } from '../../../LineChart';\nimport { CONFIG, LAYOUT } from './constants';\nimport { formatTooltipContent } from './helpers/formatTooltipContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimeseriesChartSmall = ({\n  metadata,\n  ...props\n}) => {\n  _s();\n  const layout = useMemo(() => {\n    const numberOfPoints = props.data.x.length;\n\n    /**\n     * If there is only 1 datapoint, line cannot be defined.\n     * Hence, we force to show markers.\n     * Then we can see only 1 marker for the datapoint.\n     */\n    if (numberOfPoints === 1) {\n      return {\n        ...LAYOUT,\n        showMarkers: true\n      };\n    }\n    return LAYOUT;\n  }, [props.data]);\n  const {\n    unit\n  } = metadata;\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    ...props,\n    variant: \"small\",\n    layout: layout,\n    config: CONFIG,\n    formatTooltipContent: tooltipProps => formatTooltipContent(tooltipProps, unit)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeseriesChartSmall, \"AGyM8iZ9SJZ/p3xAjQf3UzrCcyM=\");\n_c = TimeseriesChartSmall;\nvar _c;\n$RefreshReg$(_c, \"TimeseriesChartSmall\");","map":{"version":3,"names":["React","useMemo","LineChart","CONFIG","LAYOUT","formatTooltipContent","TimeseriesChartSmall","metadata","props","layout","numberOfPoints","data","x","length","showMarkers","unit","tooltipProps"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimeseriesChartSmall/TimeseriesChartSmall.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\n\nimport { Data, LineChart, LineChartProps, Layout } from '../../../LineChart';\nimport { TimeseriesChartMetadata } from '../../domain/internal/types';\n\nimport { CONFIG, LAYOUT } from './constants';\nimport { formatTooltipContent } from './helpers/formatTooltipContent';\n\nexport interface TimeseriesChartSmallProps extends LineChartProps {\n  metadata: TimeseriesChartMetadata;\n}\n\nexport const TimeseriesChartSmall: React.FC<TimeseriesChartSmallProps> = ({\n  metadata,\n  ...props\n}) => {\n  const layout: Partial<Layout> = useMemo(() => {\n    const numberOfPoints = (props.data as Data).x.length;\n\n    /**\n     * If there is only 1 datapoint, line cannot be defined.\n     * Hence, we force to show markers.\n     * Then we can see only 1 marker for the datapoint.\n     */\n    if (numberOfPoints === 1) {\n      return {\n        ...LAYOUT,\n        showMarkers: true,\n      };\n    }\n\n    return LAYOUT;\n  }, [props.data]);\n\n  const { unit } = metadata;\n\n  return (\n    <LineChart\n      {...props}\n      variant=\"small\"\n      layout={layout}\n      config={CONFIG}\n      formatTooltipContent={(tooltipProps) =>\n        formatTooltipContent(tooltipProps, unit)\n      }\n    />\n  );\n};\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAAeC,SAAS,QAAgC,oBAAoB;AAG5E,SAASC,MAAM,EAAEC,MAAM,QAAQ,aAAa;AAC5C,SAASC,oBAAoB,QAAQ,gCAAgC;AAAC;AAMtE,OAAO,MAAMC,oBAAyD,GAAG,CAAC;EACxEC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EAAA;EACJ,MAAMC,MAAuB,GAAGR,OAAO,CAAC,MAAM;IAC5C,MAAMS,cAAc,GAAIF,KAAK,CAACG,IAAI,CAAUC,CAAC,CAACC,MAAM;;IAEpD;AACJ;AACA;AACA;AACA;IACI,IAAIH,cAAc,KAAK,CAAC,EAAE;MACxB,OAAO;QACL,GAAGN,MAAM;QACTU,WAAW,EAAE;MACf,CAAC;IACH;IAEA,OAAOV,MAAM;EACf,CAAC,EAAE,CAACI,KAAK,CAACG,IAAI,CAAC,CAAC;EAEhB,MAAM;IAAEI;EAAK,CAAC,GAAGR,QAAQ;EAEzB,oBACE,QAAC,SAAS;IAAA,GACJC,KAAK;IACT,OAAO,EAAC,OAAO;IACf,MAAM,EAAEC,MAAO;IACf,MAAM,EAAEN,MAAO;IACf,oBAAoB,EAAGa,YAAY,IACjCX,oBAAoB,CAACW,YAAY,EAAED,IAAI;EACxC;IAAA;IAAA;IAAA;EAAA,QACD;AAEN,CAAC;AAAC,GAnCWT,oBAAyD;AAAA,KAAzDA,oBAAyD;AAAA;AAAA"},"metadata":{},"sourceType":"module"}