{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { getDocumentsMetadataKeysAggregate } from '../network';\nexport const useDocumentsMetadataKeysAggregateQuery = ({\n  query,\n  filter,\n  options\n} = {}) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.documentsMetadata(query, filter), () => {\n    return getDocumentsMetadataKeysAggregate(sdk, {\n      filter,\n      aggregateFilter: query ? {\n        prefix: {\n          value: query\n        }\n      } : undefined\n    });\n  }, {\n    keepPreviousData: true,\n    ...options\n  });\n};\n_s(useDocumentsMetadataKeysAggregateQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","useSDK","queryKeys","getDocumentsMetadataKeysAggregate","useDocumentsMetadataKeysAggregateQuery","query","filter","options","sdk","documentsMetadata","aggregateFilter","prefix","value","undefined","keepPreviousData"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/documents/service/queries/useDocumentsMetadataKeysAggregateQuery.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from '@tanstack/react-query';\n\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { AdvancedFilter } from '../../../builders';\nimport { queryKeys } from '../../../queryKeys';\nimport { DocumentProperties } from '../../internal';\nimport { getDocumentsMetadataKeysAggregate } from '../network';\nimport { DocumentsMetadataAggregateResponse } from '../types';\n\ninterface Props {\n  query?: string;\n  filter?: AdvancedFilter<DocumentProperties>;\n  options?: UseQueryOptions<\n    DocumentsMetadataAggregateResponse[],\n    unknown,\n    DocumentsMetadataAggregateResponse[],\n    any\n  >;\n}\n\nexport const useDocumentsMetadataKeysAggregateQuery = ({\n  query,\n  filter,\n  options,\n}: Props = {}) => {\n  const sdk = useSDK();\n\n  return useQuery(\n    queryKeys.documentsMetadata(query, filter),\n    () => {\n      return getDocumentsMetadataKeysAggregate(sdk, {\n        filter,\n        aggregateFilter: query ? { prefix: { value: query } } : undefined,\n      });\n    },\n    {\n      keepPreviousData: true,\n      ...options,\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAyB,uBAAuB;AAEjE,SAASC,MAAM,QAAQ,uBAAuB;AAG9C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,iCAAiC,QAAQ,YAAY;AAc9D,OAAO,MAAMC,sCAAsC,GAAG,CAAC;EACrDC,KAAK;EACLC,MAAM;EACNC;AACK,CAAC,GAAG,CAAC,CAAC,KAAK;EAAA;EAChB,MAAMC,GAAG,GAAGP,MAAM,EAAE;EAEpB,OAAOD,QAAQ,CACbE,SAAS,CAACO,iBAAiB,CAACJ,KAAK,EAAEC,MAAM,CAAC,EAC1C,MAAM;IACJ,OAAOH,iCAAiC,CAACK,GAAG,EAAE;MAC5CF,MAAM;MACNI,eAAe,EAAEL,KAAK,GAAG;QAAEM,MAAM,EAAE;UAAEC,KAAK,EAAEP;QAAM;MAAE,CAAC,GAAGQ;IAC1D,CAAC,CAAC;EACJ,CAAC,EACD;IACEC,gBAAgB,EAAE,IAAI;IACtB,GAAGP;EACL,CAAC,CACF;AACH,CAAC;AAAC,GApBWH,sCAAsC;EAAA,QAKrCH,MAAM,EAEXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}