{"ast":null,"code":"export let ResourceTypes;\n(function (ResourceTypes) {\n  ResourceTypes[\"Asset\"] = \"asset\";\n  ResourceTypes[\"TimeSeries\"] = \"timeSeries\";\n  ResourceTypes[\"Sequence\"] = \"sequence\";\n  ResourceTypes[\"File\"] = \"file\";\n  ResourceTypes[\"Event\"] = \"event\";\n  ResourceTypes[\"ThreeD\"] = \"threeD\";\n})(ResourceTypes || (ResourceTypes = {}));\n// Temporary mapping of the two almost identical types. Should be\n// removed as soon as possible, but that requires a full refactor\n// replacing ResourceType with SdkResourcetype\nexport function convertResourceType(type) {\n  if (type === 'threeD') return type;\n  switch (type) {\n    case 'asset':\n      {\n        return 'assets';\n      }\n    case 'timeSeries':\n      {\n        return 'timeseries';\n      }\n    case 'sequence':\n      {\n        return 'sequences';\n      }\n    case 'file':\n      {\n        return 'files';\n      }\n    case 'event':\n      {\n        return 'events';\n      }\n    default:\n      {\n        throw new Error(`Unknown ResourceType: ${type}`);\n      }\n  }\n}\nexport function getTitle(t, plural = true) {\n  switch (t) {\n    case 'asset':\n      {\n        return plural ? 'Assets' : 'Asset';\n      }\n    case 'timeSeries':\n      {\n        return 'Time series';\n      }\n    case 'sequence':\n      {\n        return plural ? 'Sequences' : 'Sequence';\n      }\n    case 'file':\n      {\n        return plural ? 'Files' : 'File';\n      }\n    case 'event':\n      {\n        return plural ? 'Events' : 'Event';\n      }\n    case 'threeD':\n      {\n        return plural ? '3D models' : '3D model';\n      }\n    default:\n      {\n        throw new Error(`Unknown ResourceType: ${t}`);\n      }\n  }\n}\nexport function getIcon(type) {\n  switch (type) {\n    case 'asset':\n      return 'Assets';\n    case 'event':\n      return 'Events';\n    case 'file':\n      return 'Document';\n    case 'sequence':\n      return 'Sequences';\n    case 'timeSeries':\n      return 'Timeseries';\n    default:\n      throw new Error('We forgot about a resource type :(');\n  }\n}\nexport const isModelRunning = s => {\n  switch (s) {\n    case 'New':\n    case 'Scheduled':\n    case 'Queued':\n    case 'Running':\n      return true;\n    case undefined:\n    default:\n      return false;\n  }\n};\nexport const LocalStorageFileContextKey = 'LocalStorageFileContextKey';","map":{"version":3,"names":["ResourceTypes","convertResourceType","type","Error","getTitle","t","plural","getIcon","isModelRunning","s","undefined","LocalStorageFileContextKey"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/core/src/types/resource.ts"],"sourcesContent":["import { RowSelectionState, Updater } from '@tanstack/react-table';\n\nimport { AllIconTypes } from '@cognite/cogs.js';\nimport { SdkResourceType } from '@cognite/sdk-react-query-hooks';\n\nexport enum ResourceTypes {\n  Asset = 'asset',\n  TimeSeries = 'timeSeries',\n  Sequence = 'sequence',\n  File = 'file',\n  Event = 'event',\n  ThreeD = 'threeD',\n}\n\nexport type ResourceType =\n  | 'asset'\n  | 'timeSeries'\n  | 'sequence'\n  | 'file'\n  | 'event'\n  | 'threeD';\n\nexport type ResourceSelectionMode = 'single' | 'multiple';\nexport type SelectableItemsProps = {\n  onSelect: (\n    updater?: Updater<RowSelectionState>,\n    currentData?: ResourceItem[],\n    resourceType?: ResourceType\n  ) => void;\n  selectionMode: ResourceSelectionMode;\n  isSelected: boolean;\n};\n\n// Temporary mapping of the two almost identical types. Should be\n// removed as soon as possible, but that requires a full refactor\n// replacing ResourceType with SdkResourcetype\nexport function convertResourceType(type?: ResourceType): SdkResourceType {\n  if (type === 'threeD') return type as SdkResourceType;\n\n  switch (type) {\n    case 'asset': {\n      return 'assets';\n    }\n    case 'timeSeries': {\n      return 'timeseries';\n    }\n    case 'sequence': {\n      return 'sequences';\n    }\n    case 'file': {\n      return 'files';\n    }\n    case 'event': {\n      return 'events';\n    }\n    default: {\n      throw new Error(`Unknown ResourceType: ${type}`);\n    }\n  }\n}\n\nexport function getTitle(t: ResourceType, plural = true): string {\n  switch (t) {\n    case 'asset': {\n      return plural ? 'Assets' : 'Asset';\n    }\n    case 'timeSeries': {\n      return 'Time series';\n    }\n    case 'sequence': {\n      return plural ? 'Sequences' : 'Sequence';\n    }\n    case 'file': {\n      return plural ? 'Files' : 'File';\n    }\n    case 'event': {\n      return plural ? 'Events' : 'Event';\n    }\n    case 'threeD': {\n      return plural ? '3D models' : '3D model';\n    }\n    default: {\n      throw new Error(`Unknown ResourceType: ${t}`);\n    }\n  }\n}\n\nexport function getIcon(type: ResourceType): AllIconTypes {\n  switch (type) {\n    case 'asset':\n      return 'Assets';\n    case 'event':\n      return 'Events';\n    case 'file':\n      return 'Document';\n    case 'sequence':\n      return 'Sequences';\n    case 'timeSeries':\n      return 'Timeseries';\n    default:\n      throw new Error('We forgot about a resource type :(');\n  }\n}\n\nexport type ResourceItem = {\n  id: number;\n  externalId?: string;\n  type: ResourceType;\n};\n\nexport type ResourceItemState = ResourceItem & {\n  state: 'disabled' | 'active' | 'selected';\n};\n\nexport type RenderResourceActionsFunction = (\n  item: ResourceItem\n) => React.ReactNode[];\n\nexport type ModelStatus =\n  | 'New'\n  | 'Scheduled'\n  | 'Queued'\n  | 'Completed'\n  | 'Running'\n  | 'Failed';\n\nexport const isModelRunning = (s?: ModelStatus) => {\n  switch (s) {\n    case 'New':\n    case 'Scheduled':\n    case 'Queued':\n    case 'Running':\n      return true;\n    case undefined:\n    default:\n      return false;\n  }\n};\n\nexport const LocalStorageFileContextKey = 'LocalStorageFileContextKey';\n\nexport interface RelationshipLabels {\n  relationshipLabels?: string[];\n  relation?: string;\n  relatedResourceType?: string;\n}\n"],"mappings":"AAKA,WAAYA,aAAa;AAOxB,WAPWA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;AAAA,GAAbA,aAAa,KAAbA,aAAa;AA4BzB;AACA;AACA;AACA,OAAO,SAASC,mBAAmB,CAACC,IAAmB,EAAmB;EACxE,IAAIA,IAAI,KAAK,QAAQ,EAAE,OAAOA,IAAI;EAElC,QAAQA,IAAI;IACV,KAAK,OAAO;MAAE;QACZ,OAAO,QAAQ;MACjB;IACA,KAAK,YAAY;MAAE;QACjB,OAAO,YAAY;MACrB;IACA,KAAK,UAAU;MAAE;QACf,OAAO,WAAW;MACpB;IACA,KAAK,MAAM;MAAE;QACX,OAAO,OAAO;MAChB;IACA,KAAK,OAAO;MAAE;QACZ,OAAO,QAAQ;MACjB;IACA;MAAS;QACP,MAAM,IAAIC,KAAK,CAAE,yBAAwBD,IAAK,EAAC,CAAC;MAClD;EAAC;AAEL;AAEA,OAAO,SAASE,QAAQ,CAACC,CAAe,EAAEC,MAAM,GAAG,IAAI,EAAU;EAC/D,QAAQD,CAAC;IACP,KAAK,OAAO;MAAE;QACZ,OAAOC,MAAM,GAAG,QAAQ,GAAG,OAAO;MACpC;IACA,KAAK,YAAY;MAAE;QACjB,OAAO,aAAa;MACtB;IACA,KAAK,UAAU;MAAE;QACf,OAAOA,MAAM,GAAG,WAAW,GAAG,UAAU;MAC1C;IACA,KAAK,MAAM;MAAE;QACX,OAAOA,MAAM,GAAG,OAAO,GAAG,MAAM;MAClC;IACA,KAAK,OAAO;MAAE;QACZ,OAAOA,MAAM,GAAG,QAAQ,GAAG,OAAO;MACpC;IACA,KAAK,QAAQ;MAAE;QACb,OAAOA,MAAM,GAAG,WAAW,GAAG,UAAU;MAC1C;IACA;MAAS;QACP,MAAM,IAAIH,KAAK,CAAE,yBAAwBE,CAAE,EAAC,CAAC;MAC/C;EAAC;AAEL;AAEA,OAAO,SAASE,OAAO,CAACL,IAAkB,EAAgB;EACxD,QAAQA,IAAI;IACV,KAAK,OAAO;MACV,OAAO,QAAQ;IACjB,KAAK,OAAO;MACV,OAAO,QAAQ;IACjB,KAAK,MAAM;MACT,OAAO,UAAU;IACnB,KAAK,UAAU;MACb,OAAO,WAAW;IACpB,KAAK,YAAY;MACf,OAAO,YAAY;IACrB;MACE,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EAAC;AAE5D;AAwBA,OAAO,MAAMK,cAAc,GAAIC,CAAe,IAAK;EACjD,QAAQA,CAAC;IACP,KAAK,KAAK;IACV,KAAK,WAAW;IAChB,KAAK,QAAQ;IACb,KAAK,SAAS;MACZ,OAAO,IAAI;IACb,KAAKC,SAAS;IACd;MACE,OAAO,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B"},"metadata":{},"sourceType":"module"}