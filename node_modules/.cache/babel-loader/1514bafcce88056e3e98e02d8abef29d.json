{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useGetSearchConfigFromLocalStorage } from '@data-exploration-lib/core';\nimport { DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT } from '../../../constants';\nimport { useEventsSearchResultQuery } from '../../../events';\nexport const useInfinite360Images = () => {\n  _s();\n  const eventSearchConfig = useGetSearchConfigFromLocalStorage('event');\n  const {\n    data: images360Datasets,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage\n  } = useEventsSearchResultQuery({\n    eventsFilters: {\n      type: 'scan'\n    },\n    limit: DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT\n  }, eventSearchConfig, undefined);\n  const images360Data = useMemo(() => {\n    if (images360Datasets.length > 0) {\n      const results = images360Datasets.reduce((accum, current) => {\n        if (!current.metadata?.site_id) return accum;\n        if (!Object.hasOwn(accum, current.metadata.site_id)) {\n          accum[current.metadata.site_id] = {\n            siteId: current.metadata.site_id,\n            siteName: current.metadata?.site_name ?? current.metadata.site_id,\n            numberOfImages: 1\n          };\n        } else {\n          accum[current.metadata.site_id].numberOfImages += 1;\n        }\n        return accum;\n      }, {});\n      return Object.values(results);\n    }\n    return [];\n  }, [images360Datasets]);\n  return {\n    images360Data,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage\n  };\n};\n_s(useInfinite360Images, \"Rq1iAyGOP5WwGBQFeaa2SKIVHOs=\", false, function () {\n  return [useGetSearchConfigFromLocalStorage, useEventsSearchResultQuery];\n});","map":{"version":3,"names":["useMemo","useGetSearchConfigFromLocalStorage","DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT","useEventsSearchResultQuery","useInfinite360Images","eventSearchConfig","data","images360Datasets","hasNextPage","fetchNextPage","isFetchingNextPage","eventsFilters","type","limit","undefined","images360Data","length","results","reduce","accum","current","metadata","site_id","Object","hasOwn","siteId","siteName","site_name","numberOfImages","values"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/threeD/internal/queries/useInfinite360Images.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { useGetSearchConfigFromLocalStorage } from '@data-exploration-lib/core';\n\nimport { DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT } from '../../../constants';\nimport {\n  InternalEventsData,\n  useEventsSearchResultQuery,\n} from '../../../events';\nimport { InternalEventWithMetadata } from '../types';\n\nexport const useInfinite360Images = () => {\n  const eventSearchConfig = useGetSearchConfigFromLocalStorage('event');\n  const {\n    data: images360Datasets,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n  }: {\n    data: InternalEventsData[];\n    hasNextPage?: boolean;\n    fetchNextPage: () => void;\n    isFetchingNextPage: boolean;\n  } = useEventsSearchResultQuery(\n    {\n      eventsFilters: {\n        type: 'scan',\n      },\n      limit: DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT,\n    },\n    eventSearchConfig,\n    undefined\n  );\n\n  const images360Data = useMemo(() => {\n    if (images360Datasets.length > 0) {\n      const results = (images360Datasets as InternalEventWithMetadata[]).reduce(\n        (accum, current) => {\n          if (!current.metadata?.site_id) return accum;\n\n          if (!Object.hasOwn(accum, current.metadata.site_id)) {\n            accum[current.metadata.site_id] = {\n              siteId: current.metadata.site_id,\n              siteName: current.metadata?.site_name ?? current.metadata.site_id,\n              numberOfImages: 1,\n            };\n          } else {\n            accum[current.metadata.site_id].numberOfImages += 1;\n          }\n\n          return accum;\n        },\n        {} as {\n          [key: string]: {\n            siteId: string;\n            siteName: string;\n            numberOfImages: number;\n          };\n        }\n      );\n\n      return Object.values(results);\n    }\n\n    return [];\n  }, [images360Datasets]);\n\n  return {\n    images360Data,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n  };\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,kCAAkC,QAAQ,4BAA4B;AAE/E,SAASC,qCAAqC,QAAQ,oBAAoB;AAC1E,SAEEC,0BAA0B,QACrB,iBAAiB;AAGxB,OAAO,MAAMC,oBAAoB,GAAG,MAAM;EAAA;EACxC,MAAMC,iBAAiB,GAAGJ,kCAAkC,CAAC,OAAO,CAAC;EACrE,MAAM;IACJK,IAAI,EAAEC,iBAAiB;IACvBC,WAAW;IACXC,aAAa;IACbC;EAMF,CAAC,GAAGP,0BAA0B,CAC5B;IACEQ,aAAa,EAAE;MACbC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAEX;EACT,CAAC,EACDG,iBAAiB,EACjBS,SAAS,CACV;EAED,MAAMC,aAAa,GAAGf,OAAO,CAAC,MAAM;IAClC,IAAIO,iBAAiB,CAACS,MAAM,GAAG,CAAC,EAAE;MAChC,MAAMC,OAAO,GAAIV,iBAAiB,CAAiCW,MAAM,CACvE,CAACC,KAAK,EAAEC,OAAO,KAAK;QAClB,IAAI,CAACA,OAAO,CAACC,QAAQ,EAAEC,OAAO,EAAE,OAAOH,KAAK;QAE5C,IAAI,CAACI,MAAM,CAACC,MAAM,CAACL,KAAK,EAAEC,OAAO,CAACC,QAAQ,CAACC,OAAO,CAAC,EAAE;UACnDH,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,OAAO,CAAC,GAAG;YAChCG,MAAM,EAAEL,OAAO,CAACC,QAAQ,CAACC,OAAO;YAChCI,QAAQ,EAAEN,OAAO,CAACC,QAAQ,EAAEM,SAAS,IAAIP,OAAO,CAACC,QAAQ,CAACC,OAAO;YACjEM,cAAc,EAAE;UAClB,CAAC;QACH,CAAC,MAAM;UACLT,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,OAAO,CAAC,CAACM,cAAc,IAAI,CAAC;QACrD;QAEA,OAAOT,KAAK;MACd,CAAC,EACD,CAAC,CAAC,CAOH;MAED,OAAOI,MAAM,CAACM,MAAM,CAACZ,OAAO,CAAC;IAC/B;IAEA,OAAO,EAAE;EACX,CAAC,EAAE,CAACV,iBAAiB,CAAC,CAAC;EAEvB,OAAO;IACLQ,aAAa;IACbP,WAAW;IACXC,aAAa;IACbC;EACF,CAAC;AACH,CAAC;AAAC,GA9DWN,oBAAoB;EAAA,QACLH,kCAAkC,EAWxDE,0BAA0B;AAAA"},"metadata":{},"sourceType":"module"}