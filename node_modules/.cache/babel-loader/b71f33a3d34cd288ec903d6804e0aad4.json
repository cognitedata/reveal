{"ast":null,"code":"export const getDatasetsList = async (sdk, {\n  filter,\n  limit\n}) => {\n  let cursor;\n  const datasets = [];\n  do {\n    const {\n      nextCursor,\n      items\n    } = await sdk.datasets.list({\n      limit: limit || 1000,\n      cursor,\n      filter\n    });\n    datasets.push(...items);\n    cursor = nextCursor;\n  } while (cursor !== undefined);\n  return datasets;\n};","map":{"version":3,"names":["getDatasetsList","sdk","filter","limit","cursor","datasets","nextCursor","items","list","push","undefined"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/dataSets/service/network/getDatasetsList.ts"],"sourcesContent":["import { CogniteClient, DataSet, DataSetFilter } from '@cognite/sdk';\n\nexport const getDatasetsList = async (\n  sdk: CogniteClient,\n  {\n    filter,\n    limit,\n  }: {\n    filter?: DataSetFilter;\n    limit?: number;\n  }\n) => {\n  let cursor: string | undefined;\n  const datasets: DataSet[] = [];\n\n  do {\n    const { nextCursor, items } = await sdk.datasets.list({\n      limit: limit || 1000,\n      cursor,\n      filter,\n    });\n\n    datasets.push(...items);\n    cursor = nextCursor;\n  } while (cursor !== undefined);\n\n  return datasets;\n};\n"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,OAC7BC,GAAkB,EAClB;EACEC,MAAM;EACNC;AAIF,CAAC,KACE;EACH,IAAIC,MAA0B;EAC9B,MAAMC,QAAmB,GAAG,EAAE;EAE9B,GAAG;IACD,MAAM;MAAEC,UAAU;MAAEC;IAAM,CAAC,GAAG,MAAMN,GAAG,CAACI,QAAQ,CAACG,IAAI,CAAC;MACpDL,KAAK,EAAEA,KAAK,IAAI,IAAI;MACpBC,MAAM;MACNF;IACF,CAAC,CAAC;IAEFG,QAAQ,CAACI,IAAI,CAAC,GAAGF,KAAK,CAAC;IACvBH,MAAM,GAAGE,UAAU;EACrB,CAAC,QAAQF,MAAM,KAAKM,SAAS;EAE7B,OAAOL,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module"}