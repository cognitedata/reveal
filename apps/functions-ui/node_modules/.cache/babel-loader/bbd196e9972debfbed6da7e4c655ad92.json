{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/cdf-utilities/src/components/AuthWrapper/AuthWrapper.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '@cognite/cogs.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthWrapper = ({\n  children,\n  loadingScreen = /*#__PURE__*/_jsxDEV(Loader, {\n    infoText: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 19\n  }, this),\n  login,\n  errorScreen\n}) => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!authenticated) {\n      login().then(() => {\n        setAuthenticated(true);\n        setError(undefined);\n      }).catch(e => {\n        setAuthenticated(false);\n        setError(e);\n      });\n    }\n  }, [authenticated, login, setAuthenticated, setError]);\n  if (error && errorScreen) {\n    return errorScreen(error);\n  }\n  if (loadingScreen && !authenticated) {\n    return loadingScreen;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(AuthWrapper, \"6FtczjQRAEkkppGvfv+KjT84eS8=\");\n_c = AuthWrapper;\nexport default AuthWrapper;\nvar _c;\n$RefreshReg$(_c, \"AuthWrapper\");","map":{"version":3,"names":["React","useEffect","useState","Loader","AuthWrapper","children","loadingScreen","login","errorScreen","authenticated","setAuthenticated","error","setError","then","undefined","catch","e"],"sources":["/Volumes/csvol/fusion/libs/shared/cdf-utilities/src/components/AuthWrapper/AuthWrapper.tsx"],"sourcesContent":["import React, { ReactNode, ReactElement, useEffect, useState } from 'react';\n\nimport { Loader } from '@cognite/cogs.js';\n\ninterface AuthWrapperProps {\n  login: () => Promise<void>;\n  children?: ReactNode;\n  loadingScreen?: ReactElement | null;\n  errorScreen?: (e: Error) => ReactElement | null;\n}\n\nconst AuthWrapper = ({\n  children,\n  loadingScreen = <Loader infoText=\"Loading\" />,\n  login,\n  errorScreen,\n}: AuthWrapperProps): ReactElement | null => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [error, setError] = useState<Error | undefined>();\n\n  useEffect(() => {\n    if (!authenticated) {\n      login()\n        .then(() => {\n          setAuthenticated(true);\n          setError(undefined);\n        })\n        .catch((e) => {\n          setAuthenticated(false);\n          setError(e);\n        });\n    }\n  }, [authenticated, login, setAuthenticated, setError]);\n\n  if (error && errorScreen) {\n    return errorScreen(error);\n  }\n\n  if (loadingScreen && !authenticated) {\n    return loadingScreen;\n  }\n\n  return <>{children}</>;\n};\n\nexport default AuthWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA6BC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3E,SAASC,MAAM,QAAQ,kBAAkB;AAAC;AAAA;AAS1C,MAAMC,WAAW,GAAG,CAAC;EACnBC,QAAQ;EACRC,aAAa,gBAAG,QAAC,MAAM;IAAC,QAAQ,EAAC;EAAS;IAAA;IAAA;IAAA;EAAA,QAAG;EAC7CC,KAAK;EACLC;AACgB,CAAC,KAA0B;EAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,EAAqB;EAEvDD,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,aAAa,EAAE;MAClBF,KAAK,EAAE,CACJM,IAAI,CAAC,MAAM;QACVH,gBAAgB,CAAC,IAAI,CAAC;QACtBE,QAAQ,CAACE,SAAS,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;QACZN,gBAAgB,CAAC,KAAK,CAAC;QACvBE,QAAQ,CAACI,CAAC,CAAC;MACb,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACP,aAAa,EAAEF,KAAK,EAAEG,gBAAgB,EAAEE,QAAQ,CAAC,CAAC;EAEtD,IAAID,KAAK,IAAIH,WAAW,EAAE;IACxB,OAAOA,WAAW,CAACG,KAAK,CAAC;EAC3B;EAEA,IAAIL,aAAa,IAAI,CAACG,aAAa,EAAE;IACnC,OAAOH,aAAa;EACtB;EAEA,oBAAO;IAAA,UAAGD;EAAQ,iBAAI;AACxB,CAAC;AAAC,GAhCID,WAAW;AAAA,KAAXA,WAAW;AAkCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}