{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/FunctionLogsModal.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { Modal, Input, Alert } from 'antd';\nimport moment from 'moment';\nimport { Icon, Button } from '@cognite/cogs.js';\nimport ErrorFeedback from '../../components/Common/atoms/ErrorFeedback';\n// import Highlighter from 'react-highlight-words';\n\nimport { useCall, useLogs } from '../../utils/hooks';\nimport { logsKey, callKey } from '../../utils/queryKeys';\nimport NoLogs from './icons/emptyLogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalBody({\n  logs,\n  call,\n  errors,\n  fetched\n}) {\n  _s();\n  const [logsSearch, setLogsSearch] = useState('');\n  if (!fetched) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetching logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  if (errors) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      message: \"Error\",\n      description: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There was an error fetching the logs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), errors?.map((e, i) => /*#__PURE__*/_jsxDEV(ErrorFeedback, {\n          error: e\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  if (logs?.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No logs were returned from this function call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoLogs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"filter\",\n      prefix: /*#__PURE__*/_jsxDEV(Icon, {\n        type: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this),\n      value: logsSearch,\n      onChange: evt => setLogsSearch(evt.target.value),\n      style: {\n        marginBottom: '16px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [moment.utc(call?.startTime).format('YYYY-MM-DD hh:mm'), \" Function started\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: logs?.map((log, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [log.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, `${call?.id}-logs`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), call?.endTime && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [moment.utc(call?.endTime).format('YYYY-MM-DD hh:mm'), \" Function ended\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ModalBody, \"wnZh2yiyp61rV5eNooRlRYAIfw4=\");\n_c = ModalBody;\nexport default function ViewLogsModal({\n  onCancel,\n  id,\n  callId\n}) {\n  _s2();\n  const client = useQueryClient();\n  const {\n    data: logs,\n    isFetching: logsFetching,\n    isFetched: isLogsFetched,\n    error: logError\n  } = useLogs({\n    id,\n    callId\n  });\n  const {\n    data: call,\n    isFetching: callFetching,\n    isFetched: isCallFetched,\n    error: callError\n  } = useCall({\n    id,\n    callId\n  });\n  const fetched = isLogsFetched && isCallFetched;\n  const fetching = logsFetching || callFetching;\n  const errors = [logError, callError].filter(Boolean);\n  const error = errors.length > 0 ? errors : undefined;\n  const update = e => {\n    e.preventDefault();\n    client.invalidateQueries(callKey({\n      id,\n      callId\n    }));\n    client.invalidateQueries(logsKey({\n      id,\n      callId\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: true,\n    title: \"Logs\",\n    width: 900,\n    onCancel: onCancel,\n    footer: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: \"CloseLarge\",\n      onClick: onCancel,\n      style: {\n        /** Padding needed because of inconsistent icon sizes in cogs * */\n        paddingTop: 10\n      },\n      children: \"Close\"\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: fetching ? 'Loader' : 'Refresh',\n      disabled: fetching,\n      onClick: update,\n      children: error ? 'Retry' : 'Update'\n    }, \"button\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      fetched: fetched,\n      errors: error,\n      call: call,\n      logs: logs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s2(ViewLogsModal, \"wdZ/NzMUP+6FZpQ7/syUWm3Yiqw=\", false, function () {\n  return [useQueryClient, useLogs, useCall];\n});\n_c2 = ViewLogsModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ModalBody\");\n$RefreshReg$(_c2, \"ViewLogsModal\");","map":{"version":3,"names":["React","useState","useQueryClient","Modal","Input","Alert","moment","Icon","Button","ErrorFeedback","useCall","useLogs","logsKey","callKey","NoLogs","ModalBody","logs","call","errors","fetched","logsSearch","setLogsSearch","map","e","i","length","evt","target","value","marginBottom","utc","startTime","format","log","index","message","id","endTime","ViewLogsModal","onCancel","callId","client","data","isFetching","logsFetching","isFetched","isLogsFetched","error","logError","callFetching","isCallFetched","callError","fetching","filter","Boolean","undefined","update","preventDefault","invalidateQueries","paddingTop"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/FunctionLogsModal.tsx"],"sourcesContent":["import React, { useState, SyntheticEvent } from 'react';\nimport { useQueryCache } from 'react-query';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { Modal, Input, Alert } from 'antd';\nimport moment from 'moment';\n\nimport { Icon, Button } from '@cognite/cogs.js';\n\nimport ErrorFeedback from '../../components/Common/atoms/ErrorFeedback';\n// import Highlighter from 'react-highlight-words';\nimport { Call, Log } from '../../types';\nimport { useCall, useLogs } from '../../utils/hooks';\nimport { logsKey, callKey } from '../../utils/queryKeys';\n\nimport NoLogs from './icons/emptyLogs';\n\ntype Props = {\n  onCancel: () => void;\n  id: number;\n  callId: number;\n};\n\ntype BodyProps = {\n  logs?: Log[];\n  call?: Call;\n  errors?: any[];\n  fetched: boolean;\n};\nfunction ModalBody({ logs, call, errors, fetched }: BodyProps) {\n  const [logsSearch, setLogsSearch] = useState('');\n\n  if (!fetched) {\n    return <p>Fetching logs</p>;\n  }\n\n  if (errors) {\n    return (\n      <Alert\n        type=\"error\"\n        message=\"Error\"\n        description={\n          <>\n            <p>There was an error fetching the logs.</p>\n            {errors?.map((e, i) => (\n              <ErrorFeedback key={i} error={e} />\n            ))}\n          </>\n        }\n      />\n    );\n  }\n  if (logs?.length === 0) {\n    return (\n      <>\n        <p>No logs were returned from this function call</p>\n        <NoLogs />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Input\n        name=\"filter\"\n        prefix={<Icon type=\"Search\" />}\n        value={logsSearch}\n        onChange={(evt) => setLogsSearch(evt.target.value)}\n        style={{ marginBottom: '16px' }}\n      />\n      <p>\n        <b>\n          {moment.utc(call?.startTime).format('YYYY-MM-DD hh:mm')} Function\n          started\n        </b>\n      </p>\n      <p key={`${call?.id}-logs`}>\n        {logs?.map((log: Log, index) => (\n          <React.Fragment key={index}>\n            {log.message}\n            {/* <Highlighter\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n              searchWords={[logsSearch]}\n              autoEscape\n              textToHighlight={log.message}\n            /> */}\n            <br />\n          </React.Fragment>\n        ))}\n      </p>\n      {call?.endTime && (\n        <p>\n          <b>\n            {moment.utc(call?.endTime).format('YYYY-MM-DD hh:mm')} Function\n            ended\n          </b>\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default function ViewLogsModal({ onCancel, id, callId }: Props) {\n  const client = useQueryClient();\n  const {\n    data: logs,\n    isFetching: logsFetching,\n    isFetched: isLogsFetched,\n    error: logError,\n  } = useLogs({ id, callId });\n\n  const {\n    data: call,\n    isFetching: callFetching,\n    isFetched: isCallFetched,\n    error: callError,\n  } = useCall({ id, callId });\n\n  const fetched = isLogsFetched && isCallFetched;\n  const fetching = logsFetching || callFetching;\n  const errors = [logError, callError].filter(Boolean);\n  const error: undefined | any[] = errors.length > 0 ? errors : undefined;\n\n  const update = (e: SyntheticEvent) => {\n    e.preventDefault();\n    client.invalidateQueries(callKey({ id, callId }));\n    client.invalidateQueries(logsKey({ id, callId }));\n  };\n\n  return (\n    <Modal\n      visible\n      title=\"Logs\"\n      width={900}\n      onCancel={onCancel}\n      footer={[\n        <Button\n          key=\"close\"\n          icon=\"CloseLarge\"\n          onClick={onCancel}\n          style={{\n            /** Padding needed because of inconsistent icon sizes in cogs * */\n            paddingTop: 10,\n          }}\n        >\n          Close\n        </Button>,\n        <Button\n          key=\"button\"\n          type=\"primary\"\n          icon={fetching ? 'Loader' : 'Refresh'}\n          disabled={fetching}\n          onClick={update}\n        >\n          {error ? 'Retry' : 'Update'}\n        </Button>,\n      ]}\n    >\n      <ModalBody fetched={fetched} errors={error} call={call} logs={logs} />\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}