{"ast":null,"code":"const rootKey = 'sdk-react-query-hooks';\nexport const baseCacheKey = type => [rootKey, 'cdf', type];\nexport const capabilitiesKey = () => [rootKey, 'capabilities'];\nexport const annotationsKey = (...extraArgs) => [rootKey, 'annotations', ...extraArgs];\nexport const aggregateKey = (type, filter) => [...baseCacheKey(type), 'aggregate', filter];\nexport const searchBaseCacheKey = type => [...baseCacheKey(type), 'search'];\nexport const listBaseCacheKey = type => [...baseCacheKey(type), 'list'];\nexport const infiniteBaseSearchCacheKey = type => [...searchBaseCacheKey(type), 'infinite'];\nexport const infiniteBaseListCacheKey = type => [...listBaseCacheKey(type), 'infinite'];\nexport const byIdKey = (type, id) => [...baseCacheKey(type), 'get', 'byId', id];\nexport const infiniteListCacheKey = (type, filter) => [...infiniteBaseListCacheKey(type), {\n  filter\n}];\nexport const listKey = (type, body) => [...listBaseCacheKey(type), body];\nexport const retrieveItemsKey = (type, ids) => [...baseCacheKey(type), 'get', 'byIds', ids];\nexport const searchCacheKey = (type, query, body) => [...searchBaseCacheKey(type), query, body].filter(v => v !== undefined);\nexport const infiniteSearchCacheKey = (type, query, filter) => [...infiniteBaseSearchCacheKey(type), {\n  query\n}, {\n  filter\n}];\nexport const listGroupsKey = scope => [...baseCacheKey('groups'), scope];","map":{"version":3,"names":["rootKey","baseCacheKey","type","capabilitiesKey","annotationsKey","extraArgs","aggregateKey","filter","searchBaseCacheKey","listBaseCacheKey","infiniteBaseSearchCacheKey","infiniteBaseListCacheKey","byIdKey","id","infiniteListCacheKey","listKey","body","retrieveItemsKey","ids","searchCacheKey","query","v","undefined","infiniteSearchCacheKey","listGroupsKey","scope"],"sources":["/Volumes/csvol/fusion/libs/shared/cdf-sdk-react-query-hooks/src/keys.ts"],"sourcesContent":["import { IdEither, ListGroups } from '@cognite/sdk';\n\nimport { SdkResourceType } from './hooks';\n\nconst rootKey = 'sdk-react-query-hooks';\n\nexport const baseCacheKey = (type: SdkResourceType) => [rootKey, 'cdf', type];\n\nexport const capabilitiesKey = () => [rootKey, 'capabilities'];\n\nexport const annotationsKey = (...extraArgs: string[]) => [\n  rootKey,\n  'annotations',\n  ...extraArgs,\n];\n\nexport const aggregateKey = (type: SdkResourceType, filter: any) => [\n  ...baseCacheKey(type),\n  'aggregate',\n  filter,\n];\n\nexport const searchBaseCacheKey = (type: SdkResourceType) => [\n  ...baseCacheKey(type),\n  'search',\n];\n\nexport const listBaseCacheKey = (type: SdkResourceType) => [\n  ...baseCacheKey(type),\n  'list',\n];\n\nexport const infiniteBaseSearchCacheKey = (type: SdkResourceType) => [\n  ...searchBaseCacheKey(type),\n  'infinite',\n];\n\nexport const infiniteBaseListCacheKey = (type: SdkResourceType) => [\n  ...listBaseCacheKey(type),\n  'infinite',\n];\n\nexport const byIdKey = (type: SdkResourceType, id: IdEither) => [\n  ...baseCacheKey(type),\n  'get',\n  'byId',\n  id,\n];\n\nexport const infiniteListCacheKey = (type: SdkResourceType, filter?: any) => [\n  ...infiniteBaseListCacheKey(type),\n  { filter },\n];\n\nexport const listKey = (type: SdkResourceType, body: any) => [\n  ...listBaseCacheKey(type),\n  body,\n];\n\nexport const retrieveItemsKey = (type: SdkResourceType, ids: IdEither[]) => [\n  ...baseCacheKey(type),\n  'get',\n  'byIds',\n  ids,\n];\n\nexport const searchCacheKey = (\n  type: SdkResourceType,\n  query: string,\n  body?: any\n) => [...searchBaseCacheKey(type), query, body].filter((v) => v !== undefined);\n\nexport const infiniteSearchCacheKey = (\n  type: SdkResourceType,\n  query: string,\n  filter?: any\n) => [...infiniteBaseSearchCacheKey(type), { query }, { filter }];\n\nexport const listGroupsKey = (scope?: ListGroups) => [\n  ...baseCacheKey('groups'),\n  scope,\n];\n"],"mappings":"AAIA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,YAAY,GAAIC,IAAqB,IAAK,CAACF,OAAO,EAAE,KAAK,EAAEE,IAAI,CAAC;AAE7E,OAAO,MAAMC,eAAe,GAAG,MAAM,CAACH,OAAO,EAAE,cAAc,CAAC;AAE9D,OAAO,MAAMI,cAAc,GAAG,CAAC,GAAGC,SAAmB,KAAK,CACxDL,OAAO,EACP,aAAa,EACb,GAAGK,SAAS,CACb;AAED,OAAO,MAAMC,YAAY,GAAG,CAACJ,IAAqB,EAAEK,MAAW,KAAK,CAClE,GAAGN,YAAY,CAACC,IAAI,CAAC,EACrB,WAAW,EACXK,MAAM,CACP;AAED,OAAO,MAAMC,kBAAkB,GAAIN,IAAqB,IAAK,CAC3D,GAAGD,YAAY,CAACC,IAAI,CAAC,EACrB,QAAQ,CACT;AAED,OAAO,MAAMO,gBAAgB,GAAIP,IAAqB,IAAK,CACzD,GAAGD,YAAY,CAACC,IAAI,CAAC,EACrB,MAAM,CACP;AAED,OAAO,MAAMQ,0BAA0B,GAAIR,IAAqB,IAAK,CACnE,GAAGM,kBAAkB,CAACN,IAAI,CAAC,EAC3B,UAAU,CACX;AAED,OAAO,MAAMS,wBAAwB,GAAIT,IAAqB,IAAK,CACjE,GAAGO,gBAAgB,CAACP,IAAI,CAAC,EACzB,UAAU,CACX;AAED,OAAO,MAAMU,OAAO,GAAG,CAACV,IAAqB,EAAEW,EAAY,KAAK,CAC9D,GAAGZ,YAAY,CAACC,IAAI,CAAC,EACrB,KAAK,EACL,MAAM,EACNW,EAAE,CACH;AAED,OAAO,MAAMC,oBAAoB,GAAG,CAACZ,IAAqB,EAAEK,MAAY,KAAK,CAC3E,GAAGI,wBAAwB,CAACT,IAAI,CAAC,EACjC;EAAEK;AAAO,CAAC,CACX;AAED,OAAO,MAAMQ,OAAO,GAAG,CAACb,IAAqB,EAAEc,IAAS,KAAK,CAC3D,GAAGP,gBAAgB,CAACP,IAAI,CAAC,EACzBc,IAAI,CACL;AAED,OAAO,MAAMC,gBAAgB,GAAG,CAACf,IAAqB,EAAEgB,GAAe,KAAK,CAC1E,GAAGjB,YAAY,CAACC,IAAI,CAAC,EACrB,KAAK,EACL,OAAO,EACPgB,GAAG,CACJ;AAED,OAAO,MAAMC,cAAc,GAAG,CAC5BjB,IAAqB,EACrBkB,KAAa,EACbJ,IAAU,KACP,CAAC,GAAGR,kBAAkB,CAACN,IAAI,CAAC,EAAEkB,KAAK,EAAEJ,IAAI,CAAC,CAACT,MAAM,CAAEc,CAAC,IAAKA,CAAC,KAAKC,SAAS,CAAC;AAE9E,OAAO,MAAMC,sBAAsB,GAAG,CACpCrB,IAAqB,EACrBkB,KAAa,EACbb,MAAY,KACT,CAAC,GAAGG,0BAA0B,CAACR,IAAI,CAAC,EAAE;EAAEkB;AAAM,CAAC,EAAE;EAAEb;AAAO,CAAC,CAAC;AAEjE,OAAO,MAAMiB,aAAa,GAAIC,KAAkB,IAAK,CACnD,GAAGxB,YAAY,CAAC,QAAQ,CAAC,EACzBwB,KAAK,CACN"},"metadata":{},"sourceType":"module"}