{"ast":null,"code":"export const DASH = '–'; // mostly used to display empty record in UI\nexport const UNIT_SEPARATOR = String.fromCharCode(31); // Unit separator; between fields of a record, or members of a row.\nexport const SPACE = String.fromCharCode(32); // Space, the internationally recommended thousands separator. (source: https://en.wikipedia.org/wiki/Decimal_separator)\nexport const METADATA_KEY_SEPARATOR = '-';\nexport const COPIED_TEXT = 'Copied'; // The message to show in toast when something is copied\nexport const DOCUMENT_ICON_FALLBACK_VALUE = 'file.txt'; // The fallback icon value when mimetype is undefined.\n\nexport let ViewType;\n(function (ViewType) {\n  ViewType[\"All\"] = \"all\";\n  ViewType[\"Asset\"] = \"asset\";\n  ViewType[\"Canvas\"] = \"canvas\";\n  ViewType[\"IndustryCanvas\"] = \"industryCanvas\";\n  ViewType[\"TimeSeries\"] = \"timeSeries\";\n  ViewType[\"File\"] = \"file\";\n  ViewType[\"Event\"] = \"event\";\n  ViewType[\"Sequence\"] = \"sequence\";\n  ViewType[\"ThreeD\"] = \"threeD\";\n})(ViewType || (ViewType = {}));","map":{"version":3,"names":["DASH","UNIT_SEPARATOR","String","fromCharCode","SPACE","METADATA_KEY_SEPARATOR","COPIED_TEXT","DOCUMENT_ICON_FALLBACK_VALUE","ViewType"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/core/src/constants/constants.ts"],"sourcesContent":["export const DASH = '–'; // mostly used to display empty record in UI\nexport const UNIT_SEPARATOR = String.fromCharCode(31); // Unit separator; between fields of a record, or members of a row.\nexport const SPACE = String.fromCharCode(32); // Space, the internationally recommended thousands separator. (source: https://en.wikipedia.org/wiki/Decimal_separator)\nexport const METADATA_KEY_SEPARATOR = '-';\nexport const COPIED_TEXT = 'Copied'; // The message to show in toast when something is copied\nexport const DOCUMENT_ICON_FALLBACK_VALUE = 'file.txt'; // The fallback icon value when mimetype is undefined.\n\nexport enum ViewType {\n  All = 'all',\n  Asset = 'asset',\n  Canvas = 'canvas',\n  IndustryCanvas = 'industryCanvas',\n  TimeSeries = 'timeSeries',\n  File = 'file',\n  Event = 'event',\n  Sequence = 'sequence',\n  ThreeD = 'threeD',\n}\n"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,GAAG,CAAC,CAAC;AACzB,OAAO,MAAMC,cAAc,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,OAAO,MAAMC,KAAK,GAAGF,MAAM,CAACC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,OAAO,MAAME,sBAAsB,GAAG,GAAG;AACzC,OAAO,MAAMC,WAAW,GAAG,QAAQ,CAAC,CAAC;AACrC,OAAO,MAAMC,4BAA4B,GAAG,UAAU,CAAC,CAAC;;AAExD,WAAYC,QAAQ;AAUnB,WAVWA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;AAAA,GAARA,QAAQ,KAARA,QAAQ"},"metadata":{},"sourceType":"module"}