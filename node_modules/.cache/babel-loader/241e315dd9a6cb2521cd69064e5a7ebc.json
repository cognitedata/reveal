{"ast":null,"code":"/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport { AnnotationSource, ANNOTATION_SOURCE_KEY } from '@data-exploration-lib/core';\nexport const isExtendedLocalAnnotation = annotation => annotation.metadata[ANNOTATION_SOURCE_KEY] === AnnotationSource.LOCAL;\nexport const isExtendedAnnotationAnnotation = annotation => annotation.metadata[ANNOTATION_SOURCE_KEY] === AnnotationSource.ANNOTATIONS;\nexport const getResourceIdFromTaggedAnnotation = annotation => {\n  if (isTaggedAnnotationAnnotation(annotation) || isTaggedLocalAnnotation(annotation)) {\n    if (annotation.annotationType === 'diagrams.AssetLink') {\n      // @ts-expect-error\n      return annotation.data.assetRef.id;\n    }\n    if (annotation.annotationType === 'diagrams.FileLink') {\n      // @ts-expect-error\n      return annotation.data.fileRef.id;\n    }\n    return undefined;\n  }\n};\nexport const getResourceIdFromExtendedAnnotation = annotation => {\n  return getResourceIdFromTaggedAnnotation(annotation.metadata);\n};\nexport const getFileIdFromExtendedAnnotation = annotation => {\n  if (isExtendedAnnotationAnnotation(annotation) || isExtendedLocalAnnotation(annotation)) {\n    if (annotation.metadata.annotatedResourceType === 'file') {\n      return annotation.metadata.annotatedResourceId;\n    }\n    return undefined;\n  }\n  return undefined;\n};\nexport const getFileExternalIdFromExtendedAnnotation = annotation => {\n  if (isExtendedAnnotationAnnotation(annotation) || isExtendedLocalAnnotation(annotation)) {\n    return undefined;\n  }\n  return undefined;\n};\nexport const isApprovedTaggedAnnotation = annotation => {\n  if (isTaggedAnnotationAnnotation(annotation)) {\n    return annotation.status === 'approved';\n  }\n  return false;\n};\nexport const isApprovedAnnotation = annotation => {\n  return isApprovedTaggedAnnotation(annotation.metadata);\n};\nexport const isAssetAnnotation = annotation => {\n  if (isExtendedAnnotationAnnotation(annotation) || isExtendedLocalAnnotation(annotation)) {\n    return annotation.metadata.annotationType === 'diagrams.AssetLink';\n  }\n  return false;\n};\nexport const isTaggedAnnotationAnnotation = taggedAnnotation => {\n  return taggedAnnotation[ANNOTATION_SOURCE_KEY] === AnnotationSource.ANNOTATIONS;\n};\nexport const isTaggedLocalAnnotation = taggedAnnotation => {\n  return taggedAnnotation[ANNOTATION_SOURCE_KEY] === AnnotationSource.LOCAL;\n};","map":{"version":3,"names":["AnnotationSource","ANNOTATION_SOURCE_KEY","isExtendedLocalAnnotation","annotation","metadata","LOCAL","isExtendedAnnotationAnnotation","ANNOTATIONS","getResourceIdFromTaggedAnnotation","isTaggedAnnotationAnnotation","isTaggedLocalAnnotation","annotationType","data","assetRef","id","fileRef","undefined","getResourceIdFromExtendedAnnotation","getFileIdFromExtendedAnnotation","annotatedResourceType","annotatedResourceId","getFileExternalIdFromExtendedAnnotation","isApprovedTaggedAnnotation","status","isApprovedAnnotation","isAssetAnnotation","taggedAnnotation"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/annotations/utils.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n\nimport {\n  AnnotationSource,\n  ANNOTATION_SOURCE_KEY,\n  ExtendedAnnotation,\n  TaggedAnnotation,\n  TaggedAnnotationAnnotation,\n  TaggedLocalAnnotation,\n} from '@data-exploration-lib/core';\n\nexport const isExtendedLocalAnnotation = (\n  annotation: ExtendedAnnotation\n): annotation is ExtendedAnnotation<TaggedLocalAnnotation> =>\n  annotation.metadata[ANNOTATION_SOURCE_KEY] === AnnotationSource.LOCAL;\n\nexport const isExtendedAnnotationAnnotation = (\n  annotation: ExtendedAnnotation\n): annotation is ExtendedAnnotation<TaggedAnnotationAnnotation> =>\n  annotation.metadata[ANNOTATION_SOURCE_KEY] === AnnotationSource.ANNOTATIONS;\n\nexport const getResourceIdFromTaggedAnnotation = (\n  annotation: TaggedAnnotation\n) => {\n  if (\n    isTaggedAnnotationAnnotation(annotation) ||\n    isTaggedLocalAnnotation(annotation)\n  ) {\n    if (annotation.annotationType === 'diagrams.AssetLink') {\n      // @ts-expect-error\n      return annotation.data.assetRef.id;\n    }\n\n    if (annotation.annotationType === 'diagrams.FileLink') {\n      // @ts-expect-error\n      return annotation.data.fileRef.id;\n    }\n\n    return undefined;\n  }\n};\n\nexport const getResourceIdFromExtendedAnnotation = (\n  annotation: ExtendedAnnotation\n): number | undefined => {\n  return getResourceIdFromTaggedAnnotation(annotation.metadata);\n};\n\nexport const getFileIdFromExtendedAnnotation = (\n  annotation: ExtendedAnnotation\n): number | undefined => {\n  if (\n    isExtendedAnnotationAnnotation(annotation) ||\n    isExtendedLocalAnnotation(annotation)\n  ) {\n    if (annotation.metadata.annotatedResourceType === 'file') {\n      return annotation.metadata.annotatedResourceId;\n    }\n    return undefined;\n  }\n\n  return undefined;\n};\n\nexport const getFileExternalIdFromExtendedAnnotation = (\n  annotation: ExtendedAnnotation\n): string | undefined => {\n  if (\n    isExtendedAnnotationAnnotation(annotation) ||\n    isExtendedLocalAnnotation(annotation)\n  ) {\n    return undefined;\n  }\n\n  return undefined;\n};\n\nexport const isApprovedTaggedAnnotation = (annotation: TaggedAnnotation) => {\n  if (isTaggedAnnotationAnnotation(annotation)) {\n    return annotation.status === 'approved';\n  }\n\n  return false;\n};\n\nexport const isApprovedAnnotation = (annotation: ExtendedAnnotation) => {\n  return isApprovedTaggedAnnotation(annotation.metadata);\n};\n\nexport const isAssetAnnotation = (annotation: ExtendedAnnotation) => {\n  if (\n    isExtendedAnnotationAnnotation(annotation) ||\n    isExtendedLocalAnnotation(annotation)\n  ) {\n    return annotation.metadata.annotationType === 'diagrams.AssetLink';\n  }\n\n  return false;\n};\n\nexport const isTaggedAnnotationAnnotation = (\n  taggedAnnotation: TaggedAnnotation\n): taggedAnnotation is TaggedAnnotationAnnotation => {\n  return (\n    taggedAnnotation[ANNOTATION_SOURCE_KEY] === AnnotationSource.ANNOTATIONS\n  );\n};\n\nexport const isTaggedLocalAnnotation = (\n  taggedAnnotation: TaggedAnnotation\n): taggedAnnotation is TaggedLocalAnnotation => {\n  return taggedAnnotation[ANNOTATION_SOURCE_KEY] === AnnotationSource.LOCAL;\n};\n"],"mappings":"AAAA;;AAEA,SACEA,gBAAgB,EAChBC,qBAAqB,QAKhB,4BAA4B;AAEnC,OAAO,MAAMC,yBAAyB,GACpCC,UAA8B,IAE9BA,UAAU,CAACC,QAAQ,CAACH,qBAAqB,CAAC,KAAKD,gBAAgB,CAACK,KAAK;AAEvE,OAAO,MAAMC,8BAA8B,GACzCH,UAA8B,IAE9BA,UAAU,CAACC,QAAQ,CAACH,qBAAqB,CAAC,KAAKD,gBAAgB,CAACO,WAAW;AAE7E,OAAO,MAAMC,iCAAiC,GAC5CL,UAA4B,IACzB;EACH,IACEM,4BAA4B,CAACN,UAAU,CAAC,IACxCO,uBAAuB,CAACP,UAAU,CAAC,EACnC;IACA,IAAIA,UAAU,CAACQ,cAAc,KAAK,oBAAoB,EAAE;MACtD;MACA,OAAOR,UAAU,CAACS,IAAI,CAACC,QAAQ,CAACC,EAAE;IACpC;IAEA,IAAIX,UAAU,CAACQ,cAAc,KAAK,mBAAmB,EAAE;MACrD;MACA,OAAOR,UAAU,CAACS,IAAI,CAACG,OAAO,CAACD,EAAE;IACnC;IAEA,OAAOE,SAAS;EAClB;AACF,CAAC;AAED,OAAO,MAAMC,mCAAmC,GAC9Cd,UAA8B,IACP;EACvB,OAAOK,iCAAiC,CAACL,UAAU,CAACC,QAAQ,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMc,+BAA+B,GAC1Cf,UAA8B,IACP;EACvB,IACEG,8BAA8B,CAACH,UAAU,CAAC,IAC1CD,yBAAyB,CAACC,UAAU,CAAC,EACrC;IACA,IAAIA,UAAU,CAACC,QAAQ,CAACe,qBAAqB,KAAK,MAAM,EAAE;MACxD,OAAOhB,UAAU,CAACC,QAAQ,CAACgB,mBAAmB;IAChD;IACA,OAAOJ,SAAS;EAClB;EAEA,OAAOA,SAAS;AAClB,CAAC;AAED,OAAO,MAAMK,uCAAuC,GAClDlB,UAA8B,IACP;EACvB,IACEG,8BAA8B,CAACH,UAAU,CAAC,IAC1CD,yBAAyB,CAACC,UAAU,CAAC,EACrC;IACA,OAAOa,SAAS;EAClB;EAEA,OAAOA,SAAS;AAClB,CAAC;AAED,OAAO,MAAMM,0BAA0B,GAAInB,UAA4B,IAAK;EAC1E,IAAIM,4BAA4B,CAACN,UAAU,CAAC,EAAE;IAC5C,OAAOA,UAAU,CAACoB,MAAM,KAAK,UAAU;EACzC;EAEA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIrB,UAA8B,IAAK;EACtE,OAAOmB,0BAA0B,CAACnB,UAAU,CAACC,QAAQ,CAAC;AACxD,CAAC;AAED,OAAO,MAAMqB,iBAAiB,GAAItB,UAA8B,IAAK;EACnE,IACEG,8BAA8B,CAACH,UAAU,CAAC,IAC1CD,yBAAyB,CAACC,UAAU,CAAC,EACrC;IACA,OAAOA,UAAU,CAACC,QAAQ,CAACO,cAAc,KAAK,oBAAoB;EACpE;EAEA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMF,4BAA4B,GACvCiB,gBAAkC,IACiB;EACnD,OACEA,gBAAgB,CAACzB,qBAAqB,CAAC,KAAKD,gBAAgB,CAACO,WAAW;AAE5E,CAAC;AAED,OAAO,MAAMG,uBAAuB,GAClCgB,gBAAkC,IACY;EAC9C,OAAOA,gBAAgB,CAACzB,qBAAqB,CAAC,KAAKD,gBAAgB,CAACK,KAAK;AAC3E,CAAC"},"metadata":{},"sourceType":"module"}