{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionCalls.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Alert, Table } from 'antd';\nimport moment from 'moment';\nimport ViewLogsButton from '../components/buttons/ViewLogsButton';\nimport ViewResponseButton from '../components/buttons/ViewResponseButton';\nimport FunctionCall from '../components/FunctionCall';\nimport FunctionCallStatus from '../components/FunctionCallStatus';\nimport LoadingIcon from '../components/LoadingIcon';\nimport { useCalls } from '../utils/hooks';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst callTableColumns = [{\n  title: 'Call Time',\n  key: 'Call Time',\n  render: call => {\n    return /*#__PURE__*/_jsxDEV(FunctionCall, {\n      id: call.functionId,\n      callId: call.id,\n      renderCall: c => {\n        const startTime = moment.utc(c.startTime);\n        const timeSince = moment(startTime).fromNow();\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: timeSince\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  title: 'Duration',\n  key: 'duration',\n  render: call => {\n    return /*#__PURE__*/_jsxDEV(FunctionCall, {\n      id: call.functionId,\n      callId: call.id,\n      renderCall: c => {\n        // If the function isn't finished yet, show current duration with end time being now\n        const endTime = moment.utc(c.endTime) || moment.utc(new Date());\n        const startTime = moment.utc(c.startTime);\n\n        // round up to the nearest second\n        const duration = moment.utc(endTime.diff(startTime)).add(1, 'second').startOf('second');\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: duration.format('mm[m ]ss[s]')\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  title: 'Call Status',\n  key: 'callStatus',\n  render: call => {\n    return /*#__PURE__*/_jsxDEV(FunctionCallStatus, {\n      id: call.functionId,\n      callId: call.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this);\n  }\n}, {\n  title: 'Response',\n  key: 'response',\n  render: call => {\n    return /*#__PURE__*/_jsxDEV(FunctionCall, {\n      id: call.functionId,\n      callId: call.id,\n      renderCall: ({\n        functionId,\n        id,\n        status\n      }) => {\n        if (status !== 'Running') {\n          return /*#__PURE__*/_jsxDEV(ViewResponseButton, {\n            id: functionId,\n            callId: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this);\n        }\n        return null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n}, {\n  title: 'Logs',\n  key: 'logs',\n  render: call => /*#__PURE__*/_jsxDEV(ViewLogsButton, {\n    id: call.functionId,\n    callId: call.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this)\n}];\nexport default function FunctionCalls({\n  id,\n  name,\n  scheduleId\n}) {\n  _s();\n  const {\n    data,\n    isFetched,\n    error\n  } = useCalls({\n    id,\n    scheduleId\n  }, {\n    refetchInterval: 1000,\n    cacheTime: 1000,\n    staleTime: 1000,\n    refetchIntervalInBackground: 1000\n  });\n  useEffect(() => {\n    console.log('useCalls has data', data);\n  }, [data]);\n  const functionCalls = data || [];\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      message: `Something went wrong when getting the function calls for ${name} (${id})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isFetched) {\n    return /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Table, {\n    rowKey: call => call.id.toString(),\n    pagination: {\n      pageSize: 25,\n      showSizeChanger: false\n    },\n    dataSource: functionCalls,\n    columns: callTableColumns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(FunctionCalls, \"eVyhyyKWG1dWbdWXJBa46i+LQhY=\", false, function () {\n  return [useCalls];\n});\n_c = FunctionCalls;\nvar _c;\n$RefreshReg$(_c, \"FunctionCalls\");","map":{"version":3,"names":["React","useEffect","Alert","Table","moment","ViewLogsButton","ViewResponseButton","FunctionCall","FunctionCallStatus","LoadingIcon","useCalls","callTableColumns","title","key","render","call","functionId","id","c","startTime","utc","timeSince","fromNow","endTime","Date","duration","diff","add","startOf","format","status","FunctionCalls","name","scheduleId","data","isFetched","error","refetchInterval","cacheTime","staleTime","refetchIntervalInBackground","console","log","functionCalls","toString","pageSize","showSizeChanger"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionCalls.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { Alert, Table } from 'antd';\nimport moment from 'moment';\n\nimport ViewLogsButton from '../components/buttons/ViewLogsButton';\nimport ViewResponseButton from '../components/buttons/ViewResponseButton';\nimport FunctionCall from '../components/FunctionCall';\nimport FunctionCallStatus from '../components/FunctionCallStatus';\nimport LoadingIcon from '../components/LoadingIcon';\nimport { Call } from '../types';\nimport { useCalls } from '../utils/hooks';\n\nconst callTableColumns = [\n  {\n    title: 'Call Time',\n    key: 'Call Time',\n    render: (call: Call) => {\n      return (\n        <FunctionCall\n          id={call.functionId}\n          callId={call.id}\n          renderCall={(c) => {\n            const startTime = moment.utc(c.startTime);\n            const timeSince = moment(startTime).fromNow();\n            return <>{timeSince}</>;\n          }}\n        />\n      );\n    },\n  },\n  {\n    title: 'Duration',\n    key: 'duration',\n    render: (call: Call) => {\n      return (\n        <FunctionCall\n          id={call.functionId}\n          callId={call.id}\n          renderCall={(c) => {\n            // If the function isn't finished yet, show current duration with end time being now\n            const endTime = moment.utc(c.endTime) || moment.utc(new Date());\n            const startTime = moment.utc(c.startTime);\n\n            // round up to the nearest second\n            const duration = moment\n              .utc(endTime.diff(startTime))\n              .add(1, 'second')\n              .startOf('second');\n            return <>{duration.format('mm[m ]ss[s]')}</>;\n          }}\n        />\n      );\n    },\n  },\n  {\n    title: 'Call Status',\n    key: 'callStatus',\n    render: (call: Call) => {\n      return <FunctionCallStatus id={call.functionId} callId={call.id} />;\n    },\n  },\n  {\n    title: 'Response',\n    key: 'response',\n    render: (call: Call) => {\n      return (\n        <FunctionCall\n          id={call.functionId}\n          callId={call.id}\n          renderCall={({ functionId, id, status }) => {\n            if (status !== 'Running') {\n              return <ViewResponseButton id={functionId} callId={id} />;\n            }\n            return null;\n          }}\n        />\n      );\n    },\n  },\n  {\n    title: 'Logs',\n    key: 'logs',\n    render: (call: Call) => (\n      <ViewLogsButton id={call.functionId} callId={call.id} />\n    ),\n  },\n];\n\ntype Props = {\n  id: number;\n  name: string;\n  scheduleId?: number;\n};\n\nexport default function FunctionCalls({ id, name, scheduleId }: Props) {\n  const { data, isFetched, error } = useCalls(\n    { id, scheduleId },\n    {\n      refetchInterval: 1000,\n      cacheTime: 1000,\n      staleTime: 1000,\n      refetchIntervalInBackground: 1000,\n    }\n  );\n  useEffect(() => {\n    console.log('useCalls has data', data);\n  }, [data]);\n  const functionCalls = data || [];\n\n  if (error) {\n    return (\n      <Alert\n        type=\"error\"\n        message={`Something went wrong when getting the function calls for ${name} (${id})`}\n      />\n    );\n  }\n  if (!isFetched) {\n    return <LoadingIcon />;\n  }\n\n  return (\n    <Table\n      rowKey={(call) => call.id.toString()}\n      pagination={{ pageSize: 25, showSizeChanger: false }}\n      dataSource={functionCalls}\n      columns={callTableColumns}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}