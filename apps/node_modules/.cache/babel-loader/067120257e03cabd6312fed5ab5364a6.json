{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nexport const useCompare = deps => {\n  _s();\n  const ref = useRef();\n  if (!ref.current || !isEqual(ref.current, deps)) {\n    ref.current = deps;\n  }\n  return ref.current;\n};\n_s(useCompare, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\nexport const useDeepCallback = (callback, deps) => {\n  _s2();\n  return useCallback(callback, useCompare(deps));\n};\n_s2(useDeepCallback, \"mrCGHVoGdBqTV4RhXPBfe+zZEaw=\", false, function () {\n  return [useCompare];\n});\nexport const useDeepEffect = (effect, deps) => {\n  _s3();\n  useEffect(effect, useCompare(deps));\n};\n_s3(useDeepEffect, \"m5VDIodTSuI+/lzcbspZZWCGHQU=\", false, function () {\n  return [useCompare];\n});\nexport const useDeepMemo = (factory, deps) => {\n  _s4();\n  return useMemo(factory, useCompare(deps));\n};\n_s4(useDeepMemo, \"+slpQj+mnal60ybl7A5SGi5UOkA=\", false, function () {\n  return [useCompare];\n});","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","isEqual","useCompare","deps","ref","current","useDeepCallback","callback","useDeepEffect","effect","useDeepMemo","factory"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/hooks/useDeep.ts"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport {\n  DependencyList,\n  EffectCallback,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\n\nimport isEqual from 'lodash/isEqual';\n\nexport const useCompare = (deps: DependencyList) => {\n  const ref = useRef<DependencyList>();\n\n  if (!ref.current || !isEqual(ref.current, deps)) {\n    ref.current = deps;\n  }\n\n  return ref.current;\n};\n\nexport const useDeepCallback = <T extends (...args: any[]) => any>(\n  callback: T,\n  deps: DependencyList\n): T => {\n  return useCallback<T>(callback, useCompare(deps));\n};\n\nexport const useDeepEffect = (\n  effect: EffectCallback,\n  deps: DependencyList\n): void => {\n  useEffect(effect, useCompare(deps));\n};\n\nexport const useDeepMemo = <T>(factory: () => T, deps: DependencyList): T => {\n  return useMemo<T>(factory, useCompare(deps));\n};\n"],"mappings":";;;;AAAA;;AAEA,SAGEA,WAAW,EACXC,SAAS,EACTC,OAAO,EACPC,MAAM,QACD,OAAO;AAEd,OAAOC,OAAO,MAAM,gBAAgB;AAEpC,OAAO,MAAMC,UAAU,GAAIC,IAAoB,IAAK;EAAA;EAClD,MAAMC,GAAG,GAAGJ,MAAM,EAAkB;EAEpC,IAAI,CAACI,GAAG,CAACC,OAAO,IAAI,CAACJ,OAAO,CAACG,GAAG,CAACC,OAAO,EAAEF,IAAI,CAAC,EAAE;IAC/CC,GAAG,CAACC,OAAO,GAAGF,IAAI;EACpB;EAEA,OAAOC,GAAG,CAACC,OAAO;AACpB,CAAC;AAAC,GARWH,UAAU;AAUvB,OAAO,MAAMI,eAAe,GAAG,CAC7BC,QAAW,EACXJ,IAAoB,KACd;EAAA;EACN,OAAON,WAAW,CAAIU,QAAQ,EAAEL,UAAU,CAACC,IAAI,CAAC,CAAC;AACnD,CAAC;AAAC,IALWG,eAAe;EAAA,QAIMJ,UAAU;AAAA;AAG5C,OAAO,MAAMM,aAAa,GAAG,CAC3BC,MAAsB,EACtBN,IAAoB,KACX;EAAA;EACTL,SAAS,CAACW,MAAM,EAAEP,UAAU,CAACC,IAAI,CAAC,CAAC;AACrC,CAAC;AAAC,IALWK,aAAa;EAAA,QAINN,UAAU;AAAA;AAG9B,OAAO,MAAMQ,WAAW,GAAG,CAAIC,OAAgB,EAAER,IAAoB,KAAQ;EAAA;EAC3E,OAAOJ,OAAO,CAAIY,OAAO,EAAET,UAAU,CAACC,IAAI,CAAC,CAAC;AAC9C,CAAC;AAAC,IAFWO,WAAW;EAAA,QACKR,UAAU;AAAA"},"metadata":{},"sourceType":"module"}