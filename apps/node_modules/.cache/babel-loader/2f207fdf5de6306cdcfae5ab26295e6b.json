{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useDeepMemo } from '@data-exploration-lib/core';\nimport { getSearchConfig } from '../../../utils';\nimport { extractMatchingLabels } from '../../../utils/extractMatchingLabels';\nimport { useTimeseriesSearchResultQuery } from './useTimeseriesSearchResultQuery';\nexport const useTimeseriesSearchResultWithLabelsQuery = ({\n  query,\n  filter,\n  sortBy\n}, options, searchConfig = getSearchConfig().timeSeries) => {\n  _s();\n  const {\n    data,\n    ...rest\n  } = useTimeseriesSearchResultQuery({\n    query,\n    filter,\n    sortBy\n  }, searchConfig, options);\n  const properties = React.useMemo(() => {\n    const arr = [];\n    if (searchConfig.id.enabled) {\n      arr.push({\n        key: 'id',\n        label: 'ID'\n      });\n    }\n    if (searchConfig.description.enabled) {\n      arr.push({\n        key: 'description',\n        useSubstringMatch: true\n      });\n    }\n    if (searchConfig.externalId.enabled) {\n      arr.push({\n        key: 'externalId',\n        label: 'External ID'\n      });\n    }\n    if (searchConfig.name.enabled) {\n      arr.push({\n        key: 'name',\n        useSubstringMatch: true\n      });\n    }\n    if (searchConfig.metadata.enabled) {\n      arr.push('metadata');\n    }\n    if (searchConfig.unit.enabled) {\n      arr.push('unit');\n    }\n    return arr;\n  }, [searchConfig]);\n  const mappedData = useDeepMemo(() => {\n    if (data && query) {\n      return data.map(timeseries => {\n        return {\n          ...timeseries,\n          matchingLabels: extractMatchingLabels(timeseries, query, properties)\n        };\n      });\n    }\n    return data;\n  }, [data, query]);\n  return {\n    data: mappedData,\n    ...rest\n  };\n};\n_s(useTimeseriesSearchResultWithLabelsQuery, \"CqisBny7gjdbFAl6UXZ2YWmga88=\", false, function () {\n  return [useTimeseriesSearchResultQuery, useDeepMemo];\n});","map":{"version":3,"names":["React","useDeepMemo","getSearchConfig","extractMatchingLabels","useTimeseriesSearchResultQuery","useTimeseriesSearchResultWithLabelsQuery","query","filter","sortBy","options","searchConfig","timeSeries","data","rest","properties","useMemo","arr","id","enabled","push","key","label","description","useSubstringMatch","externalId","name","metadata","unit","mappedData","map","timeseries","matchingLabels"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/internal/queries/useTimeseriesSearchResultWithLabelsQuery.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { UseInfiniteQueryOptions } from '@tanstack/react-query';\n\nimport {\n  InternalTimeseriesFilters,\n  TimeseriesConfigType,\n  useDeepMemo,\n} from '@data-exploration-lib/core';\n\nimport { TableSortBy } from '../../../types';\nimport { getSearchConfig } from '../../../utils';\nimport {\n  extractMatchingLabels,\n  MatchingLabelPropertyType,\n} from '../../../utils/extractMatchingLabels';\n\nimport { useTimeseriesSearchResultQuery } from './useTimeseriesSearchResultQuery';\n\nexport const useTimeseriesSearchResultWithLabelsQuery = (\n  {\n    query,\n    filter,\n    sortBy,\n  }: {\n    query?: string;\n    filter: InternalTimeseriesFilters;\n    sortBy?: TableSortBy[];\n  },\n  options?: UseInfiniteQueryOptions,\n  searchConfig: TimeseriesConfigType = getSearchConfig().timeSeries\n) => {\n  const { data, ...rest } = useTimeseriesSearchResultQuery(\n    { query, filter, sortBy },\n    searchConfig,\n    options\n  );\n\n  const properties = React.useMemo(() => {\n    const arr: MatchingLabelPropertyType[] = [];\n\n    if (searchConfig.id.enabled) {\n      arr.push({\n        key: 'id',\n        label: 'ID',\n      });\n    }\n\n    if (searchConfig.description.enabled) {\n      arr.push({\n        key: 'description',\n        useSubstringMatch: true,\n      });\n    }\n\n    if (searchConfig.externalId.enabled) {\n      arr.push({\n        key: 'externalId',\n        label: 'External ID',\n      });\n    }\n\n    if (searchConfig.name.enabled) {\n      arr.push({\n        key: 'name',\n        useSubstringMatch: true,\n      });\n    }\n    if (searchConfig.metadata.enabled) {\n      arr.push('metadata');\n    }\n    if (searchConfig.unit.enabled) {\n      arr.push('unit');\n    }\n\n    return arr;\n  }, [searchConfig]);\n\n  const mappedData = useDeepMemo(() => {\n    if (data && query) {\n      return data.map((timeseries) => {\n        return {\n          ...timeseries,\n          matchingLabels: extractMatchingLabels(timeseries, query, properties),\n        };\n      });\n    }\n\n    return data;\n  }, [data, query]);\n\n  return { data: mappedData, ...rest };\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SAGEC,WAAW,QACN,4BAA4B;AAGnC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SACEC,qBAAqB,QAEhB,sCAAsC;AAE7C,SAASC,8BAA8B,QAAQ,kCAAkC;AAEjF,OAAO,MAAMC,wCAAwC,GAAG,CACtD;EACEC,KAAK;EACLC,MAAM;EACNC;AAKF,CAAC,EACDC,OAAiC,EACjCC,YAAkC,GAAGR,eAAe,EAAE,CAACS,UAAU,KAC9D;EAAA;EACH,MAAM;IAAEC,IAAI;IAAE,GAAGC;EAAK,CAAC,GAAGT,8BAA8B,CACtD;IAAEE,KAAK;IAAEC,MAAM;IAAEC;EAAO,CAAC,EACzBE,YAAY,EACZD,OAAO,CACR;EAED,MAAMK,UAAU,GAAGd,KAAK,CAACe,OAAO,CAAC,MAAM;IACrC,MAAMC,GAAgC,GAAG,EAAE;IAE3C,IAAIN,YAAY,CAACO,EAAE,CAACC,OAAO,EAAE;MAC3BF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,IAAI;QACTC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IAEA,IAAIX,YAAY,CAACY,WAAW,CAACJ,OAAO,EAAE;MACpCF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,aAAa;QAClBG,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ;IAEA,IAAIb,YAAY,CAACc,UAAU,CAACN,OAAO,EAAE;MACnCF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,YAAY;QACjBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IAEA,IAAIX,YAAY,CAACe,IAAI,CAACP,OAAO,EAAE;MAC7BF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,MAAM;QACXG,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ;IACA,IAAIb,YAAY,CAACgB,QAAQ,CAACR,OAAO,EAAE;MACjCF,GAAG,CAACG,IAAI,CAAC,UAAU,CAAC;IACtB;IACA,IAAIT,YAAY,CAACiB,IAAI,CAACT,OAAO,EAAE;MAC7BF,GAAG,CAACG,IAAI,CAAC,MAAM,CAAC;IAClB;IAEA,OAAOH,GAAG;EACZ,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,MAAMkB,UAAU,GAAG3B,WAAW,CAAC,MAAM;IACnC,IAAIW,IAAI,IAAIN,KAAK,EAAE;MACjB,OAAOM,IAAI,CAACiB,GAAG,CAAEC,UAAU,IAAK;QAC9B,OAAO;UACL,GAAGA,UAAU;UACbC,cAAc,EAAE5B,qBAAqB,CAAC2B,UAAU,EAAExB,KAAK,EAAEQ,UAAU;QACrE,CAAC;MACH,CAAC,CAAC;IACJ;IAEA,OAAOF,IAAI;EACb,CAAC,EAAE,CAACA,IAAI,EAAEN,KAAK,CAAC,CAAC;EAEjB,OAAO;IAAEM,IAAI,EAAEgB,UAAU;IAAE,GAAGf;EAAK,CAAC;AACtC,CAAC;AAAC,GAzEWR,wCAAwC;EAAA,QAazBD,8BAA8B,EA8CrCH,WAAW;AAAA"},"metadata":{},"sourceType":"module"}