{"ast":null,"code":"export const getRootAsset = (sdk, assetId) => {\n  return sdk.assets.retrieve([{\n    id: assetId\n  }], {\n    ignoreUnknownIds: true\n  }).then(res => {\n    const asset = res[0];\n    if (asset) {\n      return sdk.assets.retrieve([{\n        id: asset.rootId\n      }], {\n        ignoreUnknownIds: true\n      }).then(response => {\n        return response[0] || undefined;\n      });\n    }\n    return undefined;\n  });\n};","map":{"version":3,"names":["getRootAsset","sdk","assetId","assets","retrieve","id","ignoreUnknownIds","then","res","asset","rootId","response","undefined"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/assets/service/network/getRootAsset.ts"],"sourcesContent":["import { Asset, CogniteClient } from '@cognite/sdk';\n\nexport const getRootAsset = (\n  sdk: CogniteClient,\n  assetId: number\n): Promise<Asset | undefined> => {\n  return sdk.assets\n    .retrieve(\n      [\n        {\n          id: assetId,\n        },\n      ],\n      { ignoreUnknownIds: true }\n    )\n    .then((res) => {\n      const asset = res[0];\n\n      if (asset) {\n        return sdk.assets\n          .retrieve(\n            [\n              {\n                id: asset.rootId,\n              },\n            ],\n            { ignoreUnknownIds: true }\n          )\n          .then((response) => {\n            return response[0] || undefined;\n          });\n      }\n\n      return undefined;\n    });\n};\n"],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAG,CAC1BC,GAAkB,EAClBC,OAAe,KACgB;EAC/B,OAAOD,GAAG,CAACE,MAAM,CACdC,QAAQ,CACP,CACE;IACEC,EAAE,EAAEH;EACN,CAAC,CACF,EACD;IAAEI,gBAAgB,EAAE;EAAK,CAAC,CAC3B,CACAC,IAAI,CAAEC,GAAG,IAAK;IACb,MAAMC,KAAK,GAAGD,GAAG,CAAC,CAAC,CAAC;IAEpB,IAAIC,KAAK,EAAE;MACT,OAAOR,GAAG,CAACE,MAAM,CACdC,QAAQ,CACP,CACE;QACEC,EAAE,EAAEI,KAAK,CAACC;MACZ,CAAC,CACF,EACD;QAAEJ,gBAAgB,EAAE;MAAK,CAAC,CAC3B,CACAC,IAAI,CAAEI,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAAC,CAAC,CAAC,IAAIC,SAAS;MACjC,CAAC,CAAC;IACN;IAEA,OAAOA,SAAS;EAClB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}