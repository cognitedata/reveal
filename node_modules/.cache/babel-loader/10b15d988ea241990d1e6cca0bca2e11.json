{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport camelCase from 'lodash/camelCase';\nimport mapKeys from 'lodash/mapKeys';\nimport sdk, { getUserInformation } from '@cognite/cdf-sdk-singleton';\nimport { getProject } from '@cognite/cdf-utilities';\nimport { getCalls, getCall, getResponse, getLogs, getLatestCalls, getScheduleData } from '../../utils/api';\nimport { allFunctionsKey, allSchedulesKey, callKey, callsKey, functionKey, logsKey, responseKey, limitsKey, sortFunctionKey } from '../../utils/queryKeys';\nexport const useFunctions = config => {\n  _s();\n  const cache = useQueryClient().getQueryCache();\n  return useQuery([allFunctionsKey], () => sdk.get(`/api/v1/projects/${getProject()}/functions`).then(r => r.data?.items), {\n    onSuccess: functions => {\n      functions.forEach(fn => {\n        cache.setQueryData(functionKey({\n          id: fn.id\n        }), fn, {\n          initialStale: false\n        });\n      });\n    },\n    ...config\n  });\n};\n_s(useFunctions, \"FbJocrnl8otF4BgWT4r2nF2NRc4=\", false, function () {\n  return [useQueryClient, useQuery];\n});\nexport const useFunction = (id, config) => {\n  _s2();\n  return useQuery(functionKey({\n    id\n  }), () => sdk.get(`/api/v1/projects/${getProject()}/functions/${id}`).then(r => r.data), config);\n};\n_s2(useFunction, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSchedules = config => {\n  _s3();\n  return useQuery([allSchedulesKey], () => sdk.get(`/api/v1/projects/${getProject()}/functions/schedules`, {\n    params: {\n      limit: 1000\n    }\n  }).then(r => r.data?.items), config);\n};\n_s3(useSchedules, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useRetriveScheduleInputData = (scheduleId, config) => {\n  _s4();\n  return useQuery([allSchedulesKey, scheduleId], () => getScheduleData(scheduleId), config);\n};\n_s4(useRetriveScheduleInputData, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useLimits = config => {\n  _s5();\n  return useQuery([limitsKey], () => sdk.get(`/api/v1/projects/${getProject()}/functions/limits`, {\n    params: {\n      vendor: true\n    }\n  }).then(r => mapKeys(r.data, (_, key) => camelCase(key))), config);\n};\n_s5(useLimits, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCalls = (args, config) => {\n  _s6();\n  return useQuery(callsKey(args), getCalls, config);\n};\n_s6(useCalls, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useMultipleCalls = (args, config) => {\n  _s7();\n  return useQuery([sortFunctionKey, args], getLatestCalls, config);\n};\n_s7(useMultipleCalls, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCall = (args, config) => {\n  _s8();\n  return useQuery(callKey(args), getCall, config);\n};\n_s8(useCall, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useResponse = (args, config) => {\n  _s9();\n  return useQuery(responseKey(args), getResponse, config);\n};\n_s9(useResponse, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useLogs = (args, config) => {\n  _s10();\n  return useQuery(logsKey(args), getLogs, config);\n};\n_s10(useLogs, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSDK = (assetType, method, data) => {\n  _s11();\n  return useQuery(['sdk', assetType, data], () =>\n  // @ts-ignore\n  sdk[assetType][method](data));\n};\n_s11(useSDK, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useRefreshApp = () => {\n  _s12();\n  const client = useQueryClient();\n  return () => {\n    client.invalidateQueries();\n  };\n};\n_s12(useRefreshApp, \"jwLmtA0E3A/BpKDVRSeX2+udCjw=\", false, function () {\n  return [useQueryClient];\n});\nexport const useUserInformation = () => {\n  _s13();\n  return useQuery('user-info', getUserInformation);\n};\n_s13(useUserInformation, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCheckActivateFunction = config => {\n  _s14();\n  const project = getProject();\n  return useQuery(['activation', project], () => sdk.get(`api/v1/projects/${project}/functions/status`).then(res => res.data), config);\n};\n_s14(useCheckActivateFunction, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useActivateFunction = config => {\n  _s15();\n  const client = useQueryClient();\n  const project = getProject();\n  return useMutation(() => sdk.post(`/api/v1/projects/${project}/functions/status`).then(res => res.data), {\n    ...config,\n    onSuccess: data => {\n      client.setQueryData(['activation', project], data);\n    }\n  });\n};\n_s15(useActivateFunction, \"N9hHMCery2qbpCs8Wlv5Qz9CRK4=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","camelCase","mapKeys","sdk","getUserInformation","getProject","getCalls","getCall","getResponse","getLogs","getLatestCalls","getScheduleData","allFunctionsKey","allSchedulesKey","callKey","callsKey","functionKey","logsKey","responseKey","limitsKey","sortFunctionKey","useFunctions","config","cache","getQueryCache","get","then","r","data","items","onSuccess","functions","forEach","fn","setQueryData","id","initialStale","useFunction","useSchedules","params","limit","useRetriveScheduleInputData","scheduleId","useLimits","vendor","_","key","useCalls","args","useMultipleCalls","useCall","useResponse","useLogs","useSDK","assetType","method","useRefreshApp","client","invalidateQueries","useUserInformation","useCheckActivateFunction","project","res","useActivateFunction","post"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/app/utils/hooks.ts"],"sourcesContent":["import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport camelCase from 'lodash/camelCase';\nimport mapKeys from 'lodash/mapKeys';\n\nimport sdk, { getUserInformation } from '@cognite/cdf-sdk-singleton';\nimport { getProject } from '@cognite/cdf-utilities';\n\nimport {\n  CogFunction,\n  GetCallsArgs,\n  Call,\n  GetCallArgs,\n  CallResponse,\n  Log,\n  Schedule,\n  CogFunctionLimit,\n} from '../../types';\nimport {\n  getCalls,\n  getCall,\n  getResponse,\n  getLogs,\n  getLatestCalls,\n  getScheduleData,\n} from '../../utils/api';\nimport {\n  allFunctionsKey,\n  allSchedulesKey,\n  callKey,\n  callsKey,\n  functionKey,\n  logsKey,\n  responseKey,\n  limitsKey,\n  sortFunctionKey,\n} from '../../utils/queryKeys';\n\nexport const useFunctions = (config?: QueryConfig<CogFunction[], unknown>) => {\n  const cache = useQueryClient().getQueryCache();\n\n  return useQuery<CogFunction[]>(\n    [allFunctionsKey],\n    () =>\n      sdk\n        .get(`/api/v1/projects/${getProject()}/functions`)\n        .then((r) => r.data?.items),\n    {\n      onSuccess: (functions) => {\n        functions.forEach((fn) => {\n          cache.setQueryData(functionKey({ id: fn.id }), fn, {\n            initialStale: false,\n          });\n        });\n      },\n      ...config,\n    }\n  );\n};\nexport const useFunction = (\n  id: number,\n  config?: QueryConfig<CogFunction, unknown>\n) =>\n  useQuery<CogFunction>(\n    functionKey({ id }),\n    () =>\n      sdk\n        .get(`/api/v1/projects/${getProject()}/functions/${id}`)\n        .then((r) => r.data),\n    config\n  );\nexport const useSchedules = (config?: QueryConfig<Schedule[], unknown>) =>\n  useQuery<Schedule[]>(\n    [allSchedulesKey],\n    () =>\n      sdk\n        .get(`/api/v1/projects/${getProject()}/functions/schedules`, {\n          params: { limit: 1000 },\n        })\n        .then((r) => r.data?.items),\n    config\n  );\n\ntype ObjectType = Record<string, any>;\nexport const useRetriveScheduleInputData = (\n  scheduleId: number,\n  config?: QueryConfig<ObjectType, unknown>\n) => {\n  return useQuery<ObjectType>(\n    [allSchedulesKey, scheduleId],\n    () => getScheduleData(scheduleId),\n    config\n  );\n};\nexport const useLimits = (config?: QueryConfig<CogFunctionLimit, unknown>) =>\n  useQuery<CogFunctionLimit>(\n    [limitsKey],\n    () =>\n      sdk\n        .get(`/api/v1/projects/${getProject()}/functions/limits`, {\n          params: { vendor: true },\n        })\n        .then(\n          (r) => mapKeys(r.data, (_, key) => camelCase(key)) as CogFunctionLimit\n        ),\n    config\n  );\nexport const useCalls = (\n  args: GetCallsArgs,\n  config?: QueryConfig<Call[], unknown>\n) => useQuery<Call[]>(callsKey(args), getCalls, config);\n\nexport const useMultipleCalls = (\n  args: GetCallsArgs[],\n  config?: QueryConfig<{ [id: number]: Call | undefined }, unknown>\n) =>\n  useQuery<{ [id: number]: Call | undefined }>(\n    [sortFunctionKey, args],\n    getLatestCalls,\n    config\n  );\n\nexport const useCall = (\n  args: GetCallArgs,\n  config?: QueryConfig<Call, unknown>\n) => useQuery<Call>(callKey(args), getCall, config);\n\nexport const useResponse = (\n  args: GetCallArgs,\n  config?: QueryConfig<CallResponse, unknown>\n) => useQuery<CallResponse>(responseKey(args), getResponse, config);\n\nexport const useLogs = (\n  args: GetCallArgs,\n  config?: QueryConfig<Log[], unknown>\n) => useQuery<Log[]>(logsKey(args), getLogs, config);\n\ntype AssetType = 'files';\ntype Method = 'retrieve' | 'filter';\nexport const useSDK = <T>(assetType: AssetType, method: Method, data: any) =>\n  useQuery<T>(['sdk', assetType, data], () =>\n    // @ts-ignore\n    sdk[assetType][method](data)\n  );\n\nexport const useRefreshApp = () => {\n  const client = useQueryClient();\n  return () => {\n    client.invalidateQueries();\n  };\n};\n\nexport const useUserInformation = () => {\n  return useQuery('user-info', getUserInformation);\n};\n\ntype ActivationResponse = {\n  status: 'activated' | 'inactive' | 'requested';\n};\ntype ActivationError = {\n  message: string;\n};\n\nexport const useCheckActivateFunction = (\n  config?: QueryConfig<ActivationResponse, ActivationError>\n) => {\n  const project = getProject();\n  return useQuery<ActivationResponse, ActivationError>(\n    ['activation', project],\n    () =>\n      sdk\n        .get(`api/v1/projects/${project}/functions/status`)\n        .then((res) => res.data),\n    config\n  );\n};\n\nexport const useActivateFunction = (\n  config?: QueryConfig<ActivationResponse, ActivationError>\n) => {\n  const client = useQueryClient();\n  const project = getProject();\n  return useMutation<ActivationResponse, ActivationError>(\n    () =>\n      sdk\n        .post(`/api/v1/projects/${project}/functions/status`)\n        .then((res) => res.data),\n    {\n      ...config,\n      onSuccess: (data) => {\n        client.setQueryData(['activation', project], data);\n      },\n    }\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}