{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef } from 'react';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * The purpose of this hook is to effectively handle the dependency changes when a dependency is a data structure.\n *\n * ======================\n * CAN BE USED AS FOLLOWS\n * ======================\n *\n * Let `dep` is an array or an object array.\n *\n * useEffect(() => { // something }, useCompare([dep]));\n * useMemo(() => { // something }, useCompare([dep]));\n *\n * For multiple deps, `useCompare` can be used as follows.\n *\n * useCompare([dep1, dep2, dep3, ...])\n *\n *\n * **********************************************************************************\n *\n * This hook is inspired by an other third-party package.\n * Link to NPM: https://www.npmjs.com/package/use-custom-compare\n * Link to repository: https://github.com/kotarella1110/use-custom-compare\n *\n * **********************************************************************************\n */\n\nexport const useCompare = deps => {\n  _s();\n  const ref = useRef();\n  if (!ref.current || !isEqual(ref.current, deps)) {\n    ref.current = deps;\n  }\n  return ref.current;\n};\n_s(useCompare, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");","map":{"version":3,"names":["useRef","isEqual","useCompare","deps","ref","current"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/core/src/utils/useCompare.ts"],"sourcesContent":["import { useRef, DependencyList } from 'react';\n\nimport isEqual from 'lodash/isEqual';\n\n/**\n * The purpose of this hook is to effectively handle the dependency changes when a dependency is a data structure.\n *\n * ======================\n * CAN BE USED AS FOLLOWS\n * ======================\n *\n * Let `dep` is an array or an object array.\n *\n * useEffect(() => { // something }, useCompare([dep]));\n * useMemo(() => { // something }, useCompare([dep]));\n *\n * For multiple deps, `useCompare` can be used as follows.\n *\n * useCompare([dep1, dep2, dep3, ...])\n *\n *\n * **********************************************************************************\n *\n * This hook is inspired by an other third-party package.\n * Link to NPM: https://www.npmjs.com/package/use-custom-compare\n * Link to repository: https://github.com/kotarella1110/use-custom-compare\n *\n * **********************************************************************************\n */\n\nexport const useCompare = (deps: DependencyList) => {\n  const ref = useRef<DependencyList>();\n\n  if (!ref.current || !isEqual(ref.current, deps)) {\n    ref.current = deps;\n  }\n\n  return ref.current;\n};\n"],"mappings":";AAAA,SAASA,MAAM,QAAwB,OAAO;AAE9C,OAAOC,OAAO,MAAM,gBAAgB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAoB,IAAK;EAAA;EAClD,MAAMC,GAAG,GAAGJ,MAAM,EAAkB;EAEpC,IAAI,CAACI,GAAG,CAACC,OAAO,IAAI,CAACJ,OAAO,CAACG,GAAG,CAACC,OAAO,EAAEF,IAAI,CAAC,EAAE;IAC/CC,GAAG,CAACC,OAAO,GAAGF,IAAI;EACpB;EAEA,OAAOC,GAAG,CAACC,OAAO;AACpB,CAAC;AAAC,GARWH,UAAU"},"metadata":{},"sourceType":"module"}