{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Volumes/csvol/fusion/libs/copilot-core/src/app/Copilot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { QueryClientProvider, QueryClient } from '@tanstack/react-query';\nimport { ToastContainer } from '@cognite/cogs.js';\nimport { FlagProvider } from '@cognite/react-feature-flags';\nimport { ChatUI } from './components/ChatUI';\nimport { COPILOT_TOGGLE, CopilotButton } from './components/CopilotButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Copilot = ({\n  project,\n  feature\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const listener = ev => {\n      if ('detail' in ev) {\n        const toggleEvent = ev;\n        if ('active' in toggleEvent.detail) {\n          setIsVisible(toggleEvent.detail.active || false);\n        }\n      }\n    };\n    window.addEventListener(COPILOT_TOGGLE, listener);\n    return () => {\n      window.removeEventListener(COPILOT_TOGGLE, listener);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: /*#__PURE__*/_jsxDEV(FlagProvider, {\n        apiToken: \"v2Qyg7YqvhyAMCRMbDmy1qA6SuG8YCBE\",\n        appName: \"copilot\",\n        projectName: project,\n        remoteAddress: window.location.hostname,\n        disableMetrics: true,\n        children: [feature && isVisible && /*#__PURE__*/_jsxDEV(ChatUI, {\n          feature: feature,\n          onClose: () => {\n            window.dispatchEvent(new CustomEvent(COPILOT_TOGGLE, {\n              detail: {\n                active: false\n              }\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), feature && /*#__PURE__*/_jsxDEV(CopilotButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Copilot, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = Copilot;\nconst StyledWrapper = /*#__PURE__*/_styled.div.withConfig({\n  displayName: \"Copilot__StyledWrapper\",\n  componentId: \"sc-tvr8rm-0\"\n})([\"display:flex;flex-flow:column;height:100%;overflow:hidden;\"]);\n_c2 = StyledWrapper;\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false\n    }\n  }\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"Copilot\");\n$RefreshReg$(_c2, \"StyledWrapper\");","map":{"version":3,"names":["React","useState","useEffect","QueryClientProvider","QueryClient","ToastContainer","FlagProvider","ChatUI","COPILOT_TOGGLE","CopilotButton","Copilot","project","feature","isVisible","setIsVisible","listener","ev","toggleEvent","detail","active","window","addEventListener","removeEventListener","queryClient","location","hostname","dispatchEvent","CustomEvent","StyledWrapper","styled","div","defaultOptions","queries","retry","refetchOnWindowFocus","refetchOnReconnect"],"sources":["/Volumes/csvol/fusion/libs/copilot-core/src/app/Copilot.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { QueryClientProvider, QueryClient } from '@tanstack/react-query';\nimport styled from 'styled-components/macro';\n\nimport { ToastContainer } from '@cognite/cogs.js';\nimport { FlagProvider } from '@cognite/react-feature-flags';\n\nimport { CopilotSupportedFeatureType } from '../lib/types';\n\nimport { ChatUI } from './components/ChatUI';\nimport { COPILOT_TOGGLE, CopilotButton } from './components/CopilotButton';\n\nexport const Copilot = ({\n  project,\n  feature,\n}: {\n  project: string;\n  feature?: CopilotSupportedFeatureType;\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    const listener = (ev: Event) => {\n      if ('detail' in ev) {\n        const toggleEvent = ev as CustomEvent<{ active?: boolean }>;\n        if ('active' in toggleEvent.detail) {\n          setIsVisible(toggleEvent.detail.active || false);\n        }\n      }\n    };\n    window.addEventListener(COPILOT_TOGGLE, listener);\n    return () => {\n      window.removeEventListener(COPILOT_TOGGLE, listener);\n    };\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ToastContainer />\n      <StyledWrapper>\n        <FlagProvider\n          apiToken=\"v2Qyg7YqvhyAMCRMbDmy1qA6SuG8YCBE\"\n          appName=\"copilot\"\n          projectName={project}\n          remoteAddress={window.location.hostname}\n          disableMetrics\n        >\n          {feature && isVisible && (\n            <ChatUI\n              feature={feature}\n              onClose={() => {\n                window.dispatchEvent(\n                  new CustomEvent(COPILOT_TOGGLE, {\n                    detail: { active: false },\n                  })\n                );\n              }}\n            />\n          )}\n          {feature && <CopilotButton />}\n        </FlagProvider>\n      </StyledWrapper>\n    </QueryClientProvider>\n  );\n};\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n    },\n  },\n});\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,uBAAuB;AAGxE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,8BAA8B;AAI3D,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,cAAc,EAAEC,aAAa,QAAQ,4BAA4B;AAAC;AAE3E,OAAO,MAAMC,OAAO,GAAG,CAAC;EACtBC,OAAO;EACPC;AAIF,CAAC,KAAK;EAAA;EACJ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjDC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAIC,EAAS,IAAK;MAC9B,IAAI,QAAQ,IAAIA,EAAE,EAAE;QAClB,MAAMC,WAAW,GAAGD,EAAuC;QAC3D,IAAI,QAAQ,IAAIC,WAAW,CAACC,MAAM,EAAE;UAClCJ,YAAY,CAACG,WAAW,CAACC,MAAM,CAACC,MAAM,IAAI,KAAK,CAAC;QAClD;MACF;IACF,CAAC;IACDC,MAAM,CAACC,gBAAgB,CAACb,cAAc,EAAEO,QAAQ,CAAC;IACjD,OAAO,MAAM;MACXK,MAAM,CAACE,mBAAmB,CAACd,cAAc,EAAEO,QAAQ,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,mBAAmB;IAAC,MAAM,EAAEQ,WAAY;IAAA,wBACvC,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB,QAAC,aAAa;MAAA,uBACZ,QAAC,YAAY;QACX,QAAQ,EAAC,kCAAkC;QAC3C,OAAO,EAAC,SAAS;QACjB,WAAW,EAAEZ,OAAQ;QACrB,aAAa,EAAES,MAAM,CAACI,QAAQ,CAACC,QAAS;QACxC,cAAc;QAAA,WAEbb,OAAO,IAAIC,SAAS,iBACnB,QAAC,MAAM;UACL,OAAO,EAAED,OAAQ;UACjB,OAAO,EAAE,MAAM;YACbQ,MAAM,CAACM,aAAa,CAClB,IAAIC,WAAW,CAACnB,cAAc,EAAE;cAC9BU,MAAM,EAAE;gBAAEC,MAAM,EAAE;cAAM;YAC1B,CAAC,CAAC,CACH;UACH;QAAE;UAAA;UAAA;UAAA;QAAA,QAEL,EACAP,OAAO,iBAAI,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAChB;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAE1B,CAAC;AAAC,GAnDWF,OAAO;AAAA,KAAPA,OAAO;AAqDpB,MAAMkB,aAAa,gBAAGC,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,kEAK/B;AAAC,MALIF,aAAa;AAOnB,MAAML,WAAW,GAAG,IAAInB,WAAW,CAAC;EAClC2B,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,KAAK,EAAE,KAAK;MACZC,oBAAoB,EAAE,KAAK;MAC3BC,kBAAkB,EAAE;IACtB;EACF;AACF,CAAC,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}