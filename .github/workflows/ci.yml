name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
    branches:
      - '**'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-viewer:
    name: Build Reveal
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v2
      id: npm_cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install NPM dependencies
      if: steps.npm_cache.outputs.cache-hit != 'true'
      working-directory: viewer
      run: yarn install --immutable

    - name: Lint
      working-directory: viewer
      continue-on-error: false
      run: yarn run lint

    - name: Rust fmt
      working-directory: viewer
      continue-on-error: false
      run: |
           rustup component add rustfmt
           cargo fmt --check

    # Skip to save time - development version is enough
    # - name: Build prod version
    #   working-directory: viewer
    #   run: yarn run build:prod

    - name: Build development version
      working-directory: viewer
      run: yarn run build

    - name: Upload dist/ artifact 
      uses: actions/upload-artifact@v3
      with:
        name: viewer
        path: viewer/dist/

  run-coverage-tests:
    name: Run unit tests
    runs-on: ubuntu-latest 
    needs: build-viewer
    steps:
    - uses: actions/checkout@v2

    - name: Download viewer build artifact 
      uses: actions/download-artifact@v3
      with:
        name: viewer
        path: viewer/dist/

    - uses: actions/cache@v2
      id: npm_cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install NPM dependencies
      if: steps.npm_cache.outputs.cache-hit != 'true'
      working-directory: viewer
      run: yarn install --immutable

    - name: Setup tools for coverage tests
      working-directory: viewer
      run: |
        sudo apt-get update
        sudo apt-get install xvfb mesa-utils libgl1-mesa-dri libglapi-mesa libosmesa6
        echo "DISPLAY=:99.0" >> $GITHUB_ENV

    - name: Run coverage tests
      working-directory: viewer
      run: |
        xvfb-run yarn run coverage

    - name: Publish to codecov
      uses: codecov/codecov-action@v3

  run-visual-tests:
    name: Visual Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v2
      id: npm_cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install NPM viewer dependencies
      if: steps.npm_cache.outputs.cache-hit != 'true'
      working-directory: viewer
      run: yarn install --immutable

    - name: Execute visual tests
      id: viewerVisualTests
      working-directory: viewer
      run: 'yarn test:visual'
      continue-on-error: true

    - name: Check for failed visual test diffs
      if: (steps.viewerVisualTests.outcome == 'failure')
      uses: savokr/comment-on-pr@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: |
          There were failures in the Visual regression tests workflow.
          Image diffs for visual tests can be downloaded as an artifact [here](https://github.com/cognitedata/reveal/actions/runs/${{ github.run_id }}).

    - name: Upload image diffs for failed visual tests
      if: (steps.viewerVisualTests.outcome == 'failure')
      uses: actions/upload-artifact@v3
      with:
        name: image-diffs-${{ github.sha }}
        path: viewer/visual-tests/__diff_output__/*

    - name: Report failed visual tests
      if: (steps.viewerVisualTests.outcome == 'failure')
      run: |
        echo There are failed visual tests, please inspect test results.
        exit 1

  ci-examples:
    name: Examples
    runs-on: ubuntu-latest 
    needs: build-viewer
    steps:
    - uses: actions/checkout@v3

    - name: Download viewer build artifact 
      uses: actions/download-artifact@v3
      with:
        name: viewer
        path: viewer/dist/

    - uses: actions/cache@v2
      id: npm_cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install NPM viewer dependencies
      if: steps.npm_cache.outputs.cache-hit != 'true'
      working-directory: viewer
      run: yarn install --immutable

    - name: Install NPM examples dependencies
      # Note! react-app-rewired doesn't work when we get deps from cache for some reason,
      # so we'll ignore the cache.
      # if: steps.npm_cache.outputs.cache-hit != 'true'
      working-directory: examples
      run: yarn install --immutable
      
    - name: Increase number of inotify watches
      run: 'echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p'

    # Disabled because visual tests also builds examples
    # - name: Build examples
    #   working-directory: examples
    #   run: |
    #     echo "NODE_OPTIONS=--max-old-space-size=8192" >> $GITHUB_ENV
    #     yarn build

    - name: Visual regression tests
      id: visualtests
      working-directory: examples
      run: 'yarn ci:e2e'
      continue-on-error: true

    - name: Check for failed visual test diffs
      if: (always() && steps.visualtests.outcome == 'failure')
      working-directory: examples
      run: |
        yarn
        yarn test:ghprcomment
      env:
        ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload image diffs for failed visual tests
      if: (always() && steps.visualtests.outcome == 'failure')
      uses: actions/upload-artifact@v3
      with:
        name: image-diffs-${{ github.sha }}
        path: examples/src/visual_tests/__image_snapshots__/__diff_output__/*

    - name: Report failed visual tests
      if: (always() && steps.visualtests.outcome == 'failure')
      run: |
        echo There are failed visual tests, please inspect test results.
        exit 1

  # runs only when there are changes in parser-worker/
  # we use it here because github haven't figured out conditionally required checks
  # see https://github.community/t/feature-request-conditional-required-checks/16761/13
  ci-parser-worker:
    name: Parser worker
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: legacy-parser-worker
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6
        with:
          PREFIX_FILTER: legacy-parser-worker/parser-worker

      - name: Setup Rust
        if: env.GIT_DIFF
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Cache cargo registry
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo fmt
        if: env.GIT_DIFF
        run: |
          cargo version
          # fail on warnings, test all features
          cargo fmt -- --check

      - name: cargo clippy
        if: env.GIT_DIFF
        run: |
          cargo version
          # NOTE: as of 2020-03-17, Rust 1.42, mem_replace_with_default is triggered by a macro in wasm_bindgen
          # and needs to be disabled
          cargo clippy --all-targets --all-features -- -D warnings -A clippy::mem_replace_with_default

      - name: Run tests
        if: env.GIT_DIFF
        run: |
          cargo version
          cargo test --all --verbose

      - name: Install wasm-pack
        if: env.GIT_DIFF
        uses: jetli/wasm-pack-action@v0.3.0

      - name: Install NPM dependencies
        if: env.GIT_DIFF
        working-directory: legacy-parser-worker/parser-worker
        run: yarn

      - name: Build parser-worker
        if: env.GIT_DIFF
        working-directory: legacy-parser-worker/parser-worker
        run: yarn build:prod

  build-preview-documentation:
    name: Build preview documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.

      - name: Initialize variables
        run: |
          pwd
          echo "PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)" >> $GITHUB_ENV
          echo "name=PR_NUMBER::$PR_NUMBER" >> $GITHUB_ENV

      - uses: actions/cache@v2
        id: npm_cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM viewer dependencies
        if: steps.npm_cache.outputs.cache-hit != 'true'
        working-directory: viewer
        run: yarn install --immutable

      - name: Build production version
        working-directory: viewer
        run: yarn run build:prod

      - name: Install NPM documentation dependencies
        if: steps.npm_cache.outputs.cache-hit != 'true'
        working-directory: documentation
        run: yarn install --immutable

      - name: Update Docosaurus base URL
        uses: jacobtomlinson/gha-find-replace@v1
        with:
          find: "baseUrl: .*"
          replace: "baseUrl: '/reveal-docs-preview/${{ env.PR_NUMBER }}/',"
          include: "docusaurus.config.js"
          exclude: ".git"

      - name: Update Docosaurus title
        uses: jacobtomlinson/gha-find-replace@v1
        with:
          find: "title: .*"
          replace: "title: 'Reveal documentation (preview #${{ env.PR_NUMBER }})',"
          include: "docusaurus.config.js"
          exclude: ".git"

      - name: Build documentation 🔧
        working-directory: documentation
        run: |
          yarn install --immutable
          yarn build:fast

      - name: Upload documentation artifact 
        uses: actions/upload-artifact@v3
        with:
          name: preview-docs
          path: documentation/build/

  deploy-preview-documentation:
    name: Publish documentation preview
    # Ensures that there only will be executed one "instance" of this operation
    # across all ongoing Github Action executions
    concurrency: deploy-preview-documentation
    runs-on: ubuntu-latest
    needs: build-preview-documentation
    if: "contains(github.event.pull_request.labels.*.name, 'preview-docs')"
    steps:
      - name: Initialize variables
        run: |
          echo "PR_NUMBER=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)" >> $GITHUB_ENV

      - name: Download documentation artifact 
        uses: actions/download-artifact@v3
        if:
        with:
          name: preview-docs
          path: documentation/

      - name: Deploy documentation preview 🚀
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.REVEAL_DOCS_PREVIEW_DEPLOY_KEY }}
          external_repository: cognitedata/reveal-docs-preview
          publish_branch: master
          publish_dir: documentation/
          destination_dir: ${{ env.PR_NUMBER }}
          keep_files: false

      - name: Add comment about preview URL
        uses: savokr/comment-on-pr@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            :orange_book: Documentation preview is available from
            https://cognitedata.github.io/reveal-docs-preview/${{ env.PR_NUMBER }}/docs/next/.
          check_for_duplicate_msg: true
          duplicate_msg_pattern: |
            :orange_book: Documentation preview is available from
            https://cognitedata.github.io/reveal-docs-preview/${{ env.PR_NUMBER }}/docs/next/.


  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [ci-examples, build-viewer, ci-parser-worker, deploy-preview-documentation]
    if: always()
    steps:
    - uses: geekyeggo/delete-artifact@v1
      with:
        name: |
          viewer
          preview-docs
