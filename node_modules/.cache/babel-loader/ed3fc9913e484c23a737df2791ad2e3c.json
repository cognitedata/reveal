{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/types.ts"],"sourcesContent":["import { Datum } from 'plotly.js';\n\nimport { TooltipDetailProps } from './components/Tooltip';\n\nexport interface LineChartProps {\n  data: Data | Data[];\n  dataRevision?: number | string;\n  isLoading?: boolean;\n  xAxis?: Axis;\n  yAxis?: Axis;\n  range?: PresetPlotRange;\n  title?: string;\n  subtitle?: string;\n  backgroundColor?: string;\n  variant?: Variant;\n  layout?: Partial<Layout>;\n  config?: Partial<Config>;\n  style?: Style;\n  formatTooltipContent?: (props: TooltipRendererProps) => TooltipDetailProps[];\n  renderTooltipContent?: (props: TooltipRendererProps) => JSX.Element;\n  renderFilters?: () => [JSX.Element, ...JSX.Element[]];\n  renderActions?: () => [JSX.Element, ...JSX.Element[]];\n  formatHoverLineInfo?: (props: HoverLineData) => string;\n  onRangeChange?: (range: PlotRange) => void;\n}\n\nexport interface Data {\n  x: ValueType[];\n  y: ValueType[];\n  name?: string;\n  color?: string;\n  customData?: CustomDataType | CustomDataType[];\n  interpolation?: Interpolation;\n}\n\nexport interface Layout {\n  legendPlacement: HorizontalPlacement;\n  showTitle: boolean;\n  showSubtitle: boolean;\n  showLegend: boolean;\n  showAxisNames: AxisDirection | false;\n  showTicks: boolean;\n  showTickLabels: AxisDirection | false;\n  showFilters: boolean;\n  showActions: boolean;\n  showMarkers: boolean;\n  showTooltip: boolean;\n  showHoverMarker: boolean;\n  showHoverLine: boolean;\n  showHoverLineInfo: boolean;\n}\n\nexport interface Config {\n  responsive: boolean;\n  scrollZoom: AxisDirectionConfig;\n  selectionZoom: AxisDirectionConfig;\n  buttonZoom: AxisDirectionConfig;\n  pan: AxisDirectionConfig;\n  hoverMode: HoverMode;\n}\n\nexport interface Style {\n  backgroundColor?: string;\n  padding?: number;\n  height?: number;\n  width?: number;\n}\n\nexport interface Axis {\n  name?: string;\n  tickCount?: number;\n  tickDistance?: number;\n}\n\nexport interface TooltipRendererProps {\n  x: ValueType;\n  y: ValueType;\n  name: string;\n  color: string;\n  customData?: CustomDataType;\n}\n\nexport interface HoverLineData {\n  x: ValueType;\n  y: ValueType;\n  name: string;\n  customData?: CustomDataType;\n}\n\nexport type ValueType = Datum;\n\nexport type Interpolation = 'linear' | 'spline' | 'step';\n\nexport type CustomDataType = unknown;\n\nexport type Variant = 'small' | 'medium' | 'large';\n\nexport type HorizontalPlacement = 'left' | 'center' | 'right';\n\nexport type AxisRange = [number, number];\n\nexport type AxisDirection = 'x' | 'y' | 'x+y';\n\nexport type AxisIdentifier = 'x' | 'y';\n\nexport interface KeyTriggeredAxisDirection {\n  trigger: 'default' | 'Shift';\n  direction: AxisDirection;\n}\n\nexport type AxisDirectionConfig =\n  | false\n  | AxisDirection\n  | [KeyTriggeredAxisDirection, ...KeyTriggeredAxisDirection[]];\n\nexport interface PlotRange {\n  x: AxisRange;\n  y: AxisRange;\n}\n\nexport interface PresetPlotRange {\n  x?: [ValueType, ValueType];\n  y?: [ValueType, ValueType];\n}\n\nexport interface Coordinate {\n  x?: number;\n  y?: number;\n}\nexport type HoverMode = 'data-point' | 'x';\n"],"mappings":""},"metadata":{},"sourceType":"module"}