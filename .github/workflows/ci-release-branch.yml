name: CI Release Branch
on:
  pull_request:
    branches:
      - release/*
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{secrets.NX_CLOUD_ACCESS_TOKEN}}
  NX_VERBOSE_LOGGING: true

jobs:
  setup:
    name: 'Setup'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Set NPMKEY variable
        run: |
          export NPMKEY=$(echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_READONLY_TOKEN }}")
          echo "::set-output name=NPMKEY::$NPMKEY"
        id: npm_auth_key

      - name: Create .npmrc
        run: echo '${{ steps.npm_auth_key.outputs.NPMKEY }}' > .npmrc

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules/*
            !node_modules/.cache/nx
            ~/.cache/Cypress
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: cache-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - run: git fetch --no-tags --prune --depth=1 origin ${{ github.base_ref }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: ${{ github.base_ref }}

      - name: 'Get affected action'
        uses: './scripts/github-actions/nx-get-affected'

      - name: 'Get affected libs to build'
        id: affected-libs
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          projects: 'libs/*'

      - name: 'Get affected apps to build'
        id: affected-apps
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          projects: 'apps/*'
          exclude: '*shell'

      - name: 'Get affected shell apps to build'
        id: affected-shell-apps
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          projects: '*shell'

      - name: 'Get affected projects for lint'
        id: affected-lint
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          target: 'lint'

      - name: 'Get affected projects for test'
        id: affected-test
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          target: 'test'

      - name: 'Get affected projects for e2e'
        id: affected-e2e
        uses: './scripts/github-actions/nx-get-affected'
        with:
          base: ${{ env.NX_BASE }}
          head: ${{ env.NX_HEAD }}
          target: 'e2e'

    outputs:
      affected-libs: ${{ steps.affected-libs.outputs.projects }}
      affected-libs-string: ${{ steps.affected-libs.outputs.projectsString }}
      affected-lint: ${{ steps.affected-lint.outputs.projects }}
      affected-lint-string: ${{ steps.affected-lint.outputs.projectsString }}
      affected-test: ${{ steps.affected-test.outputs.projects }}
      affected-test-string: ${{ steps.affected-test.outputs.projectsString }}
      affected-apps: ${{ steps.affected-apps.outputs.projects }}
      affected-shell-apps: ${{ steps.affected-shell-apps.outputs.projects }}
      affected-e2e: ${{ steps.affected-e2e.outputs.projects }}

