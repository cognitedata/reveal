name: CI Release Branch
on:
  pull_request:
    branches:
      - release*
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{secrets.NX_CLOUD_ACCESS_TOKEN}}
  NX_VERBOSE_LOGGING: true

jobs:
  setup:
    name: 'Setup'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules/*
            !node_modules/.cache/nx
            ~/.cache/Cypress
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: cache-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_READONLY_TOKEN }}

      - name: 'Get project name'
        uses: actions/github-script@v6
        id: get-project-name
        with:
          script: return "${{ github.event.pull_request.base.ref }}".replace('release-preview-', '').replace('release-', '')
          result-encoding: string

    outputs:
      project: ${{ steps.get-project-name.outputs.result }}
  build:
    name: 'Build'
    runs-on: ubuntu-20.04
    needs: setup
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules/*
            !node_modules/.cache/nx
            ~/.cache/Cypress
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: cache-node-modules-

      - name: Build
        env:
          NODE_OPTIONS: '--max_old_space_size=8192'
        run: npx nx run ${{ needs.setup.outputs.project }}:build:production
