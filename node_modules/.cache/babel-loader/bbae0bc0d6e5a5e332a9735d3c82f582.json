{"ast":null,"code":"import { queryKeys } from '../../../queryKeys';\nexport const fetchThreeDModelQuery = (sdk, queryClient, modelId, options) => {\n  return queryClient.fetchQuery(queryKeys.retrieveThreeDModel(modelId), () => sdk.models3D.retrieve(modelId), options);\n};","map":{"version":3,"names":["queryKeys","fetchThreeDModelQuery","sdk","queryClient","modelId","options","fetchQuery","retrieveThreeDModel","models3D","retrieve"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/threeD/service/network/fetchThreeDModelQuery.ts"],"sourcesContent":["import { FetchQueryOptions, QueryClient } from '@tanstack/react-query';\n\nimport { CogniteClient, CogniteError, Model3D } from '@cognite/sdk/dist/src';\n\nimport { queryKeys } from '../../../queryKeys';\n\nexport const fetchThreeDModelQuery = (\n  sdk: CogniteClient,\n  queryClient: QueryClient,\n  modelId: number,\n  options?: FetchQueryOptions<Model3D, CogniteError, Model3D>\n) => {\n  return queryClient.fetchQuery<Model3D, CogniteError, Model3D>(\n    queryKeys.retrieveThreeDModel(modelId),\n    () => sdk.models3D.retrieve(modelId),\n    options\n  );\n};\n"],"mappings":"AAIA,SAASA,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,qBAAqB,GAAG,CACnCC,GAAkB,EAClBC,WAAwB,EACxBC,OAAe,EACfC,OAA2D,KACxD;EACH,OAAOF,WAAW,CAACG,UAAU,CAC3BN,SAAS,CAACO,mBAAmB,CAACH,OAAO,CAAC,EACtC,MAAMF,GAAG,CAACM,QAAQ,CAACC,QAAQ,CAACL,OAAO,CAAC,EACpCC,OAAO,CACR;AACH,CAAC"},"metadata":{},"sourceType":"module"}