{"ast":null,"code":"import { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useSequencesMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToSequenceAdvancedFilters } from '../transformers';\nexport const useSequenceMetadataValuesOptionsQuery = ({\n  searchQuery,\n  filter\n} = {}) => {\n  var _s = $RefreshSig$();\n  return _s((metadataKeys, query, options) => {\n    _s();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      data = [],\n      isLoading\n    } = useSequencesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options\n    });\n    const omittedFilter = omit(filter, 'metadata');\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      data: dynamicData = []\n    } = useSequencesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options,\n      advancedFilter: mapFiltersToSequenceAdvancedFilters(omittedFilter, searchQuery),\n      filter: getAssetSubtreeIdFilter(omittedFilter)\n    });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n    return {\n      options: transformedOptions,\n      isLoading\n    };\n  }, \"njIlSwceIusx1yHjZtI2zDnOKoY=\", false, function () {\n    return [useSequencesMetadataValuesAggregateQuery, useSequencesMetadataValuesAggregateQuery];\n  });\n};","map":{"version":3,"names":["useMemo","omit","getAssetSubtreeIdFilter","mergeDynamicFilterOptions","useSequencesMetadataValuesAggregateQuery","mapFiltersToSequenceAdvancedFilters","useSequenceMetadataValuesOptionsQuery","searchQuery","filter","metadataKeys","query","options","data","isLoading","metadataKey","omittedFilter","dynamicData","advancedFilter","transformedOptions"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/sequence/internal/queries/useSequenceMetadataValuesOptionsQuery.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { UseQueryOptions } from '@tanstack/react-query';\nimport omit from 'lodash/omit';\n\nimport { InternalSequenceFilters } from '@data-exploration-lib/core';\n\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useSequencesMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToSequenceAdvancedFilters } from '../transformers';\n\ninterface Props {\n  searchQuery?: string;\n  filter?: InternalSequenceFilters;\n}\n\nexport const useSequenceMetadataValuesOptionsQuery =\n  ({ searchQuery, filter }: Props = {}) =>\n  (\n    metadataKeys?: string | null,\n    query?: string,\n    options?: UseQueryOptions<any>\n  ) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data = [], isLoading } = useSequencesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options,\n    });\n\n    const omittedFilter = omit(filter, 'metadata');\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data: dynamicData = [] } = useSequencesMetadataValuesAggregateQuery(\n      {\n        metadataKey: metadataKeys,\n        query,\n        options,\n        advancedFilter: mapFiltersToSequenceAdvancedFilters(\n          omittedFilter,\n          searchQuery\n        ),\n        filter: getAssetSubtreeIdFilter(omittedFilter),\n      }\n    );\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n\n    return { options: transformedOptions, isLoading };\n  };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,OAAOC,IAAI,MAAM,aAAa;AAI9B,SAASC,uBAAuB,QAAQ,gBAAgB;AACxD,SAASC,yBAAyB,QAAQ,0CAA0C;AACpF,SAASC,wCAAwC,QAAQ,eAAe;AACxE,SAASC,mCAAmC,QAAQ,iBAAiB;AAOrE,OAAO,MAAMC,qCAAqC,GAChD,CAAC;EAAEC,WAAW;EAAEC;AAAc,CAAC,GAAG,CAAC,CAAC;EAAA;EAAA,UACpC,CACEC,YAA4B,EAC5BC,KAAc,EACdC,OAA8B,KAC3B;IAAA;IACH;IACA,MAAM;MAAEC,IAAI,GAAG,EAAE;MAAEC;IAAU,CAAC,GAAGT,wCAAwC,CAAC;MACxEU,WAAW,EAAEL,YAAY;MACzBC,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,MAAMI,aAAa,GAAGd,IAAI,CAACO,MAAM,EAAE,UAAU,CAAC;;IAE9C;IACA,MAAM;MAAEI,IAAI,EAAEI,WAAW,GAAG;IAAG,CAAC,GAAGZ,wCAAwC,CACzE;MACEU,WAAW,EAAEL,YAAY;MACzBC,KAAK;MACLC,OAAO;MACPM,cAAc,EAAEZ,mCAAmC,CACjDU,aAAa,EACbR,WAAW,CACZ;MACDC,MAAM,EAAEN,uBAAuB,CAACa,aAAa;IAC/C,CAAC,CACF;;IAED;IACA,MAAMG,kBAAkB,GAAGlB,OAAO,CAAC,MAAM;MACvC,OAAOG,yBAAyB,CAACS,IAAI,EAAEI,WAAW,CAAC;IACrD,CAAC,EAAE,CAACJ,IAAI,EAAEI,WAAW,CAAC,CAAC;IAEvB,OAAO;MAAEL,OAAO,EAAEO,kBAAkB;MAAEL;IAAU,CAAC;EACnD,CAAC;IAAA,QA5BkCT,wCAAwC,EAStCA,wCAAwC;EAAA;AAAA,CAmB5E"},"metadata":{},"sourceType":"module"}