{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/FunctionMetadata.tsx\";\nimport React from 'react';\nimport { Col, Form, Input, Row } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, Icon } from '@cognite/cogs.js';\nimport { checkMetadataKey, checkMetadataValue, getAllSecretKeys } from '../../utils/formValidations';\n\n/**\n * Function Metadata\n * =============================================================================\n *\n * [Open docs »](https://docs.cognite.com/api/v1/#operation/post-api-playground-projects-project-functions)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Metadata({\n  metadata,\n  setMetadata\n}) {\n  const addMetadata = () => {\n    setMetadata(prevMetadata => [...prevMetadata, {\n      id: uuidv4(),\n      key: '',\n      value: '',\n      keyTouched: false,\n      valueTouched: false\n    }]);\n  };\n  const removeMetadata = id => {\n    const filtered = metadata.filter(meta => meta.id !== id);\n    setMetadata(filtered);\n  };\n  const handleMetadataChange = evt => {\n    // eslint-disable-next-line no-unsafe-optional-chaining\n    const {\n      idx\n    } = evt.target?.dataset;\n    const changeField = evt.target?.name;\n    const updatedSecrets = [...metadata];\n    if (changeField === 'meta_key') {\n      updatedSecrets[idx].key = evt.target.value;\n      updatedSecrets[idx].keyTouched = true;\n    } else if (changeField === 'meta_value') {\n      updatedSecrets[idx].value = evt.target.value;\n      updatedSecrets[idx].valueTouched = true;\n    }\n    setMetadata(updatedSecrets);\n  };\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    label: \"Metadata\",\n    children: [metadata.length > 0 && metadata.map((meta, index) => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Property\",\n          required: true,\n          validateStatus: meta.keyTouched && checkMetadataKey(meta.key, getAllSecretKeys(metadata)).error ? 'error' : 'success',\n          help: meta.keyTouched ? checkMetadataKey(meta.key, getAllSecretKeys(metadata)).message : undefined,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: meta.key,\n            name: \"meta_key\",\n            \"data-idx\": index,\n            allowClear: true,\n            onChange: evt => handleMetadataChange(evt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Value\",\n          required: true,\n          validateStatus: meta.valueTouched && checkMetadataValue(meta.value).error ? 'error' : 'success',\n          help: meta.valueTouched ? checkMetadataValue(meta.value).message : undefined,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: meta.value,\n            name: \"meta_value\",\n            \"data-idx\": index,\n            allowClear: true,\n            onChange: evt => handleMetadataChange(evt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"-\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnDeleteMeta\",\n            icon: \"Delete\",\n            onClick: () => removeMetadata(meta.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, meta.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)), metadata.length >= 16 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You may only have 16 parameters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addMetadata,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        type: \"Add\",\n        size: 22\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        ,\n        style: {\n          left: -12,\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), \"Add metadata\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = Metadata;\nvar _c;\n$RefreshReg$(_c, \"Metadata\");","map":{"version":3,"names":["React","Col","Form","Input","Row","v4","uuidv4","Button","Icon","checkMetadataKey","checkMetadataValue","getAllSecretKeys","Metadata","metadata","setMetadata","addMetadata","prevMetadata","id","key","value","keyTouched","valueTouched","removeMetadata","filtered","filter","meta","handleMetadataChange","evt","idx","target","dataset","changeField","name","updatedSecrets","length","map","index","error","message","undefined","left","position"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/components/FunctionModals/FunctionMetadata.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Col, Form, Input, Row } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Button, Icon } from '@cognite/cogs.js';\n\nimport {\n  checkMetadataKey,\n  checkMetadataValue,\n  getAllSecretKeys,\n} from '../../utils/formValidations';\n\n/**\n * Function Metadata\n * =============================================================================\n *\n * [Open docs »](https://docs.cognite.com/api/v1/#operation/post-api-playground-projects-project-functions)\n */\n\ntype MetadataId = string;\nexport interface MetaType {\n  id: MetadataId;\n  key: string;\n  value: string;\n  keyTouched: boolean;\n  valueTouched: boolean;\n}\n\ntype Props = {\n  metadata: MetaType[];\n  setMetadata: (diff: any) => void;\n};\n\nexport default function Metadata({ metadata, setMetadata }: Props) {\n  const addMetadata = () => {\n    setMetadata((prevMetadata: MetaType[]) => [\n      ...prevMetadata,\n      {\n        id: uuidv4(),\n        key: '',\n        value: '',\n        keyTouched: false,\n        valueTouched: false,\n      } as MetaType,\n    ]);\n  };\n\n  const removeMetadata = (id: MetadataId) => {\n    const filtered = metadata.filter((meta) => meta.id !== id);\n    setMetadata(filtered);\n  };\n\n  const handleMetadataChange = (evt: {\n    target: { name: string; value: string; dataset: any };\n  }) => {\n    // eslint-disable-next-line no-unsafe-optional-chaining\n    const { idx } = evt.target?.dataset;\n    const changeField = evt.target?.name;\n    const updatedSecrets = [...metadata];\n    if (changeField === 'meta_key') {\n      updatedSecrets[idx].key = evt.target.value;\n      updatedSecrets[idx].keyTouched = true;\n    } else if (changeField === 'meta_value') {\n      updatedSecrets[idx].value = evt.target.value;\n      updatedSecrets[idx].valueTouched = true;\n    }\n    setMetadata(updatedSecrets);\n  };\n\n  return (\n    <Form.Item label=\"Metadata\">\n      {metadata.length > 0 &&\n        metadata.map((meta: MetaType, index: number) => (\n          <Row key={meta.id}>\n            <Col span={10}>\n              <Form.Item\n                label=\"Property\"\n                required\n                validateStatus={\n                  meta.keyTouched &&\n                  checkMetadataKey(meta.key, getAllSecretKeys(metadata)).error\n                    ? 'error'\n                    : 'success'\n                }\n                help={\n                  meta.keyTouched\n                    ? checkMetadataKey(meta.key, getAllSecretKeys(metadata))\n                        .message\n                    : undefined\n                }\n              >\n                <Input\n                  value={meta.key}\n                  name=\"meta_key\"\n                  data-idx={index}\n                  allowClear\n                  onChange={(evt) => handleMetadataChange(evt)}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={10}>\n              <Form.Item\n                label=\"Value\"\n                required\n                validateStatus={\n                  meta.valueTouched && checkMetadataValue(meta.value).error\n                    ? 'error'\n                    : 'success'\n                }\n                help={\n                  meta.valueTouched\n                    ? checkMetadataValue(meta.value).message\n                    : undefined\n                }\n              >\n                <Input\n                  value={meta.value}\n                  name=\"meta_value\"\n                  data-idx={index}\n                  allowClear\n                  onChange={(evt) => handleMetadataChange(evt)}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={2}>\n              <Form.Item label=\"-\">\n                <Button\n                  id=\"btnDeleteMeta\"\n                  icon=\"Delete\"\n                  onClick={() => removeMetadata(meta.id)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        ))}\n      {metadata.length >= 16 ? (\n        <p>You may only have 16 parameters.</p>\n      ) : (\n        <Button onClick={addMetadata}>\n          <Icon\n            type=\"Add\"\n            size={22}\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            style={{ left: -12, position: 'relative' }}\n          />\n          Add metadata\n        </Button>\n      )}\n    </Form.Item>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}