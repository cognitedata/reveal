---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release-backend-config
  namespace: apps
spec:
  connectionDraining:
    drainingTimeoutSec: 60
  iap:
    enabled: true
    oauthclientCredentials:
      secretName: fusion-app-staging-client-secret
  timeoutSec: 3600
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release-frontend-config
  namespace: apps
spec:
  redirectToHttps:
    enabled: true
  sslPolicy: cognite-ssl-policy
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release
  namespace: apps
spec:
  dnsNames:
  - '*.next-release.fusion.cognite.com'
  - next-release.fusion.cognite.com
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  secretName: fusion-app-staging-cert-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    networking.gke.io/v1beta1.FrontendConfig: fusion-next-release-frontend-config
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release-ingress
  namespace: apps
spec:
  rules:
  - host: '*.next-release.fusion.cognite.com'
    http:
      paths:
      - backend:
          service:
            name: fusion-next-release
            port:
              number: 80
        pathType: ImplementationSpecific
  - host: next-release.fusion.cognite.com
    http:
      paths:
      - backend:
          service:
            name: fusion-next-release
            port:
              number: 80
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - '*.next-release.fusion.cognite.com'
    - next-release.fusion.cognite.com
    secretName: fusion-app-staging-cert-secret
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"http":"fusion-next-release-backend-config"},
      "default" : "fusion-next-release-backend-config"}'
    strategy.spinnaker.io/use-source-capacity: "true"
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release
  namespace: apps
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fusion-next-release
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    strategy.spinnaker.io/use-source-capacity: "true"
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release
  namespace: apps
spec:
  minReadySeconds: 0
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: fusion-next-release
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: fusion-next-release
        service: fusion-ui
        team: cdf-ux
    spec:
      containers:
      - image: eu.gcr.io/cognitedata/fusion-app
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 5
        name: fusion-next-release
        ports:
        - containerPort: 8000
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 8000
        resources:
          limits:
            cpu: 400m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: nginx-config
          subPath: nginx.config
      volumes:
      - configMap:
          name: nginx-config-file-map
        name: nginx-config
---
apiVersion: v1
data:
  nginx.config: "server {\n   listen 8000;\n\n   add_header Access-Control-Allow-Origin
    *;\n\n   root /usr/share/nginx/html;\n   server_tokens off;\n   gzip on;\n   gzip_types
    text/plain text/css text/xml application/xml application/javascript application/json
    image/svg+xml;\n   gzip_comp_level 5;\n   gzip_proxied any;\n   gzip_vary on;\n\n
    \  location / {\n     try_files $uri /index.html;\n     \n     add_header Cache-Control
    \"max-age=300, stale-while-revalidate=600\";\n     add_header Strict-Transport-Security
    \"max-age=63072000; includeSubdomains\";\n     add_header X-Content-Type-Options
    nosniff;\n     add_header Content-Security-Policy-Report-Only \"default-src 'self'
    https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com https://storage.googleapis.com/opint-pr-server/*
    sentry.io; script-src 'self' https://apps-cdn.cogniteapp.com/@cognite/reveal-parser-worker/
    https://cdn.cogniteapp.com https://*.preview.cogniteapp.com https://*.web.app
    https://*.cogniteapp.com https://storage.googleapis.com/opint-pr-server/* https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/;
    connect-src 'self' wss: blob: data: https: https://*.preview.cogniteapp.com https://*.web.app
    https://*.cogniteapp.com https://storage.googleapis.com/opint-pr-server/* sentry.io;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://rsms.me/inter/inter.css
    https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com https://storage.googleapis.com/opint-pr-server/*
    https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/; object-src 'none'; child-src
    blob: https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com
    https://storage.googleapis.com/opint-pr-server/*; font-src 'self' data: https://fonts.gstatic.com
    https://rsms.me https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com
    https://storage.googleapis.com/opint-pr-server/* https://cdn.jsdelivr.net/npm/monaco-editor@0.36.1/;
    worker-src 'self' blob: https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com
    https://storage.googleapis.com/opint-pr-server/*; media-src 'self' https://*.cognitedata.com
    https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com https://storage.googleapis.com/opint-pr-server/*;
    form-action https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com
    https://storage.googleapis.com/opint-pr-server/*; img-src 'self' blob: data: https://*.cognitedata.com
    https://auth.cognite.com https://*.preview.cogniteapp.com https://*.web.app https://*.cogniteapp.com
    https://storage.googleapis.com/opint-pr-server/* https://apps-cdn.cogniteapp.com;
    frame-src * 'self'; report-uri https://o124058.ingest.sentry.io/api/5177031/security/?sentry_key=e1b43d071a3446bfabfca7d239864bc1;\";\n
    \  }\n\n   location ~ /subapps-import-map.json$ {\n     try_files /subapps-import-map-preview.json
    =404;\n     add_header Cache-Control \"max-age=0, no-cache, no-store, must-revalidate\";\n
    \  }\n\n   location ~ /assets/.+\\.(js|png|jpg|jpeg|map|svg|css|woff2)$ {\n     expires
    max;\n   }\n\n   location ~ /dependencies/.+\\.(js|png|jpg|jpeg|map|svg)$ {\n
    \    expires max;\n   }\n\n   location ~ \\.(js|png|jpg|jpeg|map|svg)$ {\n     add_header
    Cache-Control \"max-age=300, stale-while-revalidate=3600\";\n   }\n}\n\n"
kind: ConfigMap
metadata:
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: nginx-config-file-map
  namespace: apps
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: fusion-app-http-container
    service: fusion-ui
    team: cdf-ux
  name: fusion-next-release
  namespace: apps
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fusion-next-release
