{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useSequenceAggregateQuery } from '../../service';\nimport { mapFiltersToSequenceAdvancedFilters, mapInternalFilterToSequenceFilter } from '../transformers';\nexport const useSequenceSearchAggregateQuery = ({\n  query,\n  filter\n}, searchConfig, options) => {\n  _s();\n  const advancedFilter = useMemo(() => mapFiltersToSequenceAdvancedFilters(filter, query, searchConfig), [filter, query, searchConfig]);\n  const sequenceFilter = useMemo(() => mapInternalFilterToSequenceFilter(filter), [filter]);\n  return useSequenceAggregateQuery({\n    filter: sequenceFilter,\n    advancedFilter\n  }, {\n    ...options\n  });\n};\n_s(useSequenceSearchAggregateQuery, \"nZR7u17rr3NKPLpk8iPslBE35Kc=\", false, function () {\n  return [useSequenceAggregateQuery];\n});","map":{"version":3,"names":["useMemo","useSequenceAggregateQuery","mapFiltersToSequenceAdvancedFilters","mapInternalFilterToSequenceFilter","useSequenceSearchAggregateQuery","query","filter","searchConfig","options","advancedFilter","sequenceFilter"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/sequence/internal/queries/useSequenceSearchAggregateQuery.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { UseQueryOptions } from '@tanstack/react-query';\n\nimport {\n  InternalSequenceFilters,\n  SequenceConfigType,\n} from '@data-exploration-lib/core';\n\nimport { useSequenceAggregateQuery } from '../../service';\nimport {\n  mapFiltersToSequenceAdvancedFilters,\n  mapInternalFilterToSequenceFilter,\n} from '../transformers';\n\nexport const useSequenceSearchAggregateQuery = (\n  {\n    query,\n    filter,\n  }: {\n    query?: string;\n    filter: InternalSequenceFilters;\n  },\n  searchConfig?: SequenceConfigType,\n  options?: UseQueryOptions\n) => {\n  const advancedFilter = useMemo(\n    () => mapFiltersToSequenceAdvancedFilters(filter, query, searchConfig),\n    [filter, query, searchConfig]\n  );\n\n  const sequenceFilter = useMemo(\n    () => mapInternalFilterToSequenceFilter(filter),\n    [filter]\n  );\n\n  return useSequenceAggregateQuery(\n    {\n      filter: sequenceFilter,\n      advancedFilter,\n    },\n    {\n      ...options,\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAS/B,SAASC,yBAAyB,QAAQ,eAAe;AACzD,SACEC,mCAAmC,EACnCC,iCAAiC,QAC5B,iBAAiB;AAExB,OAAO,MAAMC,+BAA+B,GAAG,CAC7C;EACEC,KAAK;EACLC;AAIF,CAAC,EACDC,YAAiC,EACjCC,OAAyB,KACtB;EAAA;EACH,MAAMC,cAAc,GAAGT,OAAO,CAC5B,MAAME,mCAAmC,CAACI,MAAM,EAAED,KAAK,EAAEE,YAAY,CAAC,EACtE,CAACD,MAAM,EAAED,KAAK,EAAEE,YAAY,CAAC,CAC9B;EAED,MAAMG,cAAc,GAAGV,OAAO,CAC5B,MAAMG,iCAAiC,CAACG,MAAM,CAAC,EAC/C,CAACA,MAAM,CAAC,CACT;EAED,OAAOL,yBAAyB,CAC9B;IACEK,MAAM,EAAEI,cAAc;IACtBD;EACF,CAAC,EACD;IACE,GAAGD;EACL,CAAC,CACF;AACH,CAAC;AAAC,GA9BWJ,+BAA+B;EAAA,QAqBnCH,yBAAyB;AAAA"},"metadata":{},"sourceType":"module"}