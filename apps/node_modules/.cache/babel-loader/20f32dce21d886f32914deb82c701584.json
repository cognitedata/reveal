{"ast":null,"code":"import chunk from 'lodash/chunk';\nimport { DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT } from '../../../constants';\nexport const getTimeseriesByIds = (sdk, ids) => {\n  const chunkedTimeseriesIds = chunk(ids, DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT);\n  const chunkedPromises = chunkedTimeseriesIds.map(timeseriesIds => sdk.timeseries.retrieve(timeseriesIds, {\n    ignoreUnknownIds: true\n  }));\n  return Promise.all(chunkedPromises).then(result => result.flat());\n};","map":{"version":3,"names":["chunk","DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT","getTimeseriesByIds","sdk","ids","chunkedTimeseriesIds","chunkedPromises","map","timeseriesIds","timeseries","retrieve","ignoreUnknownIds","Promise","all","then","result","flat"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/service/network/getTimeseriesByIds.ts"],"sourcesContent":["import chunk from 'lodash/chunk';\n\nimport { CogniteClient, IdEither } from '@cognite/sdk';\n\nimport { DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT } from '../../../constants';\n\nexport const getTimeseriesByIds = (sdk: CogniteClient, ids: IdEither[]) => {\n  const chunkedTimeseriesIds = chunk(\n    ids,\n    DEFAULT_GLOBAL_TABLE_MAX_RESULT_LIMIT\n  );\n  const chunkedPromises = chunkedTimeseriesIds.map((timeseriesIds) =>\n    sdk.timeseries.retrieve(timeseriesIds, { ignoreUnknownIds: true })\n  );\n  return Promise.all(chunkedPromises).then((result) => result.flat());\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAIhC,SAASC,qCAAqC,QAAQ,oBAAoB;AAE1E,OAAO,MAAMC,kBAAkB,GAAG,CAACC,GAAkB,EAAEC,GAAe,KAAK;EACzE,MAAMC,oBAAoB,GAAGL,KAAK,CAChCI,GAAG,EACHH,qCAAqC,CACtC;EACD,MAAMK,eAAe,GAAGD,oBAAoB,CAACE,GAAG,CAAEC,aAAa,IAC7DL,GAAG,CAACM,UAAU,CAACC,QAAQ,CAACF,aAAa,EAAE;IAAEG,gBAAgB,EAAE;EAAK,CAAC,CAAC,CACnE;EACD,OAAOC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC,CAACQ,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,EAAE,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module"}