{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { getAnnotationsFromContextApiOcrAnnotations } from '@cognite/unified-file-viewer';\nimport { usePnIdRawOCRResultQuery } from '../../service/queries/usePnIdRawOCRResultQuery';\nexport const useSearchResults = ({\n  file,\n  query,\n  enabled\n}) => {\n  _s();\n  const ocrResult = usePnIdRawOCRResultQuery(file, enabled && file !== undefined);\n  const searchResults = useMemo(() => {\n    if (ocrResult.isError) {\n      return null;\n    }\n    const data = ocrResult.data;\n    if (query === '' || file === undefined || data === undefined) {\n      return [];\n    }\n    const containerId = String(file.id);\n    return data.flatMap((pageData, pageIndex) => {\n      const filteredOCRAnnotations = pageData.annotations.filter(box => getSanitizedQueryPartials(query).some(partialQuery => box.text.toLowerCase().includes(partialQuery)));\n      return getAnnotationsFromContextApiOcrAnnotations(filteredOCRAnnotations, containerId).map(annotation => ({\n        page: pageIndex + 1,\n        annotation\n      }));\n    });\n  }, [file, ocrResult.data, ocrResult.isError, query]);\n  return searchResults;\n};\n_s(useSearchResults, \"h5a7h/aCbIbMiIENXHajQ4OOk1k=\", false, function () {\n  return [usePnIdRawOCRResultQuery];\n});\nconst getSanitizedQueryPartials = query => {\n  return query.toLowerCase().split(',') // separate query items by comma\n  .map(partialQuery => partialQuery.trim()) // trim white space\n  .filter(partialQuery => partialQuery !== ''); // remove empty string\n};","map":{"version":3,"names":["useMemo","getAnnotationsFromContextApiOcrAnnotations","usePnIdRawOCRResultQuery","useSearchResults","file","query","enabled","ocrResult","undefined","searchResults","isError","data","containerId","String","id","flatMap","pageData","pageIndex","filteredOCRAnnotations","annotations","filter","box","getSanitizedQueryPartials","some","partialQuery","text","toLowerCase","includes","map","annotation","page","split","trim"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/pnids/internal/hooks/useSearchResults.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { FileInfo } from '@cognite/sdk';\nimport {\n  RectangleAnnotation,\n  getAnnotationsFromContextApiOcrAnnotations,\n} from '@cognite/unified-file-viewer';\n\nimport { usePnIdRawOCRResultQuery } from '../../service/queries/usePnIdRawOCRResultQuery';\n\nexport type SearchResult = {\n  page: number; // 1-indexed page number\n  annotation: RectangleAnnotation;\n};\n\nexport const useSearchResults = ({\n  file,\n  query,\n  enabled,\n}: {\n  file: FileInfo | undefined;\n  query: string;\n  enabled: boolean;\n}): SearchResult[] | null => {\n  const ocrResult = usePnIdRawOCRResultQuery(\n    file,\n    enabled && file !== undefined\n  );\n\n  const searchResults = useMemo(() => {\n    if (ocrResult.isError) {\n      return null;\n    }\n    const data = ocrResult.data;\n\n    if (query === '' || file === undefined || data === undefined) {\n      return [];\n    }\n\n    const containerId = String(file.id);\n\n    return data.flatMap((pageData, pageIndex) => {\n      const filteredOCRAnnotations = pageData.annotations.filter((box) =>\n        getSanitizedQueryPartials(query).some((partialQuery) =>\n          box.text.toLowerCase().includes(partialQuery)\n        )\n      );\n\n      return getAnnotationsFromContextApiOcrAnnotations(\n        filteredOCRAnnotations,\n        containerId\n      ).map((annotation) => ({ page: pageIndex + 1, annotation }));\n    });\n  }, [file, ocrResult.data, ocrResult.isError, query]);\n\n  return searchResults;\n};\n\nconst getSanitizedQueryPartials = (query: string): string[] => {\n  return query\n    .toLowerCase()\n    .split(',') // separate query items by comma\n    .map((partialQuery) => partialQuery.trim()) // trim white space\n    .filter((partialQuery) => partialQuery !== ''); // remove empty string\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,SAEEC,0CAA0C,QACrC,8BAA8B;AAErC,SAASC,wBAAwB,QAAQ,gDAAgD;AAOzF,OAAO,MAAMC,gBAAgB,GAAG,CAAC;EAC/BC,IAAI;EACJC,KAAK;EACLC;AAKF,CAAC,KAA4B;EAAA;EAC3B,MAAMC,SAAS,GAAGL,wBAAwB,CACxCE,IAAI,EACJE,OAAO,IAAIF,IAAI,KAAKI,SAAS,CAC9B;EAED,MAAMC,aAAa,GAAGT,OAAO,CAAC,MAAM;IAClC,IAAIO,SAAS,CAACG,OAAO,EAAE;MACrB,OAAO,IAAI;IACb;IACA,MAAMC,IAAI,GAAGJ,SAAS,CAACI,IAAI;IAE3B,IAAIN,KAAK,KAAK,EAAE,IAAID,IAAI,KAAKI,SAAS,IAAIG,IAAI,KAAKH,SAAS,EAAE;MAC5D,OAAO,EAAE;IACX;IAEA,MAAMI,WAAW,GAAGC,MAAM,CAACT,IAAI,CAACU,EAAE,CAAC;IAEnC,OAAOH,IAAI,CAACI,OAAO,CAAC,CAACC,QAAQ,EAAEC,SAAS,KAAK;MAC3C,MAAMC,sBAAsB,GAAGF,QAAQ,CAACG,WAAW,CAACC,MAAM,CAAEC,GAAG,IAC7DC,yBAAyB,CAACjB,KAAK,CAAC,CAACkB,IAAI,CAAEC,YAAY,IACjDH,GAAG,CAACI,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACH,YAAY,CAAC,CAC9C,CACF;MAED,OAAOvB,0CAA0C,CAC/CiB,sBAAsB,EACtBN,WAAW,CACZ,CAACgB,GAAG,CAAEC,UAAU,KAAM;QAAEC,IAAI,EAAEb,SAAS,GAAG,CAAC;QAAEY;MAAW,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACzB,IAAI,EAAEG,SAAS,CAACI,IAAI,EAAEJ,SAAS,CAACG,OAAO,EAAEL,KAAK,CAAC,CAAC;EAEpD,OAAOI,aAAa;AACtB,CAAC;AAAC,GAzCWN,gBAAgB;EAAA,QASTD,wBAAwB;AAAA;AAkC5C,MAAMoB,yBAAyB,GAAIjB,KAAa,IAAe;EAC7D,OAAOA,KAAK,CACTqB,WAAW,EAAE,CACbK,KAAK,CAAC,GAAG,CAAC,CAAC;EAAA,CACXH,GAAG,CAAEJ,YAAY,IAAKA,YAAY,CAACQ,IAAI,EAAE,CAAC,CAAC;EAAA,CAC3CZ,MAAM,CAAEI,YAAY,IAAKA,YAAY,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,CAAC"},"metadata":{},"sourceType":"module"}