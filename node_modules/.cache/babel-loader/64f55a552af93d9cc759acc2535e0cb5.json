{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport isEmpty from 'lodash/isEmpty';\nimport isUndefined from 'lodash/isUndefined';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { getDocumentsMetadataValuesAggregate } from '../network/getDocumentsMetadataValuesAggregate';\nexport const useDocumentsMetadataValuesAggregateQuery = ({\n  metadataKey,\n  query,\n  filter,\n  options\n} = {}) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.documentsMetadataValues(String(metadataKey), query, filter), () => {\n    return getDocumentsMetadataValuesAggregate(sdk, String(metadataKey), {\n      filter,\n      aggregateFilter: query ? {\n        prefix: {\n          value: query\n        }\n      } : undefined\n    });\n  }, {\n    keepPreviousData: true,\n    enabled: !isEmpty(metadataKey) && (isUndefined(options?.enabled) ? true : options?.enabled),\n    ...options\n  });\n};\n_s(useDocumentsMetadataValuesAggregateQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","isEmpty","isUndefined","useSDK","queryKeys","getDocumentsMetadataValuesAggregate","useDocumentsMetadataValuesAggregateQuery","metadataKey","query","filter","options","sdk","documentsMetadataValues","String","aggregateFilter","prefix","value","undefined","keepPreviousData","enabled"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/documents/service/queries/useDocumentsMetadataValuesAggregateQuery.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from '@tanstack/react-query';\nimport isEmpty from 'lodash/isEmpty';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { AdvancedFilter } from '../../../builders';\nimport { queryKeys } from '../../../queryKeys';\nimport { DocumentProperties } from '../../internal';\nimport { getDocumentsMetadataValuesAggregate } from '../network/getDocumentsMetadataValuesAggregate';\nimport { DocumentsMetadataAggregateResponse } from '../types';\n\ninterface Props {\n  metadataKey?: string | null;\n  query?: string;\n  filter?: AdvancedFilter<DocumentProperties>;\n  options?: UseQueryOptions<\n    DocumentsMetadataAggregateResponse[],\n    unknown,\n    DocumentsMetadataAggregateResponse[],\n    any\n  >;\n}\n\nexport const useDocumentsMetadataValuesAggregateQuery = ({\n  metadataKey,\n  query,\n  filter,\n  options,\n}: Props = {}) => {\n  const sdk = useSDK();\n\n  return useQuery(\n    queryKeys.documentsMetadataValues(String(metadataKey), query, filter),\n    () => {\n      return getDocumentsMetadataValuesAggregate(sdk, String(metadataKey), {\n        filter,\n        aggregateFilter: query ? { prefix: { value: query } } : undefined,\n      });\n    },\n    {\n      keepPreviousData: true,\n      enabled:\n        !isEmpty(metadataKey) &&\n        (isUndefined(options?.enabled) ? true : options?.enabled),\n      ...options,\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAyB,uBAAuB;AACjE,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,SAASC,MAAM,QAAQ,uBAAuB;AAG9C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,mCAAmC,QAAQ,gDAAgD;AAepG,OAAO,MAAMC,wCAAwC,GAAG,CAAC;EACvDC,WAAW;EACXC,KAAK;EACLC,MAAM;EACNC;AACK,CAAC,GAAG,CAAC,CAAC,KAAK;EAAA;EAChB,MAAMC,GAAG,GAAGR,MAAM,EAAE;EAEpB,OAAOH,QAAQ,CACbI,SAAS,CAACQ,uBAAuB,CAACC,MAAM,CAACN,WAAW,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAC,EACrE,MAAM;IACJ,OAAOJ,mCAAmC,CAACM,GAAG,EAAEE,MAAM,CAACN,WAAW,CAAC,EAAE;MACnEE,MAAM;MACNK,eAAe,EAAEN,KAAK,GAAG;QAAEO,MAAM,EAAE;UAAEC,KAAK,EAAER;QAAM;MAAE,CAAC,GAAGS;IAC1D,CAAC,CAAC;EACJ,CAAC,EACD;IACEC,gBAAgB,EAAE,IAAI;IACtBC,OAAO,EACL,CAAClB,OAAO,CAACM,WAAW,CAAC,KACpBL,WAAW,CAACQ,OAAO,EAAES,OAAO,CAAC,GAAG,IAAI,GAAGT,OAAO,EAAES,OAAO,CAAC;IAC3D,GAAGT;EACL,CAAC,CACF;AACH,CAAC;AAAC,GAxBWJ,wCAAwC;EAAA,QAMvCH,MAAM,EAEXH,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}