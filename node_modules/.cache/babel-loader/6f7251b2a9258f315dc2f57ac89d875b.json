{"ast":null,"code":"import dayjs from 'dayjs';\nimport { getTimePeriodData } from './getTimePeriodData';\nconst TIME_PERIOD_TYPE_MAP = {\n  Y: 'years',\n  M: 'months',\n  W: 'weeks',\n  D: 'days',\n  H: 'hours',\n  Min: 'minutes'\n};\nexport const getDateRangeForTimePeriod = timePeriod => {\n  const {\n    time,\n    period\n  } = getTimePeriodData(timePeriod);\n  const dateRangeUnit = getDateRangeUnit(period);\n  const start = dayjs().startOf(dateRangeUnit).subtract(time, TIME_PERIOD_TYPE_MAP[period]).toDate();\n  const end = dayjs().startOf(dateRangeUnit).toDate();\n  return [start, end];\n};\nexport const getDateRangeUnit = period => {\n  if (period === 'H' || period === 'Min') {\n    return 'minute';\n  }\n  return 'day';\n};","map":{"version":3,"names":["dayjs","getTimePeriodData","TIME_PERIOD_TYPE_MAP","Y","M","W","D","H","Min","getDateRangeForTimePeriod","timePeriod","time","period","dateRangeUnit","getDateRangeUnit","start","startOf","subtract","toDate","end"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/utils/getDateRangeForTimePeriod.ts"],"sourcesContent":["import dayjs, { ManipulateType, OpUnitType } from 'dayjs';\n\nimport { DateRange, TimePeriod, TimePeriodType } from '../types';\n\nimport { getTimePeriodData } from './getTimePeriodData';\n\nconst TIME_PERIOD_TYPE_MAP: Record<TimePeriodType, ManipulateType> = {\n  Y: 'years',\n  M: 'months',\n  W: 'weeks',\n  D: 'days',\n  H: 'hours',\n  Min: 'minutes',\n};\n\nexport const getDateRangeForTimePeriod = (\n  timePeriod: TimePeriod\n): DateRange => {\n  const { time, period } = getTimePeriodData(timePeriod);\n  const dateRangeUnit = getDateRangeUnit(period);\n\n  const start = dayjs()\n    .startOf(dateRangeUnit)\n    .subtract(time, TIME_PERIOD_TYPE_MAP[period])\n    .toDate();\n\n  const end = dayjs().startOf(dateRangeUnit).toDate();\n\n  return [start, end];\n};\n\nexport const getDateRangeUnit = (period: TimePeriodType): OpUnitType => {\n  if (period === 'H' || period === 'Min') {\n    return 'minute';\n  }\n  return 'day';\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAsC,OAAO;AAIzD,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,MAAMC,oBAA4D,GAAG;EACnEC,CAAC,EAAE,OAAO;EACVC,CAAC,EAAE,QAAQ;EACXC,CAAC,EAAE,OAAO;EACVC,CAAC,EAAE,MAAM;EACTC,CAAC,EAAE,OAAO;EACVC,GAAG,EAAE;AACP,CAAC;AAED,OAAO,MAAMC,yBAAyB,GACpCC,UAAsB,IACR;EACd,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGX,iBAAiB,CAACS,UAAU,CAAC;EACtD,MAAMG,aAAa,GAAGC,gBAAgB,CAACF,MAAM,CAAC;EAE9C,MAAMG,KAAK,GAAGf,KAAK,EAAE,CAClBgB,OAAO,CAACH,aAAa,CAAC,CACtBI,QAAQ,CAACN,IAAI,EAAET,oBAAoB,CAACU,MAAM,CAAC,CAAC,CAC5CM,MAAM,EAAE;EAEX,MAAMC,GAAG,GAAGnB,KAAK,EAAE,CAACgB,OAAO,CAACH,aAAa,CAAC,CAACK,MAAM,EAAE;EAEnD,OAAO,CAACH,KAAK,EAAEI,GAAG,CAAC;AACrB,CAAC;AAED,OAAO,MAAML,gBAAgB,GAAIF,MAAsB,IAAiB;EACtE,IAAIA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,KAAK,EAAE;IACtC,OAAO,QAAQ;EACjB;EACA,OAAO,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module"}