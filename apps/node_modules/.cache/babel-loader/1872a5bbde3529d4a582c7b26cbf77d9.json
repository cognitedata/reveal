{"ast":null,"code":"export const getTimeseriesAggregate = (sdk, payload) => {\n  return sdk.post(`/api/v1/projects/${sdk.project}/timeseries/aggregate`, {\n    headers: {\n      'cdf-version': 'alpha'\n    },\n    data: payload\n  }).then(({\n    data\n  }) => {\n    return {\n      items: data.items\n    };\n  });\n};","map":{"version":3,"names":["getTimeseriesAggregate","sdk","payload","post","project","headers","data","then","items"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/service/network/getTimeseriesAggregate.ts"],"sourcesContent":["import { AggregateResponse, CogniteClient, CursorResponse } from '@cognite/sdk';\n\nimport { TimeseriesAggregateRequestPayload } from '../types';\n\nexport const getTimeseriesAggregate = <ResponseType = AggregateResponse>(\n  sdk: CogniteClient,\n  payload?: TimeseriesAggregateRequestPayload\n) => {\n  return sdk\n    .post<CursorResponse<ResponseType[]>>(\n      `/api/v1/projects/${sdk.project}/timeseries/aggregate`,\n      {\n        headers: {\n          'cdf-version': 'alpha',\n        },\n        data: payload,\n      }\n    )\n    .then(({ data }) => {\n      return {\n        items: data.items,\n      };\n    });\n};\n"],"mappings":"AAIA,OAAO,MAAMA,sBAAsB,GAAG,CACpCC,GAAkB,EAClBC,OAA2C,KACxC;EACH,OAAOD,GAAG,CACPE,IAAI,CACF,oBAAmBF,GAAG,CAACG,OAAQ,uBAAsB,EACtD;IACEC,OAAO,EAAE;MACP,aAAa,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEJ;EACR,CAAC,CACF,CACAK,IAAI,CAAC,CAAC;IAAED;EAAK,CAAC,KAAK;IAClB,OAAO;MACLE,KAAK,EAAEF,IAAI,CAACE;IACd,CAAC;EACH,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}