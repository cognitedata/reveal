{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useDeepMemo } from '@data-exploration-lib/core';\nimport { getSearchConfig } from '../../../utils';\nimport { extractMatchingLabels } from '../../../utils/extractMatchingLabels';\nimport { useEventsSearchResultQuery } from './useEventsSearchResultQuery';\nexport const useEventsSearchResultWithLabelsQuery = ({\n  query,\n  eventsFilters = {},\n  eventsSortBy\n}, searchConfig = getSearchConfig().event, options) => {\n  _s();\n  const {\n    data,\n    ...rest\n  } = useEventsSearchResultQuery({\n    query,\n    eventsFilters,\n    eventsSortBy\n  }, searchConfig, options);\n  const properties = React.useMemo(() => {\n    const arr = [];\n    if (searchConfig.id.enabled) {\n      arr.push({\n        key: 'id',\n        label: 'ID'\n      });\n    }\n    if (searchConfig.description.enabled) {\n      arr.push({\n        key: 'description',\n        useSubstringMatch: true\n      });\n    }\n    if (searchConfig.externalId.enabled) {\n      arr.push({\n        key: 'externalId',\n        label: 'External ID'\n      });\n    }\n    if (searchConfig.source.enabled) {\n      arr.push('source');\n    }\n    if (searchConfig.metadata.enabled) {\n      arr.push('metadata');\n    }\n    if (searchConfig.type.enabled) {\n      arr.push('type');\n    }\n    if (searchConfig.subtype.enabled) {\n      arr.push('subtype');\n    }\n    return arr;\n  }, [searchConfig]);\n  const mappedData = useDeepMemo(() => {\n    if (data && query) {\n      return data.map(event => {\n        return {\n          ...event,\n          matchingLabels: extractMatchingLabels(event, query, properties)\n        };\n      });\n    }\n    return data;\n  }, [data, query]);\n  return {\n    data: mappedData,\n    ...rest\n  };\n};\n_s(useEventsSearchResultWithLabelsQuery, \"buk1gmjaPzawR1T7xdBXxU/p2VI=\", false, function () {\n  return [useEventsSearchResultQuery, useDeepMemo];\n});","map":{"version":3,"names":["React","useDeepMemo","getSearchConfig","extractMatchingLabels","useEventsSearchResultQuery","useEventsSearchResultWithLabelsQuery","query","eventsFilters","eventsSortBy","searchConfig","event","options","data","rest","properties","useMemo","arr","id","enabled","push","key","label","description","useSubstringMatch","externalId","source","metadata","type","subtype","mappedData","map","matchingLabels"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/events/internal/queries/useEventsSearchResultWithLabelsQuery.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { UseInfiniteQueryOptions } from '@tanstack/react-query';\n\nimport {\n  EventConfigType,\n  InternalEventsFilters,\n  useDeepMemo,\n} from '@data-exploration-lib/core';\n\nimport { TableSortBy } from '../../../types';\nimport { getSearchConfig } from '../../../utils';\nimport {\n  extractMatchingLabels,\n  MatchingLabelPropertyType,\n} from '../../../utils/extractMatchingLabels';\n\nimport { useEventsSearchResultQuery } from './useEventsSearchResultQuery';\n\nexport const useEventsSearchResultWithLabelsQuery = (\n  {\n    query,\n    eventsFilters = {},\n    eventsSortBy,\n  }: {\n    query?: string;\n    eventsFilters: InternalEventsFilters;\n    eventsSortBy?: TableSortBy[];\n  },\n  searchConfig: EventConfigType = getSearchConfig().event,\n  options?: UseInfiniteQueryOptions\n) => {\n  const { data, ...rest } = useEventsSearchResultQuery(\n    { query, eventsFilters, eventsSortBy },\n    searchConfig,\n    options\n  );\n\n  const properties = React.useMemo(() => {\n    const arr: MatchingLabelPropertyType[] = [];\n\n    if (searchConfig.id.enabled) {\n      arr.push({\n        key: 'id',\n        label: 'ID',\n      });\n    }\n\n    if (searchConfig.description.enabled) {\n      arr.push({\n        key: 'description',\n        useSubstringMatch: true,\n      });\n    }\n\n    if (searchConfig.externalId.enabled) {\n      arr.push({\n        key: 'externalId',\n        label: 'External ID',\n      });\n    }\n\n    if (searchConfig.source.enabled) {\n      arr.push('source');\n    }\n    if (searchConfig.metadata.enabled) {\n      arr.push('metadata');\n    }\n    if (searchConfig.type.enabled) {\n      arr.push('type');\n    }\n\n    if (searchConfig.subtype.enabled) {\n      arr.push('subtype');\n    }\n\n    return arr;\n  }, [searchConfig]);\n\n  const mappedData = useDeepMemo(() => {\n    if (data && query) {\n      return data.map((event) => {\n        return {\n          ...event,\n          matchingLabels: extractMatchingLabels(event, query, properties),\n        };\n      });\n    }\n\n    return data;\n  }, [data, query]);\n\n  return { data: mappedData, ...rest };\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B,SAGEC,WAAW,QACN,4BAA4B;AAGnC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SACEC,qBAAqB,QAEhB,sCAAsC;AAE7C,SAASC,0BAA0B,QAAQ,8BAA8B;AAEzE,OAAO,MAAMC,oCAAoC,GAAG,CAClD;EACEC,KAAK;EACLC,aAAa,GAAG,CAAC,CAAC;EAClBC;AAKF,CAAC,EACDC,YAA6B,GAAGP,eAAe,EAAE,CAACQ,KAAK,EACvDC,OAAiC,KAC9B;EAAA;EACH,MAAM;IAAEC,IAAI;IAAE,GAAGC;EAAK,CAAC,GAAGT,0BAA0B,CAClD;IAAEE,KAAK;IAAEC,aAAa;IAAEC;EAAa,CAAC,EACtCC,YAAY,EACZE,OAAO,CACR;EAED,MAAMG,UAAU,GAAGd,KAAK,CAACe,OAAO,CAAC,MAAM;IACrC,MAAMC,GAAgC,GAAG,EAAE;IAE3C,IAAIP,YAAY,CAACQ,EAAE,CAACC,OAAO,EAAE;MAC3BF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,IAAI;QACTC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IAEA,IAAIZ,YAAY,CAACa,WAAW,CAACJ,OAAO,EAAE;MACpCF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,aAAa;QAClBG,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ;IAEA,IAAId,YAAY,CAACe,UAAU,CAACN,OAAO,EAAE;MACnCF,GAAG,CAACG,IAAI,CAAC;QACPC,GAAG,EAAE,YAAY;QACjBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IAEA,IAAIZ,YAAY,CAACgB,MAAM,CAACP,OAAO,EAAE;MAC/BF,GAAG,CAACG,IAAI,CAAC,QAAQ,CAAC;IACpB;IACA,IAAIV,YAAY,CAACiB,QAAQ,CAACR,OAAO,EAAE;MACjCF,GAAG,CAACG,IAAI,CAAC,UAAU,CAAC;IACtB;IACA,IAAIV,YAAY,CAACkB,IAAI,CAACT,OAAO,EAAE;MAC7BF,GAAG,CAACG,IAAI,CAAC,MAAM,CAAC;IAClB;IAEA,IAAIV,YAAY,CAACmB,OAAO,CAACV,OAAO,EAAE;MAChCF,GAAG,CAACG,IAAI,CAAC,SAAS,CAAC;IACrB;IAEA,OAAOH,GAAG;EACZ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,MAAMoB,UAAU,GAAG5B,WAAW,CAAC,MAAM;IACnC,IAAIW,IAAI,IAAIN,KAAK,EAAE;MACjB,OAAOM,IAAI,CAACkB,GAAG,CAAEpB,KAAK,IAAK;QACzB,OAAO;UACL,GAAGA,KAAK;UACRqB,cAAc,EAAE5B,qBAAqB,CAACO,KAAK,EAAEJ,KAAK,EAAEQ,UAAU;QAChE,CAAC;MACH,CAAC,CAAC;IACJ;IAEA,OAAOF,IAAI;EACb,CAAC,EAAE,CAACA,IAAI,EAAEN,KAAK,CAAC,CAAC;EAEjB,OAAO;IAAEM,IAAI,EAAEiB,UAAU;IAAE,GAAGhB;EAAK,CAAC;AACtC,CAAC;AAAC,GA1EWR,oCAAoC;EAAA,QAarBD,0BAA0B,EA+CjCH,WAAW;AAAA"},"metadata":{},"sourceType":"module"}