{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { getEventsByIds } from '../network';\nexport const useEventsByIdsQuery = (ids, options) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.eventsByIds(ids), () => getEventsByIds(sdk, ids || []), options);\n};\n_s(useEventsByIdsQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","useSDK","queryKeys","getEventsByIds","useEventsByIdsQuery","ids","options","sdk","eventsByIds"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/events/service/queries/useEventsByIdsQuery.ts"],"sourcesContent":["import { UseQueryOptions, useQuery } from '@tanstack/react-query';\n\nimport { IdEither } from '@cognite/sdk';\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { queryKeys } from '../../../queryKeys';\nimport { InternalEventsData } from '../../internal';\nimport { getEventsByIds } from '../network';\n\nexport const useEventsByIdsQuery = <T = InternalEventsData>(\n  ids?: IdEither[],\n  options?: Omit<UseQueryOptions<InternalEventsData[], any, T[]>, 'queryKey'>\n) => {\n  const sdk = useSDK();\n  return useQuery(\n    queryKeys.eventsByIds(ids),\n    () => getEventsByIds(sdk, ids || []),\n    options\n  );\n};\n"],"mappings":";AAAA,SAA0BA,QAAQ,QAAQ,uBAAuB;AAGjE,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,cAAc,QAAQ,YAAY;AAE3C,OAAO,MAAMC,mBAAmB,GAAG,CACjCC,GAAgB,EAChBC,OAA2E,KACxE;EAAA;EACH,MAAMC,GAAG,GAAGN,MAAM,EAAE;EACpB,OAAOD,QAAQ,CACbE,SAAS,CAACM,WAAW,CAACH,GAAG,CAAC,EAC1B,MAAMF,cAAc,CAACI,GAAG,EAAEF,GAAG,IAAI,EAAE,CAAC,EACpCC,OAAO,CACR;AACH,CAAC;AAAC,GAVWF,mBAAmB;EAAA,QAIlBH,MAAM,EACXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}