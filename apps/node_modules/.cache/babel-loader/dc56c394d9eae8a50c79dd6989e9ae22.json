{"ast":null,"code":"import { getFormattedDateWithTimezone } from '../../../utils/getFormattedDateWithTimezone';\nimport { getTooltipNumericValue } from '../../../utils/getTooltipNumericValue';\nimport { getTooltipRawDatapointValue } from '../../../utils/getTooltipRawDatapointValue';\nexport const formatTooltipContent = ({\n  customData\n}, unit) => {\n  const datapoint = customData;\n  if ('value' in datapoint) {\n    return [{\n      label: 'Value',\n      value: getTooltipRawDatapointValue(datapoint.value, unit)\n    }];\n  }\n  const {\n    average,\n    timestamp\n  } = datapoint;\n  return [{\n    label: 'Average',\n    value: getTooltipNumericValue(average, unit)\n  }, {\n    label: 'Date',\n    value: getFormattedDateWithTimezone(timestamp)\n  }];\n};","map":{"version":3,"names":["getFormattedDateWithTimezone","getTooltipNumericValue","getTooltipRawDatapointValue","formatTooltipContent","customData","unit","datapoint","label","value","average","timestamp"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/components/TimeseriesChartSmall/helpers/formatTooltipContent.ts"],"sourcesContent":["import { TooltipRendererProps } from '../../../../LineChart';\nimport { TimeseriesDatapoint } from '../../../domain/service/types';\nimport { getFormattedDateWithTimezone } from '../../../utils/getFormattedDateWithTimezone';\nimport { getTooltipNumericValue } from '../../../utils/getTooltipNumericValue';\nimport { getTooltipRawDatapointValue } from '../../../utils/getTooltipRawDatapointValue';\n\nexport const formatTooltipContent = (\n  { customData }: TooltipRendererProps,\n  unit?: string\n) => {\n  const datapoint = customData as TimeseriesDatapoint;\n\n  if ('value' in datapoint) {\n    return [\n      {\n        label: 'Value',\n        value: getTooltipRawDatapointValue(datapoint.value, unit),\n      },\n    ];\n  }\n\n  const { average, timestamp } = datapoint;\n\n  return [\n    { label: 'Average', value: getTooltipNumericValue(average, unit) },\n    { label: 'Date', value: getFormattedDateWithTimezone(timestamp) },\n  ];\n};\n"],"mappings":"AAEA,SAASA,4BAA4B,QAAQ,6CAA6C;AAC1F,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,2BAA2B,QAAQ,4CAA4C;AAExF,OAAO,MAAMC,oBAAoB,GAAG,CAClC;EAAEC;AAAiC,CAAC,EACpCC,IAAa,KACV;EACH,MAAMC,SAAS,GAAGF,UAAiC;EAEnD,IAAI,OAAO,IAAIE,SAAS,EAAE;IACxB,OAAO,CACL;MACEC,KAAK,EAAE,OAAO;MACdC,KAAK,EAAEN,2BAA2B,CAACI,SAAS,CAACE,KAAK,EAAEH,IAAI;IAC1D,CAAC,CACF;EACH;EAEA,MAAM;IAAEI,OAAO;IAAEC;EAAU,CAAC,GAAGJ,SAAS;EAExC,OAAO,CACL;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAEP,sBAAsB,CAACQ,OAAO,EAAEJ,IAAI;EAAE,CAAC,EAClE;IAAEE,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAER,4BAA4B,CAACU,SAAS;EAAE,CAAC,CAClE;AACH,CAAC"},"metadata":{},"sourceType":"module"}