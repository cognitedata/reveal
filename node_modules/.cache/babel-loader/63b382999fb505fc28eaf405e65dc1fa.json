{"ast":null,"code":"import chunk from 'lodash/chunk';\nimport { MAX_RESULT_LIMIT_ASSET } from '../../../constants';\nexport const getEventsByIds = (sdk, ids) => {\n  const chunkedEventIds = chunk(ids, MAX_RESULT_LIMIT_ASSET);\n  const chunkedPromises = chunkedEventIds.map(eventIds => sdk.events.retrieve(eventIds, {\n    ignoreUnknownIds: true\n  }));\n  return Promise.all(chunkedPromises).then(result => result.flat());\n};","map":{"version":3,"names":["chunk","MAX_RESULT_LIMIT_ASSET","getEventsByIds","sdk","ids","chunkedEventIds","chunkedPromises","map","eventIds","events","retrieve","ignoreUnknownIds","Promise","all","then","result","flat"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/events/service/network/getEventsByIds.ts"],"sourcesContent":["import chunk from 'lodash/chunk';\n\nimport { CogniteClient, IdEither } from '@cognite/sdk';\n\nimport { MAX_RESULT_LIMIT_ASSET } from '../../../constants';\n\nexport const getEventsByIds = (sdk: CogniteClient, ids: IdEither[]) => {\n  const chunkedEventIds = chunk(ids, MAX_RESULT_LIMIT_ASSET);\n  const chunkedPromises = chunkedEventIds.map((eventIds) =>\n    sdk.events.retrieve(eventIds, { ignoreUnknownIds: true })\n  );\n  return Promise.all(chunkedPromises).then((result) => result.flat());\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAIhC,SAASC,sBAAsB,QAAQ,oBAAoB;AAE3D,OAAO,MAAMC,cAAc,GAAG,CAACC,GAAkB,EAAEC,GAAe,KAAK;EACrE,MAAMC,eAAe,GAAGL,KAAK,CAACI,GAAG,EAAEH,sBAAsB,CAAC;EAC1D,MAAMK,eAAe,GAAGD,eAAe,CAACE,GAAG,CAAEC,QAAQ,IACnDL,GAAG,CAACM,MAAM,CAACC,QAAQ,CAACF,QAAQ,EAAE;IAAEG,gBAAgB,EAAE;EAAK,CAAC,CAAC,CAC1D;EACD,OAAOC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC,CAACQ,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,EAAE,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module"}