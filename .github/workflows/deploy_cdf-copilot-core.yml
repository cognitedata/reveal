name: Release & Deploy Copilot Core
on:
  push:
    branches:
      - master
    paths:
      - 'libs/copilot-core/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Set NPMKEY variable
        run: |
          export NPMKEY=$(echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_READONLY_TOKEN }}")
          echo "::set-output name=NPMKEY::$NPMKEY"
        id: npm_auth_key

      - name: Create .npmrc
        run: echo '${{ steps.npm_auth_key.outputs.NPMKEY }}' > .npmrc

      - name: Install Dependency & Build
        run: |
          yarn install --frozen-lockfile
          rm .npmrc

      - name: Save missing keys to locize
        run: yarn i18n-push copilot-core
        env:
          LOCIZE_API_KEY: ${{ secrets.LOCIZE_API_KEY }}

      - name: Remove deleted keys from locize
        run: yarn i18n-remove-deleted copilot-core
        env:
          LOCIZE_API_KEY: ${{ secrets.LOCIZE_API_KEY }}

      - name: Build
        run: yarn build production copilot-core

      - name: Deploy Copilot Core to npm ðŸš€
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          tag: latest
          access: public
          check-version: true
          package: ./dist/libs/@fusion/copilot-core/package.json

      - name: Create Release
        if: steps.publish.outputs.type != 'none'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: copilot-core-${{ steps.publish.outputs.version }}
          title: copilot-core Release ${{ steps.publish.outputs.version }}
          files: |
            ./dist/libs/@fusion/copilot-core/*.js*
