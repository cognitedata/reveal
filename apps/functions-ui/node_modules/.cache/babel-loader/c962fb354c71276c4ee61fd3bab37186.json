{"ast":null,"code":"import get from 'lodash/get';\nexport const mapAggregateDataToSourceData = (aggregateData, aggregator) => {\n  const sources = new Set();\n  aggregateData.forEach(el => {\n    if (aggregator in el) {\n      sources.add(get(el, aggregator));\n    }\n  });\n  return Array.from(sources, source => ({\n    value: source,\n    label: String(source)\n  }));\n};","map":{"version":3,"names":["get","mapAggregateDataToSourceData","aggregateData","aggregator","sources","Set","forEach","el","add","Array","from","source","value","label","String"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/filters/internal/transformers/mapAggregateDataToSourceData.ts"],"sourcesContent":["import get from 'lodash/get';\n\nexport const mapAggregateDataToSourceData = <T extends object>(\n  aggregateData: T[],\n  aggregator: string\n) => {\n  const sources: Set<string> = new Set();\n\n  aggregateData.forEach((el) => {\n    if (aggregator in el) {\n      sources.add(get(el, aggregator));\n    }\n  });\n\n  return Array.from(sources, (source) => ({\n    value: source,\n    label: String(source),\n  }));\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,YAAY;AAE5B,OAAO,MAAMC,4BAA4B,GAAG,CAC1CC,aAAkB,EAClBC,UAAkB,KACf;EACH,MAAMC,OAAoB,GAAG,IAAIC,GAAG,EAAE;EAEtCH,aAAa,CAACI,OAAO,CAAEC,EAAE,IAAK;IAC5B,IAAIJ,UAAU,IAAII,EAAE,EAAE;MACpBH,OAAO,CAACI,GAAG,CAACR,GAAG,CAACO,EAAE,EAAEJ,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,CAAC;EAEF,OAAOM,KAAK,CAACC,IAAI,CAACN,OAAO,EAAGO,MAAM,KAAM;IACtCC,KAAK,EAAED,MAAM;IACbE,KAAK,EAAEC,MAAM,CAACH,MAAM;EACtB,CAAC,CAAC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}