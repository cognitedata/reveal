{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { transformNewFilterToOldFilter } from '../../../transformers';\nimport { getSequencesMetadataKeysAggregate } from '../network';\nexport const useSequencesMetadataKeysAggregateQuery = ({\n  query,\n  advancedFilter,\n  filter\n} = {}) => {\n  _s();\n  const sdk = useSDK();\n  return useQuery(queryKeys.sequencesMetadata(query, advancedFilter, filter), () => {\n    return getSequencesMetadataKeysAggregate(sdk, {\n      advancedFilter,\n      filter: transformNewFilterToOldFilter(filter),\n      aggregateFilter: query ? {\n        prefix: {\n          value: query\n        }\n      } : undefined\n    });\n  }, {\n    keepPreviousData: true\n  });\n};\n_s(useSequencesMetadataKeysAggregateQuery, \"PmNYcoJFBmvG9WfZuMOcBXEzd1A=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useQuery","useSDK","queryKeys","transformNewFilterToOldFilter","getSequencesMetadataKeysAggregate","useSequencesMetadataKeysAggregateQuery","query","advancedFilter","filter","sdk","sequencesMetadata","aggregateFilter","prefix","value","undefined","keepPreviousData"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/sequence/service/queries/useSequenceMetadataKeysAggregateQuery.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\n\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport { InternalSequenceFilters } from '@data-exploration-lib/core';\n\nimport { AdvancedFilter } from '../../../builders';\nimport { queryKeys } from '../../../queryKeys';\nimport { transformNewFilterToOldFilter } from '../../../transformers';\nimport { SequenceProperties } from '../../internal';\nimport { getSequencesMetadataKeysAggregate } from '../network';\n\ninterface Props {\n  query?: string;\n  advancedFilter?: AdvancedFilter<SequenceProperties>;\n  filter?: InternalSequenceFilters;\n}\n\nexport const useSequencesMetadataKeysAggregateQuery = ({\n  query,\n  advancedFilter,\n  filter,\n}: Props = {}) => {\n  const sdk = useSDK();\n\n  return useQuery(\n    queryKeys.sequencesMetadata(query, advancedFilter, filter),\n    () => {\n      return getSequencesMetadataKeysAggregate(sdk, {\n        advancedFilter,\n        filter: transformNewFilterToOldFilter(filter),\n        aggregateFilter: query ? { prefix: { value: query } } : undefined,\n      });\n    },\n    {\n      keepPreviousData: true,\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAEhD,SAASC,MAAM,QAAQ,uBAAuB;AAK9C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,6BAA6B,QAAQ,uBAAuB;AAErE,SAASC,iCAAiC,QAAQ,YAAY;AAQ9D,OAAO,MAAMC,sCAAsC,GAAG,CAAC;EACrDC,KAAK;EACLC,cAAc;EACdC;AACK,CAAC,GAAG,CAAC,CAAC,KAAK;EAAA;EAChB,MAAMC,GAAG,GAAGR,MAAM,EAAE;EAEpB,OAAOD,QAAQ,CACbE,SAAS,CAACQ,iBAAiB,CAACJ,KAAK,EAAEC,cAAc,EAAEC,MAAM,CAAC,EAC1D,MAAM;IACJ,OAAOJ,iCAAiC,CAACK,GAAG,EAAE;MAC5CF,cAAc;MACdC,MAAM,EAAEL,6BAA6B,CAACK,MAAM,CAAC;MAC7CG,eAAe,EAAEL,KAAK,GAAG;QAAEM,MAAM,EAAE;UAAEC,KAAK,EAAEP;QAAM;MAAE,CAAC,GAAGQ;IAC1D,CAAC,CAAC;EACJ,CAAC,EACD;IACEC,gBAAgB,EAAE;EACpB,CAAC,CACF;AACH,CAAC;AAAC,GApBWV,sCAAsC;EAAA,QAKrCJ,MAAM,EAEXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}