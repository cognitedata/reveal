{"ast":null,"code":"var _jsxFileName = \"/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/Legend/Legend.tsx\";\nimport * as React from 'react';\nimport { DEFAULT_LINE_COLOR } from '../../constants';\nimport { getDataAsArray } from '../../utils/getDataAsArray';\nimport { getLineName } from '../../utils/getLineName';\nimport { LegendWrapper } from './elements';\nimport { LegendItem } from './LegendItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Legend = /*#__PURE__*/React.memo(_c = ({\n  data,\n  showLegend,\n  legendPlacement\n}) => {\n  if (!showLegend) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(LegendWrapper, {\n    style: {\n      justifyContent: legendPlacement\n    },\n    children: getDataAsArray(data).map(({\n      color = DEFAULT_LINE_COLOR,\n      name\n    }, index) => {\n      const lineName = getLineName(name, index);\n      return /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: color,\n        label: lineName\n      }, lineName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Legend;\nvar _c, _c2;\n$RefreshReg$(_c, \"Legend$React.memo\");\n$RefreshReg$(_c2, \"Legend\");","map":{"version":3,"names":["React","DEFAULT_LINE_COLOR","getDataAsArray","getLineName","LegendWrapper","LegendItem","Legend","memo","data","showLegend","legendPlacement","justifyContent","map","color","name","index","lineName"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/components/Legend/Legend.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { DEFAULT_LINE_COLOR } from '../../constants';\nimport { Data, HorizontalPlacement } from '../../types';\nimport { getDataAsArray } from '../../utils/getDataAsArray';\nimport { getLineName } from '../../utils/getLineName';\n\nimport { LegendWrapper } from './elements';\nimport { LegendItem } from './LegendItem';\n\nexport interface LegendProps {\n  data: Data | Data[];\n  showLegend: boolean;\n  legendPlacement?: HorizontalPlacement;\n}\n\nexport const Legend: React.FC<LegendProps> = React.memo(\n  ({ data, showLegend, legendPlacement }) => {\n    if (!showLegend) {\n      return null;\n    }\n\n    return (\n      <LegendWrapper style={{ justifyContent: legendPlacement }}>\n        {getDataAsArray(data).map(\n          ({ color = DEFAULT_LINE_COLOR, name }, index) => {\n            const lineName = getLineName(name, index);\n            return <LegendItem key={lineName} color={color} label={lineName} />;\n          }\n        )}\n      </LegendWrapper>\n    );\n  }\n);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,UAAU,QAAQ,cAAc;AAAC;AAQ1C,OAAO,MAAMC,MAA6B,gBAAGN,KAAK,CAACO,IAAI,MACrD,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EACzC,IAAI,CAACD,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,oBACE,QAAC,aAAa;IAAC,KAAK,EAAE;MAAEE,cAAc,EAAED;IAAgB,CAAE;IAAA,UACvDR,cAAc,CAACM,IAAI,CAAC,CAACI,GAAG,CACvB,CAAC;MAAEC,KAAK,GAAGZ,kBAAkB;MAAEa;IAAK,CAAC,EAAEC,KAAK,KAAK;MAC/C,MAAMC,QAAQ,GAAGb,WAAW,CAACW,IAAI,EAAEC,KAAK,CAAC;MACzC,oBAAO,QAAC,UAAU;QAAgB,KAAK,EAAEF,KAAM;QAAC,KAAK,EAAEG;MAAS,GAAxCA,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAmC;IACrE,CAAC;EACF;IAAA;IAAA;IAAA;EAAA,QACa;AAEpB,CAAC,CACF;AAAC,MAjBWV,MAA6B;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}