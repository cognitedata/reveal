{"ast":null,"code":"import chunk from 'lodash/chunk';\nimport { MAX_RESULT_LIMIT_DATAPOINTS } from '../../../constants';\nexport const getTimeseriesLatestDatapoint = (sdk, items) => {\n  const chunkTimeseriesIds = chunk(items, MAX_RESULT_LIMIT_DATAPOINTS);\n  const chunkedPromises = chunkTimeseriesIds.map(timeseriesIds => sdk.datapoints.retrieveLatest(timeseriesIds));\n  return Promise.all(chunkedPromises).then(result => result.flat());\n};","map":{"version":3,"names":["chunk","MAX_RESULT_LIMIT_DATAPOINTS","getTimeseriesLatestDatapoint","sdk","items","chunkTimeseriesIds","chunkedPromises","map","timeseriesIds","datapoints","retrieveLatest","Promise","all","then","result","flat"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/service/network/getTimeseriesLatestDatapoint.ts"],"sourcesContent":["import chunk from 'lodash/chunk';\n\nimport { CogniteClient, LatestDataBeforeRequest } from '@cognite/sdk/dist/src';\n\nimport { MAX_RESULT_LIMIT_DATAPOINTS } from '../../../constants';\n\nexport const getTimeseriesLatestDatapoint = (\n  sdk: CogniteClient,\n  items: LatestDataBeforeRequest[]\n) => {\n  const chunkTimeseriesIds = chunk(items, MAX_RESULT_LIMIT_DATAPOINTS);\n\n  const chunkedPromises = chunkTimeseriesIds.map((timeseriesIds) =>\n    sdk.datapoints.retrieveLatest(timeseriesIds)\n  );\n  return Promise.all(chunkedPromises).then((result) => result.flat());\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAIhC,SAASC,2BAA2B,QAAQ,oBAAoB;AAEhE,OAAO,MAAMC,4BAA4B,GAAG,CAC1CC,GAAkB,EAClBC,KAAgC,KAC7B;EACH,MAAMC,kBAAkB,GAAGL,KAAK,CAACI,KAAK,EAAEH,2BAA2B,CAAC;EAEpE,MAAMK,eAAe,GAAGD,kBAAkB,CAACE,GAAG,CAAEC,aAAa,IAC3DL,GAAG,CAACM,UAAU,CAACC,cAAc,CAACF,aAAa,CAAC,CAC7C;EACD,OAAOG,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC,CAACO,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,EAAE,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module"}