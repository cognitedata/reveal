name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - '**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci-viewer:
    name: Viewer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v3

    - name: Install NPM dependencies
      working-directory: viewer
      run: yarn install --immutable

    - name: Lint
      working-directory: viewer
      continue-on-error: false
      run: yarn run lint

    - name: Setup tools for coverage tests
      working-directory: viewer
      run: |
        sudo apt-get update
        sudo apt-get install xvfb mesa-utils libgl1-mesa-dri libglapi-mesa libosmesa6
        echo "DISPLAY=:99.0" >> $GITHUB_ENV

    - name: Run coverage tests
      working-directory: viewer
      run: |
        xvfb-run yarn run coverage

    - name: Build prod version
      working-directory: viewer
      run: yarn run build:prod

    - name: Publish to codecov
      uses: codecov/codecov-action@v2

  ci-examples:
    name: Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v3

    - name: Install NPM dependencies
      working-directory: viewer
      run: yarn install --immutable

    - name: Build development build
      working-directory: viewer
      run: yarn build

    - name: Install examples-dependencies
      working-directory: examples
      run: yarn --immutable

    - name: Build examples
      working-directory: examples
      run: |
        echo "NODE_OPTIONS=--max-old-space-size=8192" >> $GITHUB_ENV
        yarn build

    - name: Increase number of inotify watches
      run: 'echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p'

    - name: Visual regression tests
      id: visualtests
      working-directory: examples
      run: 'yarn ci:e2e'
      continue-on-error: true

    - name: Check for failed visual test diffs
      if: (always() && steps.visualtests.outcome == 'failure')
      working-directory: examples
      run: |
        yarn
        yarn test:ghprcomment
      env:
        ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload image diffs for failed visual tests
      if: (always() && steps.visualtests.outcome == 'failure')
      uses: actions/upload-artifact@v3
      with:
        name: image-diffs-${{ github.sha }}
        path: examples/src/visual_tests/__image_snapshots__/__diff_output__/*

    - name: Report failed visual tests
      if: (always() && steps.visualtests.outcome == 'failure')
      run: |
        echo There are failed visual tests, please inspect test results.
        exit 1

  # runs only when there are changes in parser-worker/
  # we use it here because github haven't figured out conditionally required checks
  # see https://github.community/t/feature-request-conditional-required-checks/16761/13
  ci-parser-worker:
    name: Parser worker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v3
        with:
          PREFIX_FILTER: parser-worker

      - name: Setup Rust
        if: env.GIT_DIFF
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Cache cargo registry
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        if: env.GIT_DIFF
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo fmt
        if: env.GIT_DIFF
        run: |
          cargo version
          # fail on warnings, test all features
          cargo fmt -- --check

      - name: cargo clippy
        if: env.GIT_DIFF
        run: |
          cargo version
          # NOTE: as of 2020-03-17, Rust 1.42, mem_replace_with_default is triggered by a macro in wasm_bindgen
          # and needs to be disabled
          cargo clippy --all-targets --all-features -- -D warnings -A clippy::mem_replace_with_default

      - name: Run tests
        if: env.GIT_DIFF
        run: |
          cargo version
          cargo test --all --verbose

      - name: Install wasm-pack
        if: env.GIT_DIFF
        uses: jetli/wasm-pack-action@v0.3.0

      - name: Install NPM dependencies
        if: env.GIT_DIFF
        working-directory: parser-worker
        run: yarn

      - name: Build parser-worker
        if: env.GIT_DIFF
        working-directory: parser-worker
        run: yarn build:prod
