{"ast":null,"code":"import { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useTimeseriesMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToTimeseriesAdvancedFilters } from '../transformers';\nexport const useTimeseriesMetadataValuesOptionsQuery = ({\n  filter,\n  searchQuery\n}) => {\n  var _s = $RefreshSig$();\n  return _s((metadataKeys, query, options) => {\n    _s();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      data = [],\n      isLoading\n    } = useTimeseriesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options\n    });\n    const omittedFilter = omit(filter, 'metadata');\n    const {\n      data: dynamicData = []\n    } =\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useTimeseriesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options,\n      advancedFilter: mapFiltersToTimeseriesAdvancedFilters(omittedFilter, searchQuery),\n      filter: getAssetSubtreeIdFilter(omittedFilter)\n    });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n    return {\n      options: transformedOptions,\n      isLoading\n    };\n  }, \"ayfAtrPvypXZrXqvHsZ6urhQdKw=\", false, function () {\n    return [useTimeseriesMetadataValuesAggregateQuery, useTimeseriesMetadataValuesAggregateQuery];\n  });\n};","map":{"version":3,"names":["useMemo","omit","getAssetSubtreeIdFilter","mergeDynamicFilterOptions","useTimeseriesMetadataValuesAggregateQuery","mapFiltersToTimeseriesAdvancedFilters","useTimeseriesMetadataValuesOptionsQuery","filter","searchQuery","metadataKeys","query","options","data","isLoading","metadataKey","omittedFilter","dynamicData","advancedFilter","transformedOptions"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/internal/queries/useTimeseriesMetadataValuesOptionsQuery.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { UseQueryOptions } from '@tanstack/react-query';\nimport omit from 'lodash/omit';\n\nimport { InternalTimeseriesFilters } from '@data-exploration-lib/core';\n\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useTimeseriesMetadataValuesAggregateQuery } from '../../service';\nimport { mapFiltersToTimeseriesAdvancedFilters } from '../transformers';\n\ninterface Props {\n  filter?: InternalTimeseriesFilters;\n  searchQuery?: string;\n}\n\nexport const useTimeseriesMetadataValuesOptionsQuery =\n  ({ filter, searchQuery }: Props) =>\n  (\n    metadataKeys?: string | null,\n    query?: string,\n    options?: UseQueryOptions<any>\n  ) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data = [], isLoading } = useTimeseriesMetadataValuesAggregateQuery({\n      metadataKey: metadataKeys,\n      query,\n      options,\n    });\n\n    const omittedFilter = omit(filter, 'metadata');\n\n    const { data: dynamicData = [] } =\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useTimeseriesMetadataValuesAggregateQuery({\n        metadataKey: metadataKeys,\n        query,\n        options,\n        advancedFilter: mapFiltersToTimeseriesAdvancedFilters(\n          omittedFilter,\n          searchQuery\n        ),\n        filter: getAssetSubtreeIdFilter(omittedFilter),\n      });\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const transformedOptions = useMemo(() => {\n      return mergeDynamicFilterOptions(data, dynamicData);\n    }, [data, dynamicData]);\n\n    return { options: transformedOptions, isLoading };\n  };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,OAAOC,IAAI,MAAM,aAAa;AAI9B,SAASC,uBAAuB,QAAQ,gBAAgB;AACxD,SAASC,yBAAyB,QAAQ,0CAA0C;AACpF,SAASC,yCAAyC,QAAQ,eAAe;AACzE,SAASC,qCAAqC,QAAQ,iBAAiB;AAOvE,OAAO,MAAMC,uCAAuC,GAClD,CAAC;EAAEC,MAAM;EAAEC;AAAmB,CAAC;EAAA;EAAA,UAC/B,CACEC,YAA4B,EAC5BC,KAAc,EACdC,OAA8B,KAC3B;IAAA;IACH;IACA,MAAM;MAAEC,IAAI,GAAG,EAAE;MAAEC;IAAU,CAAC,GAAGT,yCAAyC,CAAC;MACzEU,WAAW,EAAEL,YAAY;MACzBC,KAAK;MACLC;IACF,CAAC,CAAC;IAEF,MAAMI,aAAa,GAAGd,IAAI,CAACM,MAAM,EAAE,UAAU,CAAC;IAE9C,MAAM;MAAEK,IAAI,EAAEI,WAAW,GAAG;IAAG,CAAC;IAC9B;IACAZ,yCAAyC,CAAC;MACxCU,WAAW,EAAEL,YAAY;MACzBC,KAAK;MACLC,OAAO;MACPM,cAAc,EAAEZ,qCAAqC,CACnDU,aAAa,EACbP,WAAW,CACZ;MACDD,MAAM,EAAEL,uBAAuB,CAACa,aAAa;IAC/C,CAAC,CAAC;;IAEJ;IACA,MAAMG,kBAAkB,GAAGlB,OAAO,CAAC,MAAM;MACvC,OAAOG,yBAAyB,CAACS,IAAI,EAAEI,WAAW,CAAC;IACrD,CAAC,EAAE,CAACJ,IAAI,EAAEI,WAAW,CAAC,CAAC;IAEvB,OAAO;MAAEL,OAAO,EAAEO,kBAAkB;MAAEL;IAAU,CAAC;EACnD,CAAC;IAAA,QA3BkCT,yCAAyC,EAUxEA,yCAAyC;EAAA;AAAA,CAiB5C"},"metadata":{},"sourceType":"module"}