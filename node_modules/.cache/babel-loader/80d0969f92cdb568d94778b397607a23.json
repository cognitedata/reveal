{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport omit from 'lodash/omit';\nimport { mapFiltersToAssetsAdvancedFilters } from '..';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useAssetsMetadataKeysAggregateQuery } from '../../service';\nexport const useAssetsMetadataFilterOptions = ({\n  query,\n  searchQuery,\n  filter\n}) => {\n  _s();\n  const {\n    data = [],\n    isLoading,\n    isError\n  } = useAssetsMetadataKeysAggregateQuery({\n    query\n  });\n  const omittedFilter = omit(filter, 'metadata');\n  const {\n    data: dynamicData = []\n  } = useAssetsMetadataKeysAggregateQuery({\n    query,\n    advancedFilter: mapFiltersToAssetsAdvancedFilters(omittedFilter, searchQuery),\n    filter: getAssetSubtreeIdFilter(omittedFilter)\n  });\n  const options = useMemo(() => {\n    return mergeDynamicFilterOptions(data, dynamicData);\n  }, [data, dynamicData]);\n  return {\n    options,\n    isLoading,\n    isError\n  };\n};\n_s(useAssetsMetadataFilterOptions, \"M8VM+HF1/cktqC9byOAKfYyvxwA=\", false, function () {\n  return [useAssetsMetadataKeysAggregateQuery, useAssetsMetadataKeysAggregateQuery];\n});","map":{"version":3,"names":["useMemo","omit","mapFiltersToAssetsAdvancedFilters","getAssetSubtreeIdFilter","mergeDynamicFilterOptions","useAssetsMetadataKeysAggregateQuery","useAssetsMetadataFilterOptions","query","searchQuery","filter","data","isLoading","isError","omittedFilter","dynamicData","advancedFilter","options"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/assets/internal/queries/useAssetsMetadataFilterOptions.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport omit from 'lodash/omit';\n\nimport { InternalAssetFilters } from '@data-exploration-lib/core';\n\nimport { mapFiltersToAssetsAdvancedFilters } from '..';\nimport { getAssetSubtreeIdFilter } from '../../../utils';\nimport { mergeDynamicFilterOptions } from '../../../utils/mergeDynamicFilterOptions';\nimport { useAssetsMetadataKeysAggregateQuery } from '../../service';\n\ninterface Props {\n  query?: string;\n  searchQuery?: string;\n  filter?: InternalAssetFilters;\n}\n\nexport const useAssetsMetadataFilterOptions = ({\n  query,\n  searchQuery,\n  filter,\n}: Props) => {\n  const {\n    data = [],\n    isLoading,\n    isError,\n  } = useAssetsMetadataKeysAggregateQuery({\n    query,\n  });\n\n  const omittedFilter = omit(filter, 'metadata');\n\n  const { data: dynamicData = [] } = useAssetsMetadataKeysAggregateQuery({\n    query,\n    advancedFilter: mapFiltersToAssetsAdvancedFilters(\n      omittedFilter,\n      searchQuery\n    ),\n    filter: getAssetSubtreeIdFilter(omittedFilter),\n  });\n\n  const options = useMemo(() => {\n    return mergeDynamicFilterOptions(data, dynamicData);\n  }, [data, dynamicData]);\n\n  return {\n    options,\n    isLoading,\n    isError,\n  };\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAOC,IAAI,MAAM,aAAa;AAI9B,SAASC,iCAAiC,QAAQ,IAAI;AACtD,SAASC,uBAAuB,QAAQ,gBAAgB;AACxD,SAASC,yBAAyB,QAAQ,0CAA0C;AACpF,SAASC,mCAAmC,QAAQ,eAAe;AAQnE,OAAO,MAAMC,8BAA8B,GAAG,CAAC;EAC7CC,KAAK;EACLC,WAAW;EACXC;AACK,CAAC,KAAK;EAAA;EACX,MAAM;IACJC,IAAI,GAAG,EAAE;IACTC,SAAS;IACTC;EACF,CAAC,GAAGP,mCAAmC,CAAC;IACtCE;EACF,CAAC,CAAC;EAEF,MAAMM,aAAa,GAAGZ,IAAI,CAACQ,MAAM,EAAE,UAAU,CAAC;EAE9C,MAAM;IAAEC,IAAI,EAAEI,WAAW,GAAG;EAAG,CAAC,GAAGT,mCAAmC,CAAC;IACrEE,KAAK;IACLQ,cAAc,EAAEb,iCAAiC,CAC/CW,aAAa,EACbL,WAAW,CACZ;IACDC,MAAM,EAAEN,uBAAuB,CAACU,aAAa;EAC/C,CAAC,CAAC;EAEF,MAAMG,OAAO,GAAGhB,OAAO,CAAC,MAAM;IAC5B,OAAOI,yBAAyB,CAACM,IAAI,EAAEI,WAAW,CAAC;EACrD,CAAC,EAAE,CAACJ,IAAI,EAAEI,WAAW,CAAC,CAAC;EAEvB,OAAO;IACLE,OAAO;IACPL,SAAS;IACTC;EACF,CAAC;AACH,CAAC;AAAC,GAjCWN,8BAA8B;EAAA,QASrCD,mCAAmC,EAMJA,mCAAmC;AAAA"},"metadata":{},"sourceType":"module"}