{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useSDK } from '@cognite/sdk-provider';\nimport { queryKeys } from '../../../queryKeys';\nimport { mapFiltersToTimeseriesAdvancedFilters, mapInternalFilterToTimeseriesFilter } from '../../internal';\nimport { getTimeseriesAggregateCount } from '../network';\nexport const useTimeseriesAggregateCountQuery = ({\n  query,\n  timeseriesFilters\n}, searchConfig, options) => {\n  _s();\n  const sdk = useSDK();\n  const advancedFilter = useMemo(() => mapFiltersToTimeseriesAdvancedFilters(timeseriesFilters, query, searchConfig), [timeseriesFilters, query, searchConfig]);\n  const filter = useMemo(() => mapInternalFilterToTimeseriesFilter(timeseriesFilters), [timeseriesFilters]);\n  return useQuery(queryKeys.aggregateTimeseries([advancedFilter, filter, 'count']), () => {\n    return getTimeseriesAggregateCount(sdk, {\n      filter,\n      advancedFilter\n    });\n  }, {\n    ...options\n  });\n};\n_s(useTimeseriesAggregateCountQuery, \"Me2sqXUuD9pTdjsgsYzuPDRu8PQ=\", false, function () {\n  return [useSDK, useQuery];\n});","map":{"version":3,"names":["useMemo","useQuery","useSDK","queryKeys","mapFiltersToTimeseriesAdvancedFilters","mapInternalFilterToTimeseriesFilter","getTimeseriesAggregateCount","useTimeseriesAggregateCountQuery","query","timeseriesFilters","searchConfig","options","sdk","advancedFilter","filter","aggregateTimeseries"],"sources":["/Volumes/csvol/fusion/libs/data-exploration/domain-layer/src/timeseries/service/queries/useTimeseriesAggregateCountQuery.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { useQuery, UseQueryOptions } from '@tanstack/react-query';\n\nimport { useSDK } from '@cognite/sdk-provider';\n\nimport {\n  InternalTimeseriesFilters,\n  TimeseriesConfigType,\n} from '@data-exploration-lib/core';\n\nimport { queryKeys } from '../../../queryKeys';\nimport {\n  mapFiltersToTimeseriesAdvancedFilters,\n  mapInternalFilterToTimeseriesFilter,\n} from '../../internal';\nimport { getTimeseriesAggregateCount } from '../network';\n\nexport const useTimeseriesAggregateCountQuery = (\n  {\n    query,\n    timeseriesFilters,\n  }: {\n    query?: string;\n    timeseriesFilters: InternalTimeseriesFilters;\n  },\n  searchConfig?: TimeseriesConfigType,\n  options?: UseQueryOptions\n) => {\n  const sdk = useSDK();\n\n  const advancedFilter = useMemo(\n    () =>\n      mapFiltersToTimeseriesAdvancedFilters(\n        timeseriesFilters,\n        query,\n        searchConfig\n      ),\n    [timeseriesFilters, query, searchConfig]\n  );\n\n  const filter = useMemo(\n    () => mapInternalFilterToTimeseriesFilter(timeseriesFilters),\n    [timeseriesFilters]\n  );\n\n  return useQuery(\n    queryKeys.aggregateTimeseries([advancedFilter, filter, 'count']),\n    () => {\n      return getTimeseriesAggregateCount(sdk, {\n        filter,\n        advancedFilter,\n      });\n    },\n    {\n      ...(options as any),\n    }\n  );\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,QAAQ,QAAyB,uBAAuB;AAEjE,SAASC,MAAM,QAAQ,uBAAuB;AAO9C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SACEC,qCAAqC,EACrCC,mCAAmC,QAC9B,gBAAgB;AACvB,SAASC,2BAA2B,QAAQ,YAAY;AAExD,OAAO,MAAMC,gCAAgC,GAAG,CAC9C;EACEC,KAAK;EACLC;AAIF,CAAC,EACDC,YAAmC,EACnCC,OAAyB,KACtB;EAAA;EACH,MAAMC,GAAG,GAAGV,MAAM,EAAE;EAEpB,MAAMW,cAAc,GAAGb,OAAO,CAC5B,MACEI,qCAAqC,CACnCK,iBAAiB,EACjBD,KAAK,EACLE,YAAY,CACb,EACH,CAACD,iBAAiB,EAAED,KAAK,EAAEE,YAAY,CAAC,CACzC;EAED,MAAMI,MAAM,GAAGd,OAAO,CACpB,MAAMK,mCAAmC,CAACI,iBAAiB,CAAC,EAC5D,CAACA,iBAAiB,CAAC,CACpB;EAED,OAAOR,QAAQ,CACbE,SAAS,CAACY,mBAAmB,CAAC,CAACF,cAAc,EAAEC,MAAM,EAAE,OAAO,CAAC,CAAC,EAChE,MAAM;IACJ,OAAOR,2BAA2B,CAACM,GAAG,EAAE;MACtCE,MAAM;MACND;IACF,CAAC,CAAC;EACJ,CAAC,EACD;IACE,GAAIF;EACN,CAAC,CACF;AACH,CAAC;AAAC,GAxCWJ,gCAAgC;EAAA,QAW/BL,MAAM,EAiBXD,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}