{"ast":null,"code":"import sdk, { getFlow } from '@cognite/cdf-sdk-singleton';\nimport { getProject } from '@cognite/cdf-utilities';\nimport UploadGCS from '@cognite/gcs-browser-upload';\nimport { sleep } from '../helpers';\nimport { newestCall } from './sorting';\n\n// Using react-query#useQuery calls the function with a QueryKey as the first\n// argument, useMutation does not.\n\nconst getCallsSdk = ({\n  id,\n  scheduleId\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  const filter = scheduleId ? {\n    scheduleId\n  } : {};\n  return sdk.post(`/api/v1/projects/${getProject()}/functions/${id}/calls/list`, {\n    data: {\n      filter\n    }\n  }).then(response => response.data?.items);\n};\nexport const getCalls = async (_, args) => {\n  return getCallsSdk(args);\n};\nexport const getLatestCalls = async (_, args) => {\n  const requests = args.map(a => getCallsSdk(a));\n  const results = await Promise.all(requests);\n  return args.reduce((accl, {\n    id\n  }, index) => ({\n    ...accl,\n    [id]: results[index].sort(newestCall)[0]\n  }), {});\n};\nexport const getCall = (_, {\n  id,\n  callId\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk.get(`/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}`).then(response => response.data);\n};\nexport const getResponse = (_, {\n  id,\n  callId\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk.get(`/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}/response`).then(response => response?.data?.response);\n};\nexport const getLogs = (_, {\n  id,\n  callId\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk.get(`/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}/logs`).then(response => response?.data?.items);\n};\nexport const createFunctionCall = async ({\n  id,\n  data,\n  isOIDC\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  const {\n    nonce\n  } = isOIDC && (await createSession());\n  return sdk.post(`/api/v1/projects/${getProject()}/functions/${id}/call`, {\n    data: {\n      data: data || {},\n      nonce\n    }\n  }).then(response => response?.data);\n};\nexport const createSchedule = async ({\n  schedule,\n  clientCredentials\n}) => {\n  const {\n    nonce\n  } = !!clientCredentials && (await createSession(clientCredentials));\n  return sdk.post(`/api/v1/projects/${getProject()}/functions/schedules`, {\n    data: {\n      items: [{\n        ...schedule,\n        nonce\n      }]\n    }\n  }).then(response => response?.data);\n};\n\n// Get the input data for scheduling item\nexport const getScheduleData = scheduleId => {\n  return sdk.get(`/api/v1/projects/${getProject()}/functions/schedules/${scheduleId}/input_data`).then(response => response.data?.data);\n};\nexport const deleteSchedule = id => sdk.post(`/api/v1/projects/${getProject()}/functions/schedules/delete`, {\n  data: {\n    items: [{\n      id\n    }]\n  }\n}).then(response => response?.data);\nconst createFunction = cogfunction => {\n  return sdk.post(`/api/v1/projects/${getProject()}/functions`, {\n    data: {\n      items: [cogfunction]\n    }\n  }).then(response => response?.data);\n};\nexport const deleteFunction = async ({\n  id,\n  fileId\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  const deleteResponse = await sdk.post(`/api/v1/projects/${getProject()}/functions/delete`, {\n    data: {\n      items: [{\n        id\n      }]\n    }\n  }).then(response => response?.data);\n  if (fileId) {\n    await sdk.files.delete([{\n      id: fileId\n    }]);\n  }\n  return deleteResponse;\n};\nconst GCSUploader = (file, uploadUrl, callback = () => {}) => {\n  // This is what is recommended from google when uploading files.\n  // https://github.com/QubitProducts/gcs-browser-upload\n  const chunkMultiple = Math.min(Math.max(2,\n  // 0.5MB min chunks\n  Math.ceil((file.size || 1) / 20 * 262144) // will divide into 20 segments\n  ), 200 // 50 MB max\n  );\n\n  return new UploadGCS({\n    id: 'datastudio-upload',\n    url: uploadUrl,\n    file,\n    chunkSize: 262144 * chunkMultiple,\n    onChunkUpload: callback\n  });\n};\n_c = GCSUploader;\nconst uploadFile = async (file, dataSetId) => {\n  const {\n    uploadUrl,\n    id\n  } = await sdk.files.upload({\n    name: file.name,\n    source: 'Datastudio',\n    dataSetId\n  });\n  if (!uploadUrl) {\n    throw new Error('Upload error, did not recieve \"uploadUrl\"');\n  }\n  if (!id) {\n    throw new Error('Upload error, did not recieve \"id\"');\n  }\n  const currentUpload = await GCSUploader(file, uploadUrl, info => {\n    file.response = info;\n    file.percent = info.uploadedBytes / info.totalBytes * 100;\n  });\n  await currentUpload.start();\n  let fileInfo = await sdk.files.retrieve([{\n    id\n  }]).then(r => r[0]);\n  let retries = 0;\n  while (!fileInfo.uploaded && retries <= 10) {\n    retries += 1;\n    /* eslint-disable no-await-in-loop */\n    await sleep(retries * 1000);\n    fileInfo = await sdk.files.retrieve([{\n      id\n    }]).then(r => r[0]);\n  }\n  if (!fileInfo.uploaded) {\n    return Promise.reject(fileInfo.id);\n  }\n  return id;\n};\nexport const uploadFunction = async ({\n  data,\n  file,\n  dataSetId\n}) => {\n  const fileId = await uploadFile(file, dataSetId);\n  try {\n    const {\n      id\n    } = await createFunction({\n      ...data,\n      fileId\n    });\n    return id;\n  } catch (e) {\n    await sdk.files.delete([{\n      id: fileId\n    }]);\n    throw e;\n  }\n};\nexport const createSession = clientCredentials => {\n  return sdk.post(`/api/v1/projects/${getProject()}/sessions`, {\n    data: {\n      items: [clientCredentials || {\n        tokenExchange: true\n      }]\n    }\n  }).then(response => response?.data.items[0]);\n};\nexport const isOIDCFlow = () => {\n  const {\n    flow\n  } = getFlow();\n  return flow !== 'COGNITE_AUTH';\n};\nvar _c;\n$RefreshReg$(_c, \"GCSUploader\");","map":{"version":3,"names":["sdk","getFlow","getProject","UploadGCS","sleep","newestCall","getCallsSdk","id","scheduleId","Error","filter","post","data","then","response","items","getCalls","_","args","getLatestCalls","requests","map","a","results","Promise","all","reduce","accl","index","sort","getCall","callId","get","getResponse","getLogs","createFunctionCall","isOIDC","nonce","createSession","createSchedule","schedule","clientCredentials","getScheduleData","deleteSchedule","createFunction","cogfunction","deleteFunction","fileId","deleteResponse","files","delete","GCSUploader","file","uploadUrl","callback","chunkMultiple","Math","min","max","ceil","size","url","chunkSize","onChunkUpload","uploadFile","dataSetId","upload","name","source","currentUpload","info","percent","uploadedBytes","totalBytes","start","fileInfo","retrieve","r","retries","uploaded","reject","uploadFunction","e","tokenExchange","isOIDCFlow","flow"],"sources":["/Volumes/csvol/fusion/apps/functions-ui/src/utils/api.ts"],"sourcesContent":["import { QueryKey } from '@tanstack/react-query';\nimport { UploadFile } from 'antd/lib/upload/interface';\n\nimport sdk, { getFlow } from '@cognite/cdf-sdk-singleton';\nimport { getProject } from '@cognite/cdf-utilities';\nimport UploadGCS from '@cognite/gcs-browser-upload';\nimport { FileUploadResponse } from '@cognite/sdk';\n\nimport { sleep } from '../helpers';\nimport {\n  CogFunctionUpload,\n  CogFunction,\n  GetCallArgs,\n  CallResponse,\n  GetCallsArgs,\n  Call,\n  CreateScheduleApiParams,\n} from '../types';\n\nimport { newestCall } from './sorting';\n\n// Using react-query#useQuery calls the function with a QueryKey as the first\n// argument, useMutation does not.\n\nconst getCallsSdk = ({ id, scheduleId }: GetCallsArgs): Promise<Call[]> => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  const filter = scheduleId ? { scheduleId } : {};\n  return sdk\n    .post(`/api/v1/projects/${getProject()}/functions/${id}/calls/list`, {\n      data: { filter },\n    })\n    .then((response) => response.data?.items);\n};\n\nexport const getCalls = async (_: QueryKey, args: GetCallsArgs) => {\n  return getCallsSdk(args);\n};\n\nexport const getLatestCalls = async (_: QueryKey, args: GetCallsArgs[]) => {\n  const requests = args.map((a) => getCallsSdk(a));\n  const results = await Promise.all(requests);\n  return args.reduce(\n    (accl, { id }, index) => ({\n      ...accl,\n      [id]: results[index].sort(newestCall)[0],\n    }),\n    {}\n  );\n};\n\nexport const getCall = (_: QueryKey, { id, callId }: GetCallArgs) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk\n    .get(`/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}`)\n    .then((response) => response.data);\n};\n\ntype GetResponseArgs = {\n  id: number;\n  callId: number;\n};\nexport const getResponse = (_: QueryKey, { id, callId }: GetResponseArgs) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk\n    .get(\n      `/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}/response`\n    )\n    .then((response) => response?.data?.response);\n};\n\nexport const getLogs = (_: QueryKey, { id, callId }: GetResponseArgs) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  if (!callId) {\n    throw new Error('callId missing');\n  }\n  return sdk\n    .get(\n      `/api/v1/projects/${getProject()}/functions/${id}/calls/${callId}/logs`\n    )\n    .then((response) => response?.data?.items);\n};\n\nexport const createFunctionCall = async ({\n  id,\n  data,\n  isOIDC,\n}: {\n  id: number;\n  data: any;\n  isOIDC?: boolean;\n}): Promise<CallResponse> => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n\n  const { nonce } = isOIDC && (await createSession());\n  return sdk\n    .post(`/api/v1/projects/${getProject()}/functions/${id}/call`, {\n      data: { data: data || {}, nonce },\n    })\n    .then((response) => response?.data);\n};\n\nexport const createSchedule = async ({\n  schedule,\n  clientCredentials,\n}: CreateScheduleApiParams) => {\n  const { nonce } =\n    !!clientCredentials && (await createSession(clientCredentials));\n  return sdk\n    .post(`/api/v1/projects/${getProject()}/functions/schedules`, {\n      data: { items: [{ ...schedule, nonce }] },\n    })\n    .then((response) => response?.data);\n};\n\n// Get the input data for scheduling item\nexport const getScheduleData = (scheduleId: number) => {\n  return sdk\n    .get(\n      `/api/v1/projects/${getProject()}/functions/schedules/${scheduleId}/input_data`\n    )\n    .then((response) => response.data?.data);\n};\n\nexport const deleteSchedule = (id: number) =>\n  sdk\n    .post(`/api/v1/projects/${getProject()}/functions/schedules/delete`, {\n      data: { items: [{ id }] },\n    })\n    .then((response) => response?.data);\n\nconst createFunction = (\n  cogfunction: CogFunctionUpload\n): Promise<CogFunction> => {\n  return sdk\n    .post(`/api/v1/projects/${getProject()}/functions`, {\n      data: { items: [cogfunction] },\n    })\n    .then((response) => response?.data);\n};\nexport const deleteFunction = async ({\n  id,\n  fileId,\n}: {\n  id: number;\n  fileId?: number;\n}) => {\n  if (!id) {\n    throw new Error('id missing');\n  }\n  const deleteResponse = await sdk\n    .post(`/api/v1/projects/${getProject()}/functions/delete`, {\n      data: { items: [{ id }] },\n    })\n    .then((response) => response?.data);\n  if (fileId) {\n    await sdk.files.delete([{ id: fileId }]);\n  }\n  return deleteResponse;\n};\n\nconst GCSUploader = (\n  file: Blob | UploadFile,\n  uploadUrl: string,\n  callback: (info: any) => void = () => {}\n) => {\n  // This is what is recommended from google when uploading files.\n  // https://github.com/QubitProducts/gcs-browser-upload\n  const chunkMultiple = Math.min(\n    Math.max(\n      2, // 0.5MB min chunks\n      Math.ceil(((file.size || 1) / 20) * 262144) // will divide into 20 segments\n    ),\n    200 // 50 MB max\n  );\n\n  return new UploadGCS({\n    id: 'datastudio-upload',\n    url: uploadUrl,\n    file,\n    chunkSize: 262144 * chunkMultiple,\n    onChunkUpload: callback,\n  });\n};\n\nconst uploadFile = async (file: UploadFile, dataSetId: number | undefined) => {\n  const { uploadUrl, id } = (await sdk.files.upload({\n    name: file.name,\n    source: 'Datastudio',\n    dataSetId,\n  })) as FileUploadResponse;\n  if (!uploadUrl) {\n    throw new Error('Upload error, did not recieve \"uploadUrl\"');\n  }\n  if (!id) {\n    throw new Error('Upload error, did not recieve \"id\"');\n  }\n\n  const currentUpload = await GCSUploader(file, uploadUrl, (info: any) => {\n    file.response = info;\n    file.percent = (info.uploadedBytes / info.totalBytes) * 100;\n  });\n\n  await currentUpload.start();\n\n  let fileInfo = await sdk.files.retrieve([{ id }]).then((r) => r[0]);\n  let retries = 0;\n  while (!fileInfo.uploaded && retries <= 10) {\n    retries += 1;\n    /* eslint-disable no-await-in-loop */\n    await sleep(retries * 1000);\n    fileInfo = await sdk.files.retrieve([{ id }]).then((r) => r[0]);\n  }\n\n  if (!fileInfo.uploaded) {\n    return Promise.reject(fileInfo.id);\n  }\n\n  return id;\n};\n\nexport const uploadFunction = async ({\n  data,\n  file,\n  dataSetId,\n}: {\n  data: Omit<CogFunctionUpload, 'fileId'>;\n  file: UploadFile;\n  dataSetId: number | undefined;\n}) => {\n  const fileId = await uploadFile(file, dataSetId);\n  try {\n    const { id } = await createFunction({ ...data, fileId });\n    return id;\n  } catch (e) {\n    await sdk.files.delete([{ id: fileId }]);\n    throw e;\n  }\n};\n\nexport const createSession = (clientCredentials?: {\n  clientId: string;\n  clientSecret: string;\n}) => {\n  return sdk\n    .post(`/api/v1/projects/${getProject()}/sessions`, {\n      data: {\n        items: [clientCredentials || { tokenExchange: true }],\n      },\n    })\n    .then((response) => response?.data.items[0]);\n};\n\nexport const isOIDCFlow = () => {\n  const { flow } = getFlow();\n  return flow !== 'COGNITE_AUTH';\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}