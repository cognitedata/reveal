{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { adaptPresetRangeToPlotlyData } from '../utils/adaptPresetRangeToPlotlyData';\nimport { adaptToPlotlyPlotData } from '../utils/adaptToPlotlyPlotData';\nimport { checkIsEmptyData } from '../utils/checkIsEmptyData';\nexport const usePlotData = ({\n  data,\n  showMarkers,\n  variant,\n  presetRange\n}) => {\n  _s();\n  const isEmptyData = useMemo(() => {\n    return checkIsEmptyData(data);\n  }, [data]);\n  const plotData = useMemo(() => {\n    if (isEmptyData && presetRange) {\n      return adaptPresetRangeToPlotlyData(presetRange);\n    }\n    return adaptToPlotlyPlotData({\n      data,\n      showMarkers,\n      variant\n    });\n  }, [data, isEmptyData, presetRange, showMarkers, variant]);\n  return {\n    plotData,\n    isEmptyData\n  };\n};\n_s(usePlotData, \"Aj7zhflnjPIQZZfoJuCJOFSKe3Y=\");","map":{"version":3,"names":["useMemo","adaptPresetRangeToPlotlyData","adaptToPlotlyPlotData","checkIsEmptyData","usePlotData","data","showMarkers","variant","presetRange","isEmptyData","plotData"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/LineChart/hooks/usePlotData.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { Data, PresetPlotRange, Variant } from '../types';\nimport { adaptPresetRangeToPlotlyData } from '../utils/adaptPresetRangeToPlotlyData';\nimport { adaptToPlotlyPlotData } from '../utils/adaptToPlotlyPlotData';\nimport { checkIsEmptyData } from '../utils/checkIsEmptyData';\n\nexport interface Props {\n  data: Data | Data[];\n  showMarkers: boolean;\n  variant?: Variant;\n  presetRange?: PresetPlotRange;\n}\n\nexport const usePlotData = ({\n  data,\n  showMarkers,\n  variant,\n  presetRange,\n}: Props) => {\n  const isEmptyData = useMemo(() => {\n    return checkIsEmptyData(data);\n  }, [data]);\n\n  const plotData = useMemo(() => {\n    if (isEmptyData && presetRange) {\n      return adaptPresetRangeToPlotlyData(presetRange);\n    }\n    return adaptToPlotlyPlotData({ data, showMarkers, variant });\n  }, [data, isEmptyData, presetRange, showMarkers, variant]);\n\n  return { plotData, isEmptyData };\n};\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAG/B,SAASC,4BAA4B,QAAQ,uCAAuC;AACpF,SAASC,qBAAqB,QAAQ,gCAAgC;AACtE,SAASC,gBAAgB,QAAQ,2BAA2B;AAS5D,OAAO,MAAMC,WAAW,GAAG,CAAC;EAC1BC,IAAI;EACJC,WAAW;EACXC,OAAO;EACPC;AACK,CAAC,KAAK;EAAA;EACX,MAAMC,WAAW,GAAGT,OAAO,CAAC,MAAM;IAChC,OAAOG,gBAAgB,CAACE,IAAI,CAAC;EAC/B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMK,QAAQ,GAAGV,OAAO,CAAC,MAAM;IAC7B,IAAIS,WAAW,IAAID,WAAW,EAAE;MAC9B,OAAOP,4BAA4B,CAACO,WAAW,CAAC;IAClD;IACA,OAAON,qBAAqB,CAAC;MAAEG,IAAI;MAAEC,WAAW;MAAEC;IAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACF,IAAI,EAAEI,WAAW,EAAED,WAAW,EAAEF,WAAW,EAAEC,OAAO,CAAC,CAAC;EAE1D,OAAO;IAAEG,QAAQ;IAAED;EAAY,CAAC;AAClC,CAAC;AAAC,GAlBWL,WAAW"},"metadata":{},"sourceType":"module"}