{"ast":null,"code":"import omit from 'lodash/omit';\nexport const getTimeseriesSingleAggregate = (sdk, query) => {\n  return sdk.post(`/api/v1/projects/${sdk.project}/timeseries/data/aggregate/single`, {\n    headers: {\n      'cdf-version': 'alpha'\n    },\n    data: query\n  }).then(({\n    data\n  }) => {\n    const {\n      datapoints,\n      ...rest\n    } = data.items[0];\n    return {\n      ...rest,\n      data: omit(datapoints[0], 'timestamp')\n    };\n  });\n};","map":{"version":3,"names":["omit","getTimeseriesSingleAggregate","sdk","query","post","project","headers","data","then","datapoints","rest","items"],"sources":["/Volumes/csvol/fusion/libs/shared/plotting-components/src/TimeseriesChart/domain/service/network/getTimeseriesSingleAggregate.ts"],"sourcesContent":["import omit from 'lodash/omit';\n\nimport {\n  CogniteClient,\n  CursorResponse,\n  DatapointAggregates,\n} from '@cognite/sdk';\n\nimport {\n  TimeseriesSingleAggregate,\n  TimeseriesSingleAggregateQuery,\n} from '../types';\n\nexport const getTimeseriesSingleAggregate = (\n  sdk: CogniteClient,\n  query: TimeseriesSingleAggregateQuery\n): Promise<TimeseriesSingleAggregate> => {\n  return sdk\n    .post<CursorResponse<DatapointAggregates[]>>(\n      `/api/v1/projects/${sdk.project}/timeseries/data/aggregate/single`,\n      {\n        headers: {\n          'cdf-version': 'alpha',\n        },\n        data: query,\n      }\n    )\n    .then(({ data }) => {\n      const { datapoints, ...rest } = data.items[0];\n\n      return {\n        ...rest,\n        data: omit(datapoints[0], 'timestamp'),\n      };\n    });\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,aAAa;AAa9B,OAAO,MAAMC,4BAA4B,GAAG,CAC1CC,GAAkB,EAClBC,KAAqC,KACE;EACvC,OAAOD,GAAG,CACPE,IAAI,CACF,oBAAmBF,GAAG,CAACG,OAAQ,mCAAkC,EAClE;IACEC,OAAO,EAAE;MACP,aAAa,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEJ;EACR,CAAC,CACF,CACAK,IAAI,CAAC,CAAC;IAAED;EAAK,CAAC,KAAK;IAClB,MAAM;MAAEE,UAAU;MAAE,GAAGC;IAAK,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IAE7C,OAAO;MACL,GAAGD,IAAI;MACPH,IAAI,EAAEP,IAAI,CAACS,UAAU,CAAC,CAAC,CAAC,EAAE,WAAW;IACvC,CAAC;EACH,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module"}